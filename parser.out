Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> BEGIN PROGRAM createDirProc ID altaPrograma SEMICOLON a LBRACKET b main RBRACKET SEMICOLON END
Rule 2     createDirProc -> <empty>
Rule 3     altaPrograma -> <empty>
Rule 4     a -> vars
Rule 5     a -> <empty>
Rule 6     vars -> VAR createGlobalTable c
Rule 7     createGlobalTable -> <empty>
Rule 8     c -> f SEMICOLON e
Rule 9     f -> d COLON tipo saveTipo
Rule 10    f -> matrix
Rule 11    saveTipo -> <empty>
Rule 12    d -> ID saveVarID
Rule 13    d -> ID saveVarID COMMA d
Rule 14    saveVarID -> <empty>
Rule 15    tipo -> INT
Rule 16    tipo -> FLOAT
Rule 17    tipo -> BOOL
Rule 18    tipo -> STRING
Rule 19    matrix -> mataux COLON INT
Rule 20    mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET
Rule 21    mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET COMMA mataux
Rule 22    saveMatrixID -> <empty>
Rule 23    e -> c
Rule 24    e -> <empty>
Rule 25    b -> funcion b
Rule 26    b -> <empty>
Rule 27    funcion -> FUNC g ID altaFuncion LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno
Rule 28    accionRetorno -> <empty>
Rule 29    funcvars -> vars
Rule 30    funcvars -> <empty>
Rule 31    altaFuncion -> <empty>
Rule 32    altaInicioFunc -> <empty>
Rule 33    g -> INT
Rule 34    g -> BOOL
Rule 35    g -> FLOAT
Rule 36    g -> VOID
Rule 37    h -> param
Rule 38    h -> <empty>
Rule 39    param -> ID COLON tipo saveParamVar j
Rule 40    saveParamVar -> <empty>
Rule 41    j -> COMMA param
Rule 42    j -> <empty>
Rule 43    main -> MAIN altaMain LPARENTHESIS RPARENTHESIS k bloque SEMICOLON ENDFUNC
Rule 44    altaMain -> <empty>
Rule 45    k -> vars
Rule 46    k -> <empty>
Rule 47    bloque -> LBRACKET l RBRACKET
Rule 48    l -> estatuto l
Rule 49    l -> <empty>
Rule 50    estatuto -> estatutotipos SEMICOLON
Rule 51    estatutotipos -> asignacion
Rule 52    estatutotipos -> condicion
Rule 53    estatutotipos -> ciclo
Rule 54    estatutotipos -> escritura
Rule 55    estatutotipos -> llamadafunc
Rule 56    estatutotipos -> specialfunc
Rule 57    estatutotipos -> return
Rule 58    asignacion -> ID exp_asign aa EQUAL exp_12 expresion exp_13
Rule 59    exp_asign -> <empty>
Rule 60    exp_12 -> <empty>
Rule 61    exp_13 -> <empty>
Rule 62    aa -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET
Rule 63    aa -> <empty>
Rule 64    expresion -> specialexp m exp_9 n
Rule 65    m -> o exp_8 specialexp
Rule 66    m -> <empty>
Rule 67    o -> AND
Rule 68    o -> OR
Rule 69    exp_8 -> <empty>
Rule 70    exp_9 -> <empty>
Rule 71    n -> expresion
Rule 72    n -> <empty>
Rule 73    specialexp -> exp p exp_11
Rule 74    p -> q exp_10 exp
Rule 75    p -> <empty>
Rule 76    q -> GREATERTHAN
Rule 77    q -> LESSTHAN
Rule 78    q -> NOTEQUAL
Rule 79    q -> LESSEQUAL
Rule 80    q -> GREATEREQUAL
Rule 81    q -> EQUALEQUAL
Rule 82    exp_10 -> <empty>
Rule 83    exp_11 -> <empty>
Rule 84    exp -> termino exp_5 ab
Rule 85    exp_5 -> <empty>
Rule 86    ab -> ab2 exp_3 exp
Rule 87    ab -> <empty>
Rule 88    ab2 -> PLUS
Rule 89    ab2 -> MINUS
Rule 90    exp_3 -> <empty>
Rule 91    termino -> factor exp_4 ac
Rule 92    exp_4 -> <empty>
Rule 93    ac -> ac2 exp_2 termino
Rule 94    ac -> <empty>
Rule 95    exp_2 -> <empty>
Rule 96    ac2 -> PRODUCT
Rule 97    ac2 -> DIVISION
Rule 98    factor -> ad
Rule 99    factor -> ae
Rule 100   factor -> af
Rule 101   factor -> opfunc
Rule 102   ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
Rule 103   exp_6 -> <empty>
Rule 104   exp_7 -> <empty>
Rule 105   ae -> ag varcte
Rule 106   af -> llamadafunc
Rule 107   ag -> PLUS
Rule 108   ag -> MINUS
Rule 109   ag -> <empty>
Rule 110   varcte -> CTEINT exp_cte_int
Rule 111   varcte -> CTEFLOAT exp_cte_float
Rule 112   varcte -> ctebool exp_cte_bool
Rule 113   varcte -> CTESTRING exp_cte_string
Rule 114   varcte -> ID r exp_1
Rule 115   exp_cte_int -> <empty>
Rule 116   exp_cte_float -> <empty>
Rule 117   ctebool -> TRUE
Rule 118   ctebool -> FALSE
Rule 119   exp_cte_bool -> <empty>
Rule 120   exp_cte_string -> <empty>
Rule 121   r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET
Rule 122   r -> <empty>
Rule 123   exp_1 -> <empty>
Rule 124   condicion -> IF LPARENTHESIS expresion RPARENTHESIS estatuto_if_1 bloque s estatuto_endif
Rule 125   estatuto_if_1 -> <empty>
Rule 126   s -> ELSE estatuto_else bloque
Rule 127   s -> <empty>
Rule 128   estatuto_else -> <empty>
Rule 129   estatuto_endif -> <empty>
Rule 130   ciclo -> WHILE estatuto_while_1 LPARENTHESIS expresion RPARENTHESIS estatuto_while_2 bloque estatuto_while_3
Rule 131   estatuto_while_1 -> <empty>
Rule 132   estatuto_while_2 -> <empty>
Rule 133   estatuto_while_3 -> <empty>
Rule 134   escritura -> PRINT LPARENTHESIS ah RPARENTHESIS
Rule 135   estatuto_print -> <empty>
Rule 136   ah -> expresion estatuto_print ai
Rule 137   ah -> CTESTRING estatuto_print ai
Rule 138   ai -> COMMA ah
Rule 139   ai -> <empty>
Rule 140   llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
Rule 141   estatuto_llamadafunc_1 -> <empty>
Rule 142   t -> u
Rule 143   t -> <empty>
Rule 144   u -> exp
Rule 145   u -> exp COMMA u
Rule 146   return -> RETURN exp
Rule 147   specialfunc -> opfunc
Rule 148   specialfunc -> dibujafunc
Rule 149   opfunc -> randomfunc
Rule 150   randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS
Rule 151   dibujafunc -> al am an
Rule 152   al -> linewidthfunc
Rule 153   al -> <empty>
Rule 154   am -> linecolorfunc
Rule 155   am -> <empty>
Rule 156   an -> dibuja
Rule 157   an -> startfillfunc dibuja stopfillfunc
Rule 158   linewidthfunc -> LINEWIDTH LPARENTHESIS exp RPARENTHESIS SEMICOLON
Rule 159   linecolorfunc -> LINECOLOR LPARENTHESIS exp RPARENTHESIS SEMICOLON
Rule 160   dibuja -> v RPARENTHESIS
Rule 161   v -> LINE lineparam
Rule 162   v -> SQUARE squareparam
Rule 163   v -> CIRCLE circleparam
Rule 164   v -> STAR starparam
Rule 165   v -> TRIANGLE triangleparam
Rule 166   v -> ARC arcparam
Rule 167   lineparam -> LPARENTHESIS exp COMMA exp COMMA exp COMMA exp
Rule 168   squareparam -> LPARENTHESIS exp COMMA exp COMMA exp
Rule 169   circleparam -> LPARENTHESIS exp COMMA exp COMMA exp
Rule 170   starparam -> LPARENTHESIS exp COMMA exp COMMA exp
Rule 171   triangleparam -> LPARENTHESIS exp COMMA exp COMMA exp
Rule 172   arcparam -> LPARENTHESIS exp COMMA exp COMMA exp COMMA exp COMMA exp
Rule 173   startfillfunc -> STARTFILL LPARENTHESIS exp RPARENTHESIS SEMICOLON
Rule 174   stopfillfunc -> STOPFILL LPARENTHESIS RPARENTHESIS

Terminals, with rules where they appear

AND                  : 67
ARC                  : 166
BEGIN                : 1
BOOL                 : 17 34
CALL                 : 140
CIRCLE               : 163
COLON                : 9 19 39
COMMA                : 13 21 41 138 145 150 167 167 167 168 168 169 169 170 170 171 171 172 172 172 172
CTEFLOAT             : 111
CTEINT               : 20 20 21 21 110
CTESTRING            : 113 137
DIVISION             : 97
ELSE                 : 126
END                  : 1
ENDFUNC              : 27 43
EQUAL                : 58
EQUALEQUAL           : 81
FALSE                : 118
FLOAT                : 16 35
FUNC                 : 27
GREATEREQUAL         : 80
GREATERTHAN          : 76
ID                   : 1 12 13 20 21 27 39 58 114 140
IF                   : 124
INT                  : 15 19 33
LBRACKET             : 1 47
LESSEQUAL            : 79
LESSTHAN             : 77
LINE                 : 161
LINECOLOR            : 159
LINEWIDTH            : 158
LPARENTHESIS         : 27 43 102 124 130 134 140 150 158 159 167 168 169 170 171 172 173 174
LSQUAREBRACKET       : 20 20 21 21 62 62 121 121
MAIN                 : 43
MINUS                : 89 108
NOTEQUAL             : 78
OR                   : 68
PLUS                 : 88 107
PRINT                : 134
PRODUCT              : 96
PROGRAM              : 1
RANDOM               : 150
RBRACKET             : 1 47
RETURN               : 146
RPARENTHESIS         : 27 43 102 124 130 134 140 150 158 159 160 173 174
RSQUAREBRACKET       : 20 20 21 21 62 62 121 121
SEMICOLON            : 1 1 8 27 43 50 158 159 173
SQUARE               : 162
STAR                 : 164
STARTFILL            : 173
STOPFILL             : 174
STRING               : 18
TRIANGLE             : 165
TRUE                 : 117
VAR                  : 6
VOID                 : 36
WHILE                : 130
error                : 

Nonterminals, with rules where they appear

a                    : 1
aa                   : 58
ab                   : 84
ab2                  : 86
ac                   : 91
ac2                  : 93
accionRetorno        : 27
ad                   : 98
ae                   : 99
af                   : 100
ag                   : 105
ah                   : 134 138
ai                   : 136 137
al                   : 151
altaFuncion          : 27
altaInicioFunc       : 27
altaMain             : 43
altaPrograma         : 1
am                   : 151
an                   : 151
arcparam             : 166
asignacion           : 51
b                    : 1 25
bloque               : 27 43 124 126 130
c                    : 6 23
ciclo                : 53
circleparam          : 163
condicion            : 52
createDirProc        : 1
createGlobalTable    : 6
ctebool              : 112
d                    : 9 13
dibuja               : 156 157
dibujafunc           : 148
e                    : 8
escritura            : 54
estatuto             : 48
estatuto_else        : 126
estatuto_endif       : 124
estatuto_if_1        : 124
estatuto_llamadafunc_1 : 140
estatuto_print       : 136 137
estatuto_while_1     : 130
estatuto_while_2     : 130
estatuto_while_3     : 130
estatutotipos        : 50
exp                  : 62 62 73 74 86 121 121 144 145 146 150 150 158 159 167 167 167 167 168 168 168 169 169 169 170 170 170 171 171 171 172 172 172 172 172 173
exp_1                : 114
exp_10               : 74
exp_11               : 73
exp_12               : 58
exp_13               : 58
exp_2                : 93
exp_3                : 86
exp_4                : 91
exp_5                : 84
exp_6                : 102
exp_7                : 102
exp_8                : 65
exp_9                : 64
exp_asign            : 58
exp_cte_bool         : 112
exp_cte_float        : 111
exp_cte_int          : 110
exp_cte_string       : 113
expresion            : 58 71 102 124 130 136
f                    : 8
factor               : 91
funcion              : 25
funcvars             : 27
g                    : 27
h                    : 27
j                    : 39
k                    : 43
l                    : 47 48
linecolorfunc        : 154
lineparam            : 161
linewidthfunc        : 152
llamadafunc          : 55 106
m                    : 64
main                 : 1
mataux               : 19 21
matrix               : 10
n                    : 64
o                    : 65
opfunc               : 101 147
p                    : 73
param                : 37 41
programa             : 0
q                    : 74
r                    : 114
randomfunc           : 149
return               : 57
s                    : 124
saveMatrixID         : 20 21
saveParamVar         : 39
saveTipo             : 9
saveVarID            : 12 13
specialexp           : 64 65
specialfunc          : 56
squareparam          : 162
starparam            : 164
startfillfunc        : 157
stopfillfunc         : 157
t                    : 140
termino              : 84 93
tipo                 : 9 39
triangleparam        : 165
u                    : 142 145
v                    : 160
varcte               : 105
vars                 : 4 29 45

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . BEGIN PROGRAM createDirProc ID altaPrograma SEMICOLON a LBRACKET b main RBRACKET SEMICOLON END

    BEGIN           shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> BEGIN . PROGRAM createDirProc ID altaPrograma SEMICOLON a LBRACKET b main RBRACKET SEMICOLON END

    PROGRAM         shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (1) programa -> BEGIN PROGRAM . createDirProc ID altaPrograma SEMICOLON a LBRACKET b main RBRACKET SEMICOLON END
    (2) createDirProc -> .

    ID              reduce using rule 2 (createDirProc -> .)

    createDirProc                  shift and go to state 4

state 4

    (1) programa -> BEGIN PROGRAM createDirProc . ID altaPrograma SEMICOLON a LBRACKET b main RBRACKET SEMICOLON END

    ID              shift and go to state 5


state 5

    (1) programa -> BEGIN PROGRAM createDirProc ID . altaPrograma SEMICOLON a LBRACKET b main RBRACKET SEMICOLON END
    (3) altaPrograma -> .

    SEMICOLON       reduce using rule 3 (altaPrograma -> .)

    altaPrograma                   shift and go to state 6

state 6

    (1) programa -> BEGIN PROGRAM createDirProc ID altaPrograma . SEMICOLON a LBRACKET b main RBRACKET SEMICOLON END

    SEMICOLON       shift and go to state 7


state 7

    (1) programa -> BEGIN PROGRAM createDirProc ID altaPrograma SEMICOLON . a LBRACKET b main RBRACKET SEMICOLON END
    (4) a -> . vars
    (5) a -> .
    (6) vars -> . VAR createGlobalTable c

    LBRACKET        reduce using rule 5 (a -> .)
    VAR             shift and go to state 10

    a                              shift and go to state 8
    vars                           shift and go to state 9

state 8

    (1) programa -> BEGIN PROGRAM createDirProc ID altaPrograma SEMICOLON a . LBRACKET b main RBRACKET SEMICOLON END

    LBRACKET        shift and go to state 11


state 9

    (4) a -> vars .

    LBRACKET        reduce using rule 4 (a -> vars .)


state 10

    (6) vars -> VAR . createGlobalTable c
    (7) createGlobalTable -> .

    ID              reduce using rule 7 (createGlobalTable -> .)

    createGlobalTable              shift and go to state 12

state 11

    (1) programa -> BEGIN PROGRAM createDirProc ID altaPrograma SEMICOLON a LBRACKET . b main RBRACKET SEMICOLON END
    (25) b -> . funcion b
    (26) b -> .
    (27) funcion -> . FUNC g ID altaFuncion LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno

    MAIN            reduce using rule 26 (b -> .)
    FUNC            shift and go to state 14

    b                              shift and go to state 15
    funcion                        shift and go to state 13

state 12

    (6) vars -> VAR createGlobalTable . c
    (8) c -> . f SEMICOLON e
    (9) f -> . d COLON tipo saveTipo
    (10) f -> . matrix
    (12) d -> . ID saveVarID
    (13) d -> . ID saveVarID COMMA d
    (19) matrix -> . mataux COLON INT
    (20) mataux -> . ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET
    (21) mataux -> . ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET COMMA mataux

    ID              shift and go to state 21

    c                              shift and go to state 16
    d                              shift and go to state 17
    f                              shift and go to state 18
    mataux                         shift and go to state 20
    matrix                         shift and go to state 19

state 13

    (25) b -> funcion . b
    (25) b -> . funcion b
    (26) b -> .
    (27) funcion -> . FUNC g ID altaFuncion LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno

    MAIN            reduce using rule 26 (b -> .)
    FUNC            shift and go to state 14

    b                              shift and go to state 22
    funcion                        shift and go to state 13

state 14

    (27) funcion -> FUNC . g ID altaFuncion LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno
    (33) g -> . INT
    (34) g -> . BOOL
    (35) g -> . FLOAT
    (36) g -> . VOID

    INT             shift and go to state 27
    BOOL            shift and go to state 26
    FLOAT           shift and go to state 25
    VOID            shift and go to state 24

    g                              shift and go to state 23

state 15

    (1) programa -> BEGIN PROGRAM createDirProc ID altaPrograma SEMICOLON a LBRACKET b . main RBRACKET SEMICOLON END
    (43) main -> . MAIN altaMain LPARENTHESIS RPARENTHESIS k bloque SEMICOLON ENDFUNC

    MAIN            shift and go to state 28

    main                           shift and go to state 29

state 16

    (6) vars -> VAR createGlobalTable c .

    LBRACKET        reduce using rule 6 (vars -> VAR createGlobalTable c .)


state 17

    (9) f -> d . COLON tipo saveTipo

    COLON           shift and go to state 30


state 18

    (8) c -> f . SEMICOLON e

    SEMICOLON       shift and go to state 31


state 19

    (10) f -> matrix .

    SEMICOLON       reduce using rule 10 (f -> matrix .)


state 20

    (19) matrix -> mataux . COLON INT

    COLON           shift and go to state 32


state 21

    (12) d -> ID . saveVarID
    (13) d -> ID . saveVarID COMMA d
    (20) mataux -> ID . saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET
    (21) mataux -> ID . saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET COMMA mataux
    (14) saveVarID -> .
    (22) saveMatrixID -> .

    COMMA           reduce using rule 14 (saveVarID -> .)
    COLON           reduce using rule 14 (saveVarID -> .)
    LSQUAREBRACKET  reduce using rule 22 (saveMatrixID -> .)

    saveVarID                      shift and go to state 34
    saveMatrixID                   shift and go to state 33

state 22

    (25) b -> funcion b .

    MAIN            reduce using rule 25 (b -> funcion b .)


state 23

    (27) funcion -> FUNC g . ID altaFuncion LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno

    ID              shift and go to state 35


state 24

    (36) g -> VOID .

    ID              reduce using rule 36 (g -> VOID .)


state 25

    (35) g -> FLOAT .

    ID              reduce using rule 35 (g -> FLOAT .)


state 26

    (34) g -> BOOL .

    ID              reduce using rule 34 (g -> BOOL .)


state 27

    (33) g -> INT .

    ID              reduce using rule 33 (g -> INT .)


state 28

    (43) main -> MAIN . altaMain LPARENTHESIS RPARENTHESIS k bloque SEMICOLON ENDFUNC
    (44) altaMain -> .

    LPARENTHESIS    reduce using rule 44 (altaMain -> .)

    altaMain                       shift and go to state 36

state 29

    (1) programa -> BEGIN PROGRAM createDirProc ID altaPrograma SEMICOLON a LBRACKET b main . RBRACKET SEMICOLON END

    RBRACKET        shift and go to state 37


state 30

    (9) f -> d COLON . tipo saveTipo
    (15) tipo -> . INT
    (16) tipo -> . FLOAT
    (17) tipo -> . BOOL
    (18) tipo -> . STRING

    INT             shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    STRING          shift and go to state 42

    tipo                           shift and go to state 38

state 31

    (8) c -> f SEMICOLON . e
    (23) e -> . c
    (24) e -> .
    (8) c -> . f SEMICOLON e
    (9) f -> . d COLON tipo saveTipo
    (10) f -> . matrix
    (12) d -> . ID saveVarID
    (13) d -> . ID saveVarID COMMA d
    (19) matrix -> . mataux COLON INT
    (20) mataux -> . ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET
    (21) mataux -> . ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET COMMA mataux

    LBRACKET        reduce using rule 24 (e -> .)
    ID              shift and go to state 21

    c                              shift and go to state 43
    e                              shift and go to state 44
    d                              shift and go to state 17
    f                              shift and go to state 18
    mataux                         shift and go to state 20
    matrix                         shift and go to state 19

state 32

    (19) matrix -> mataux COLON . INT

    INT             shift and go to state 45


state 33

    (20) mataux -> ID saveMatrixID . LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET
    (21) mataux -> ID saveMatrixID . LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET COMMA mataux

    LSQUAREBRACKET  shift and go to state 46


state 34

    (12) d -> ID saveVarID .
    (13) d -> ID saveVarID . COMMA d

    COLON           reduce using rule 12 (d -> ID saveVarID .)
    COMMA           shift and go to state 47


state 35

    (27) funcion -> FUNC g ID . altaFuncion LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno
    (31) altaFuncion -> .

    LPARENTHESIS    reduce using rule 31 (altaFuncion -> .)

    altaFuncion                    shift and go to state 48

state 36

    (43) main -> MAIN altaMain . LPARENTHESIS RPARENTHESIS k bloque SEMICOLON ENDFUNC

    LPARENTHESIS    shift and go to state 49


state 37

    (1) programa -> BEGIN PROGRAM createDirProc ID altaPrograma SEMICOLON a LBRACKET b main RBRACKET . SEMICOLON END

    SEMICOLON       shift and go to state 50


state 38

    (9) f -> d COLON tipo . saveTipo
    (11) saveTipo -> .

    SEMICOLON       reduce using rule 11 (saveTipo -> .)

    saveTipo                       shift and go to state 51

state 39

    (15) tipo -> INT .

    SEMICOLON       reduce using rule 15 (tipo -> INT .)
    COMMA           reduce using rule 15 (tipo -> INT .)
    RPARENTHESIS    reduce using rule 15 (tipo -> INT .)


state 40

    (16) tipo -> FLOAT .

    SEMICOLON       reduce using rule 16 (tipo -> FLOAT .)
    COMMA           reduce using rule 16 (tipo -> FLOAT .)
    RPARENTHESIS    reduce using rule 16 (tipo -> FLOAT .)


state 41

    (17) tipo -> BOOL .

    SEMICOLON       reduce using rule 17 (tipo -> BOOL .)
    COMMA           reduce using rule 17 (tipo -> BOOL .)
    RPARENTHESIS    reduce using rule 17 (tipo -> BOOL .)


state 42

    (18) tipo -> STRING .

    SEMICOLON       reduce using rule 18 (tipo -> STRING .)
    COMMA           reduce using rule 18 (tipo -> STRING .)
    RPARENTHESIS    reduce using rule 18 (tipo -> STRING .)


state 43

    (23) e -> c .

    LBRACKET        reduce using rule 23 (e -> c .)


state 44

    (8) c -> f SEMICOLON e .

    LBRACKET        reduce using rule 8 (c -> f SEMICOLON e .)


state 45

    (19) matrix -> mataux COLON INT .

    SEMICOLON       reduce using rule 19 (matrix -> mataux COLON INT .)


state 46

    (20) mataux -> ID saveMatrixID LSQUAREBRACKET . CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET
    (21) mataux -> ID saveMatrixID LSQUAREBRACKET . CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET COMMA mataux

    CTEINT          shift and go to state 52


state 47

    (13) d -> ID saveVarID COMMA . d
    (12) d -> . ID saveVarID
    (13) d -> . ID saveVarID COMMA d

    ID              shift and go to state 53

    d                              shift and go to state 54

state 48

    (27) funcion -> FUNC g ID altaFuncion . LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno

    LPARENTHESIS    shift and go to state 55


state 49

    (43) main -> MAIN altaMain LPARENTHESIS . RPARENTHESIS k bloque SEMICOLON ENDFUNC

    RPARENTHESIS    shift and go to state 56


state 50

    (1) programa -> BEGIN PROGRAM createDirProc ID altaPrograma SEMICOLON a LBRACKET b main RBRACKET SEMICOLON . END

    END             shift and go to state 57


state 51

    (9) f -> d COLON tipo saveTipo .

    SEMICOLON       reduce using rule 9 (f -> d COLON tipo saveTipo .)


state 52

    (20) mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT . RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET
    (21) mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT . RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET COMMA mataux

    RSQUAREBRACKET  shift and go to state 58


state 53

    (12) d -> ID . saveVarID
    (13) d -> ID . saveVarID COMMA d
    (14) saveVarID -> .

    COMMA           reduce using rule 14 (saveVarID -> .)
    COLON           reduce using rule 14 (saveVarID -> .)

    saveVarID                      shift and go to state 34

state 54

    (13) d -> ID saveVarID COMMA d .

    COLON           reduce using rule 13 (d -> ID saveVarID COMMA d .)


state 55

    (27) funcion -> FUNC g ID altaFuncion LPARENTHESIS . h RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno
    (37) h -> . param
    (38) h -> .
    (39) param -> . ID COLON tipo saveParamVar j

    RPARENTHESIS    reduce using rule 38 (h -> .)
    ID              shift and go to state 61

    h                              shift and go to state 59
    param                          shift and go to state 60

state 56

    (43) main -> MAIN altaMain LPARENTHESIS RPARENTHESIS . k bloque SEMICOLON ENDFUNC
    (45) k -> . vars
    (46) k -> .
    (6) vars -> . VAR createGlobalTable c

    LBRACKET        reduce using rule 46 (k -> .)
    VAR             shift and go to state 10

    vars                           shift and go to state 63
    k                              shift and go to state 62

state 57

    (1) programa -> BEGIN PROGRAM createDirProc ID altaPrograma SEMICOLON a LBRACKET b main RBRACKET SEMICOLON END .

    $end            reduce using rule 1 (programa -> BEGIN PROGRAM createDirProc ID altaPrograma SEMICOLON a LBRACKET b main RBRACKET SEMICOLON END .)


state 58

    (20) mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET . LSQUAREBRACKET CTEINT RSQUAREBRACKET
    (21) mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET . LSQUAREBRACKET CTEINT RSQUAREBRACKET COMMA mataux

    LSQUAREBRACKET  shift and go to state 64


state 59

    (27) funcion -> FUNC g ID altaFuncion LPARENTHESIS h . RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno

    RPARENTHESIS    shift and go to state 65


state 60

    (37) h -> param .

    RPARENTHESIS    reduce using rule 37 (h -> param .)


state 61

    (39) param -> ID . COLON tipo saveParamVar j

    COLON           shift and go to state 66


state 62

    (43) main -> MAIN altaMain LPARENTHESIS RPARENTHESIS k . bloque SEMICOLON ENDFUNC
    (47) bloque -> . LBRACKET l RBRACKET

    LBRACKET        shift and go to state 67

    bloque                         shift and go to state 68

state 63

    (45) k -> vars .

    LBRACKET        reduce using rule 45 (k -> vars .)


state 64

    (20) mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET . CTEINT RSQUAREBRACKET
    (21) mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET . CTEINT RSQUAREBRACKET COMMA mataux

    CTEINT          shift and go to state 69


state 65

    (27) funcion -> FUNC g ID altaFuncion LPARENTHESIS h RPARENTHESIS . funcvars altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno
    (29) funcvars -> . vars
    (30) funcvars -> .
    (6) vars -> . VAR createGlobalTable c

    LBRACKET        reduce using rule 30 (funcvars -> .)
    VAR             shift and go to state 10

    vars                           shift and go to state 71
    funcvars                       shift and go to state 70

state 66

    (39) param -> ID COLON . tipo saveParamVar j
    (15) tipo -> . INT
    (16) tipo -> . FLOAT
    (17) tipo -> . BOOL
    (18) tipo -> . STRING

    INT             shift and go to state 39
    FLOAT           shift and go to state 40
    BOOL            shift and go to state 41
    STRING          shift and go to state 42

    tipo                           shift and go to state 72

state 67

    (47) bloque -> LBRACKET . l RBRACKET
    (48) l -> . estatuto l
    (49) l -> .
    (50) estatuto -> . estatutotipos SEMICOLON
    (51) estatutotipos -> . asignacion
    (52) estatutotipos -> . condicion
    (53) estatutotipos -> . ciclo
    (54) estatutotipos -> . escritura
    (55) estatutotipos -> . llamadafunc
    (56) estatutotipos -> . specialfunc
    (57) estatutotipos -> . return
    (58) asignacion -> . ID exp_asign aa EQUAL exp_12 expresion exp_13
    (124) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS estatuto_if_1 bloque s estatuto_endif
    (130) ciclo -> . WHILE estatuto_while_1 LPARENTHESIS expresion RPARENTHESIS estatuto_while_2 bloque estatuto_while_3
    (134) escritura -> . PRINT LPARENTHESIS ah RPARENTHESIS
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (147) specialfunc -> . opfunc
    (148) specialfunc -> . dibujafunc
    (146) return -> . RETURN exp
    (149) opfunc -> . randomfunc
    (151) dibujafunc -> . al am an
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS
    (152) al -> . linewidthfunc
    (153) al -> .
    (158) linewidthfunc -> . LINEWIDTH LPARENTHESIS exp RPARENTHESIS SEMICOLON

    RBRACKET        reduce using rule 49 (l -> .)
    ID              shift and go to state 89
    IF              shift and go to state 90
    WHILE           shift and go to state 75
    PRINT           shift and go to state 77
    CALL            shift and go to state 94
    RETURN          shift and go to state 73
    RANDOM          shift and go to state 85
    LINECOLOR       reduce using rule 153 (al -> .)
    STARTFILL       reduce using rule 153 (al -> .)
    LINE            reduce using rule 153 (al -> .)
    SQUARE          reduce using rule 153 (al -> .)
    CIRCLE          reduce using rule 153 (al -> .)
    STAR            reduce using rule 153 (al -> .)
    TRIANGLE        reduce using rule 153 (al -> .)
    ARC             reduce using rule 153 (al -> .)
    LINEWIDTH       shift and go to state 91

    randomfunc                     shift and go to state 87
    dibujafunc                     shift and go to state 76
    ciclo                          shift and go to state 78
    llamadafunc                    shift and go to state 79
    estatuto                       shift and go to state 80
    estatutotipos                  shift and go to state 81
    condicion                      shift and go to state 82
    specialfunc                    shift and go to state 83
    return                         shift and go to state 84
    linewidthfunc                  shift and go to state 86
    al                             shift and go to state 74
    opfunc                         shift and go to state 88
    asignacion                     shift and go to state 92
    l                              shift and go to state 93
    escritura                      shift and go to state 95

state 68

    (43) main -> MAIN altaMain LPARENTHESIS RPARENTHESIS k bloque . SEMICOLON ENDFUNC

    SEMICOLON       shift and go to state 96


state 69

    (20) mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT . RSQUAREBRACKET
    (21) mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT . RSQUAREBRACKET COMMA mataux

    RSQUAREBRACKET  shift and go to state 97


state 70

    (27) funcion -> FUNC g ID altaFuncion LPARENTHESIS h RPARENTHESIS funcvars . altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno
    (32) altaInicioFunc -> .

    LBRACKET        reduce using rule 32 (altaInicioFunc -> .)

    altaInicioFunc                 shift and go to state 98

state 71

    (29) funcvars -> vars .

    LBRACKET        reduce using rule 29 (funcvars -> vars .)


state 72

    (39) param -> ID COLON tipo . saveParamVar j
    (40) saveParamVar -> .

    COMMA           reduce using rule 40 (saveParamVar -> .)
    RPARENTHESIS    reduce using rule 40 (saveParamVar -> .)

    saveParamVar                   shift and go to state 99

state 73

    (146) return -> RETURN . exp
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 111
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 74

    (151) dibujafunc -> al . am an
    (154) am -> . linecolorfunc
    (155) am -> .
    (159) linecolorfunc -> . LINECOLOR LPARENTHESIS exp RPARENTHESIS SEMICOLON

    STARTFILL       reduce using rule 155 (am -> .)
    LINE            reduce using rule 155 (am -> .)
    SQUARE          reduce using rule 155 (am -> .)
    CIRCLE          reduce using rule 155 (am -> .)
    STAR            reduce using rule 155 (am -> .)
    TRIANGLE        reduce using rule 155 (am -> .)
    ARC             reduce using rule 155 (am -> .)
    LINECOLOR       shift and go to state 114

    linecolorfunc                  shift and go to state 112
    am                             shift and go to state 113

state 75

    (130) ciclo -> WHILE . estatuto_while_1 LPARENTHESIS expresion RPARENTHESIS estatuto_while_2 bloque estatuto_while_3
    (131) estatuto_while_1 -> .

    LPARENTHESIS    reduce using rule 131 (estatuto_while_1 -> .)

    estatuto_while_1               shift and go to state 115

state 76

    (148) specialfunc -> dibujafunc .

    SEMICOLON       reduce using rule 148 (specialfunc -> dibujafunc .)


state 77

    (134) escritura -> PRINT . LPARENTHESIS ah RPARENTHESIS

    LPARENTHESIS    shift and go to state 116


state 78

    (53) estatutotipos -> ciclo .

    SEMICOLON       reduce using rule 53 (estatutotipos -> ciclo .)


state 79

    (55) estatutotipos -> llamadafunc .

    SEMICOLON       reduce using rule 55 (estatutotipos -> llamadafunc .)


state 80

    (48) l -> estatuto . l
    (48) l -> . estatuto l
    (49) l -> .
    (50) estatuto -> . estatutotipos SEMICOLON
    (51) estatutotipos -> . asignacion
    (52) estatutotipos -> . condicion
    (53) estatutotipos -> . ciclo
    (54) estatutotipos -> . escritura
    (55) estatutotipos -> . llamadafunc
    (56) estatutotipos -> . specialfunc
    (57) estatutotipos -> . return
    (58) asignacion -> . ID exp_asign aa EQUAL exp_12 expresion exp_13
    (124) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS estatuto_if_1 bloque s estatuto_endif
    (130) ciclo -> . WHILE estatuto_while_1 LPARENTHESIS expresion RPARENTHESIS estatuto_while_2 bloque estatuto_while_3
    (134) escritura -> . PRINT LPARENTHESIS ah RPARENTHESIS
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (147) specialfunc -> . opfunc
    (148) specialfunc -> . dibujafunc
    (146) return -> . RETURN exp
    (149) opfunc -> . randomfunc
    (151) dibujafunc -> . al am an
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS
    (152) al -> . linewidthfunc
    (153) al -> .
    (158) linewidthfunc -> . LINEWIDTH LPARENTHESIS exp RPARENTHESIS SEMICOLON

    RBRACKET        reduce using rule 49 (l -> .)
    ID              shift and go to state 89
    IF              shift and go to state 90
    WHILE           shift and go to state 75
    PRINT           shift and go to state 77
    CALL            shift and go to state 94
    RETURN          shift and go to state 73
    RANDOM          shift and go to state 85
    LINECOLOR       reduce using rule 153 (al -> .)
    STARTFILL       reduce using rule 153 (al -> .)
    LINE            reduce using rule 153 (al -> .)
    SQUARE          reduce using rule 153 (al -> .)
    CIRCLE          reduce using rule 153 (al -> .)
    STAR            reduce using rule 153 (al -> .)
    TRIANGLE        reduce using rule 153 (al -> .)
    ARC             reduce using rule 153 (al -> .)
    LINEWIDTH       shift and go to state 91

    randomfunc                     shift and go to state 87
    dibujafunc                     shift and go to state 76
    ciclo                          shift and go to state 78
    llamadafunc                    shift and go to state 79
    estatuto                       shift and go to state 80
    estatutotipos                  shift and go to state 81
    condicion                      shift and go to state 82
    specialfunc                    shift and go to state 83
    return                         shift and go to state 84
    linewidthfunc                  shift and go to state 86
    al                             shift and go to state 74
    opfunc                         shift and go to state 88
    asignacion                     shift and go to state 92
    l                              shift and go to state 117
    escritura                      shift and go to state 95

state 81

    (50) estatuto -> estatutotipos . SEMICOLON

    SEMICOLON       shift and go to state 118


state 82

    (52) estatutotipos -> condicion .

    SEMICOLON       reduce using rule 52 (estatutotipos -> condicion .)


state 83

    (56) estatutotipos -> specialfunc .

    SEMICOLON       reduce using rule 56 (estatutotipos -> specialfunc .)


state 84

    (57) estatutotipos -> return .

    SEMICOLON       reduce using rule 57 (estatutotipos -> return .)


state 85

    (150) randomfunc -> RANDOM . LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 119


state 86

    (152) al -> linewidthfunc .

    LINECOLOR       reduce using rule 152 (al -> linewidthfunc .)
    STARTFILL       reduce using rule 152 (al -> linewidthfunc .)
    LINE            reduce using rule 152 (al -> linewidthfunc .)
    SQUARE          reduce using rule 152 (al -> linewidthfunc .)
    CIRCLE          reduce using rule 152 (al -> linewidthfunc .)
    STAR            reduce using rule 152 (al -> linewidthfunc .)
    TRIANGLE        reduce using rule 152 (al -> linewidthfunc .)
    ARC             reduce using rule 152 (al -> linewidthfunc .)


state 87

    (149) opfunc -> randomfunc .

    SEMICOLON       reduce using rule 149 (opfunc -> randomfunc .)
    PRODUCT         reduce using rule 149 (opfunc -> randomfunc .)
    DIVISION        reduce using rule 149 (opfunc -> randomfunc .)
    PLUS            reduce using rule 149 (opfunc -> randomfunc .)
    MINUS           reduce using rule 149 (opfunc -> randomfunc .)
    GREATERTHAN     reduce using rule 149 (opfunc -> randomfunc .)
    LESSTHAN        reduce using rule 149 (opfunc -> randomfunc .)
    NOTEQUAL        reduce using rule 149 (opfunc -> randomfunc .)
    LESSEQUAL       reduce using rule 149 (opfunc -> randomfunc .)
    GREATEREQUAL    reduce using rule 149 (opfunc -> randomfunc .)
    EQUALEQUAL      reduce using rule 149 (opfunc -> randomfunc .)
    AND             reduce using rule 149 (opfunc -> randomfunc .)
    OR              reduce using rule 149 (opfunc -> randomfunc .)
    LPARENTHESIS    reduce using rule 149 (opfunc -> randomfunc .)
    CALL            reduce using rule 149 (opfunc -> randomfunc .)
    RANDOM          reduce using rule 149 (opfunc -> randomfunc .)
    CTEINT          reduce using rule 149 (opfunc -> randomfunc .)
    CTEFLOAT        reduce using rule 149 (opfunc -> randomfunc .)
    CTESTRING       reduce using rule 149 (opfunc -> randomfunc .)
    ID              reduce using rule 149 (opfunc -> randomfunc .)
    TRUE            reduce using rule 149 (opfunc -> randomfunc .)
    FALSE           reduce using rule 149 (opfunc -> randomfunc .)
    COMMA           reduce using rule 149 (opfunc -> randomfunc .)
    RPARENTHESIS    reduce using rule 149 (opfunc -> randomfunc .)
    RSQUAREBRACKET  reduce using rule 149 (opfunc -> randomfunc .)


state 88

    (147) specialfunc -> opfunc .

    SEMICOLON       reduce using rule 147 (specialfunc -> opfunc .)


state 89

    (58) asignacion -> ID . exp_asign aa EQUAL exp_12 expresion exp_13
    (59) exp_asign -> .

    LSQUAREBRACKET  reduce using rule 59 (exp_asign -> .)
    EQUAL           reduce using rule 59 (exp_asign -> .)

    exp_asign                      shift and go to state 120

state 90

    (124) condicion -> IF . LPARENTHESIS expresion RPARENTHESIS estatuto_if_1 bloque s estatuto_endif

    LPARENTHESIS    shift and go to state 121


state 91

    (158) linewidthfunc -> LINEWIDTH . LPARENTHESIS exp RPARENTHESIS SEMICOLON

    LPARENTHESIS    shift and go to state 122


state 92

    (51) estatutotipos -> asignacion .

    SEMICOLON       reduce using rule 51 (estatutotipos -> asignacion .)


state 93

    (47) bloque -> LBRACKET l . RBRACKET

    RBRACKET        shift and go to state 123


state 94

    (140) llamadafunc -> CALL . ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS

    ID              shift and go to state 124


state 95

    (54) estatutotipos -> escritura .

    SEMICOLON       reduce using rule 54 (estatutotipos -> escritura .)


state 96

    (43) main -> MAIN altaMain LPARENTHESIS RPARENTHESIS k bloque SEMICOLON . ENDFUNC

    ENDFUNC         shift and go to state 125


state 97

    (20) mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET .
    (21) mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET . COMMA mataux

    COLON           reduce using rule 20 (mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET .)
    COMMA           shift and go to state 126


state 98

    (27) funcion -> FUNC g ID altaFuncion LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc . bloque SEMICOLON ENDFUNC accionRetorno
    (47) bloque -> . LBRACKET l RBRACKET

    LBRACKET        shift and go to state 67

    bloque                         shift and go to state 127

state 99

    (39) param -> ID COLON tipo saveParamVar . j
    (41) j -> . COMMA param
    (42) j -> .

    COMMA           shift and go to state 129
    RPARENTHESIS    reduce using rule 42 (j -> .)

    j                              shift and go to state 128

state 100

    (98) factor -> ad .

    PRODUCT         reduce using rule 98 (factor -> ad .)
    DIVISION        reduce using rule 98 (factor -> ad .)
    PLUS            reduce using rule 98 (factor -> ad .)
    MINUS           reduce using rule 98 (factor -> ad .)
    RPARENTHESIS    reduce using rule 98 (factor -> ad .)
    GREATERTHAN     reduce using rule 98 (factor -> ad .)
    LESSTHAN        reduce using rule 98 (factor -> ad .)
    NOTEQUAL        reduce using rule 98 (factor -> ad .)
    LESSEQUAL       reduce using rule 98 (factor -> ad .)
    GREATEREQUAL    reduce using rule 98 (factor -> ad .)
    EQUALEQUAL      reduce using rule 98 (factor -> ad .)
    AND             reduce using rule 98 (factor -> ad .)
    OR              reduce using rule 98 (factor -> ad .)
    LPARENTHESIS    reduce using rule 98 (factor -> ad .)
    CALL            reduce using rule 98 (factor -> ad .)
    RANDOM          reduce using rule 98 (factor -> ad .)
    CTEINT          reduce using rule 98 (factor -> ad .)
    CTEFLOAT        reduce using rule 98 (factor -> ad .)
    CTESTRING       reduce using rule 98 (factor -> ad .)
    ID              reduce using rule 98 (factor -> ad .)
    TRUE            reduce using rule 98 (factor -> ad .)
    FALSE           reduce using rule 98 (factor -> ad .)
    COMMA           reduce using rule 98 (factor -> ad .)
    SEMICOLON       reduce using rule 98 (factor -> ad .)
    RSQUAREBRACKET  reduce using rule 98 (factor -> ad .)


state 101

    (105) ae -> ag . varcte
    (110) varcte -> . CTEINT exp_cte_int
    (111) varcte -> . CTEFLOAT exp_cte_float
    (112) varcte -> . ctebool exp_cte_bool
    (113) varcte -> . CTESTRING exp_cte_string
    (114) varcte -> . ID r exp_1
    (117) ctebool -> . TRUE
    (118) ctebool -> . FALSE

    CTEINT          shift and go to state 133
    CTEFLOAT        shift and go to state 134
    CTESTRING       shift and go to state 130
    ID              shift and go to state 137
    TRUE            shift and go to state 136
    FALSE           shift and go to state 135

    varcte                         shift and go to state 131
    ctebool                        shift and go to state 132

state 102

    (100) factor -> af .

    PRODUCT         reduce using rule 100 (factor -> af .)
    DIVISION        reduce using rule 100 (factor -> af .)
    PLUS            reduce using rule 100 (factor -> af .)
    MINUS           reduce using rule 100 (factor -> af .)
    RPARENTHESIS    reduce using rule 100 (factor -> af .)
    GREATERTHAN     reduce using rule 100 (factor -> af .)
    LESSTHAN        reduce using rule 100 (factor -> af .)
    NOTEQUAL        reduce using rule 100 (factor -> af .)
    LESSEQUAL       reduce using rule 100 (factor -> af .)
    GREATEREQUAL    reduce using rule 100 (factor -> af .)
    EQUALEQUAL      reduce using rule 100 (factor -> af .)
    AND             reduce using rule 100 (factor -> af .)
    OR              reduce using rule 100 (factor -> af .)
    LPARENTHESIS    reduce using rule 100 (factor -> af .)
    CALL            reduce using rule 100 (factor -> af .)
    RANDOM          reduce using rule 100 (factor -> af .)
    CTEINT          reduce using rule 100 (factor -> af .)
    CTEFLOAT        reduce using rule 100 (factor -> af .)
    CTESTRING       reduce using rule 100 (factor -> af .)
    ID              reduce using rule 100 (factor -> af .)
    TRUE            reduce using rule 100 (factor -> af .)
    FALSE           reduce using rule 100 (factor -> af .)
    COMMA           reduce using rule 100 (factor -> af .)
    SEMICOLON       reduce using rule 100 (factor -> af .)
    RSQUAREBRACKET  reduce using rule 100 (factor -> af .)


state 103

    (84) exp -> termino . exp_5 ab
    (85) exp_5 -> .

    PLUS            reduce using rule 85 (exp_5 -> .)
    MINUS           reduce using rule 85 (exp_5 -> .)
    SEMICOLON       reduce using rule 85 (exp_5 -> .)
    GREATERTHAN     reduce using rule 85 (exp_5 -> .)
    LESSTHAN        reduce using rule 85 (exp_5 -> .)
    NOTEQUAL        reduce using rule 85 (exp_5 -> .)
    LESSEQUAL       reduce using rule 85 (exp_5 -> .)
    GREATEREQUAL    reduce using rule 85 (exp_5 -> .)
    EQUALEQUAL      reduce using rule 85 (exp_5 -> .)
    AND             reduce using rule 85 (exp_5 -> .)
    OR              reduce using rule 85 (exp_5 -> .)
    LPARENTHESIS    reduce using rule 85 (exp_5 -> .)
    CALL            reduce using rule 85 (exp_5 -> .)
    RANDOM          reduce using rule 85 (exp_5 -> .)
    CTEINT          reduce using rule 85 (exp_5 -> .)
    CTEFLOAT        reduce using rule 85 (exp_5 -> .)
    CTESTRING       reduce using rule 85 (exp_5 -> .)
    ID              reduce using rule 85 (exp_5 -> .)
    TRUE            reduce using rule 85 (exp_5 -> .)
    FALSE           reduce using rule 85 (exp_5 -> .)
    COMMA           reduce using rule 85 (exp_5 -> .)
    RPARENTHESIS    reduce using rule 85 (exp_5 -> .)
    RSQUAREBRACKET  reduce using rule 85 (exp_5 -> .)

    exp_5                          shift and go to state 138

state 104

    (99) factor -> ae .

    PRODUCT         reduce using rule 99 (factor -> ae .)
    DIVISION        reduce using rule 99 (factor -> ae .)
    PLUS            reduce using rule 99 (factor -> ae .)
    MINUS           reduce using rule 99 (factor -> ae .)
    RPARENTHESIS    reduce using rule 99 (factor -> ae .)
    GREATERTHAN     reduce using rule 99 (factor -> ae .)
    LESSTHAN        reduce using rule 99 (factor -> ae .)
    NOTEQUAL        reduce using rule 99 (factor -> ae .)
    LESSEQUAL       reduce using rule 99 (factor -> ae .)
    GREATEREQUAL    reduce using rule 99 (factor -> ae .)
    EQUALEQUAL      reduce using rule 99 (factor -> ae .)
    AND             reduce using rule 99 (factor -> ae .)
    OR              reduce using rule 99 (factor -> ae .)
    LPARENTHESIS    reduce using rule 99 (factor -> ae .)
    CALL            reduce using rule 99 (factor -> ae .)
    RANDOM          reduce using rule 99 (factor -> ae .)
    CTEINT          reduce using rule 99 (factor -> ae .)
    CTEFLOAT        reduce using rule 99 (factor -> ae .)
    CTESTRING       reduce using rule 99 (factor -> ae .)
    ID              reduce using rule 99 (factor -> ae .)
    TRUE            reduce using rule 99 (factor -> ae .)
    FALSE           reduce using rule 99 (factor -> ae .)
    COMMA           reduce using rule 99 (factor -> ae .)
    SEMICOLON       reduce using rule 99 (factor -> ae .)
    RSQUAREBRACKET  reduce using rule 99 (factor -> ae .)


state 105

    (108) ag -> MINUS .

    CTEINT          reduce using rule 108 (ag -> MINUS .)
    CTEFLOAT        reduce using rule 108 (ag -> MINUS .)
    CTESTRING       reduce using rule 108 (ag -> MINUS .)
    ID              reduce using rule 108 (ag -> MINUS .)
    TRUE            reduce using rule 108 (ag -> MINUS .)
    FALSE           reduce using rule 108 (ag -> MINUS .)


state 106

    (106) af -> llamadafunc .

    PRODUCT         reduce using rule 106 (af -> llamadafunc .)
    DIVISION        reduce using rule 106 (af -> llamadafunc .)
    PLUS            reduce using rule 106 (af -> llamadafunc .)
    MINUS           reduce using rule 106 (af -> llamadafunc .)
    COMMA           reduce using rule 106 (af -> llamadafunc .)
    RPARENTHESIS    reduce using rule 106 (af -> llamadafunc .)
    GREATERTHAN     reduce using rule 106 (af -> llamadafunc .)
    LESSTHAN        reduce using rule 106 (af -> llamadafunc .)
    NOTEQUAL        reduce using rule 106 (af -> llamadafunc .)
    LESSEQUAL       reduce using rule 106 (af -> llamadafunc .)
    GREATEREQUAL    reduce using rule 106 (af -> llamadafunc .)
    EQUALEQUAL      reduce using rule 106 (af -> llamadafunc .)
    LPARENTHESIS    reduce using rule 106 (af -> llamadafunc .)
    CALL            reduce using rule 106 (af -> llamadafunc .)
    RANDOM          reduce using rule 106 (af -> llamadafunc .)
    CTEINT          reduce using rule 106 (af -> llamadafunc .)
    CTEFLOAT        reduce using rule 106 (af -> llamadafunc .)
    CTESTRING       reduce using rule 106 (af -> llamadafunc .)
    ID              reduce using rule 106 (af -> llamadafunc .)
    TRUE            reduce using rule 106 (af -> llamadafunc .)
    FALSE           reduce using rule 106 (af -> llamadafunc .)
    SEMICOLON       reduce using rule 106 (af -> llamadafunc .)
    AND             reduce using rule 106 (af -> llamadafunc .)
    OR              reduce using rule 106 (af -> llamadafunc .)
    RSQUAREBRACKET  reduce using rule 106 (af -> llamadafunc .)


state 107

    (107) ag -> PLUS .

    CTEINT          reduce using rule 107 (ag -> PLUS .)
    CTEFLOAT        reduce using rule 107 (ag -> PLUS .)
    CTESTRING       reduce using rule 107 (ag -> PLUS .)
    ID              reduce using rule 107 (ag -> PLUS .)
    TRUE            reduce using rule 107 (ag -> PLUS .)
    FALSE           reduce using rule 107 (ag -> PLUS .)


state 108

    (91) termino -> factor . exp_4 ac
    (92) exp_4 -> .

    PRODUCT         reduce using rule 92 (exp_4 -> .)
    DIVISION        reduce using rule 92 (exp_4 -> .)
    PLUS            reduce using rule 92 (exp_4 -> .)
    MINUS           reduce using rule 92 (exp_4 -> .)
    SEMICOLON       reduce using rule 92 (exp_4 -> .)
    GREATERTHAN     reduce using rule 92 (exp_4 -> .)
    LESSTHAN        reduce using rule 92 (exp_4 -> .)
    NOTEQUAL        reduce using rule 92 (exp_4 -> .)
    LESSEQUAL       reduce using rule 92 (exp_4 -> .)
    GREATEREQUAL    reduce using rule 92 (exp_4 -> .)
    EQUALEQUAL      reduce using rule 92 (exp_4 -> .)
    AND             reduce using rule 92 (exp_4 -> .)
    OR              reduce using rule 92 (exp_4 -> .)
    LPARENTHESIS    reduce using rule 92 (exp_4 -> .)
    CALL            reduce using rule 92 (exp_4 -> .)
    RANDOM          reduce using rule 92 (exp_4 -> .)
    CTEINT          reduce using rule 92 (exp_4 -> .)
    CTEFLOAT        reduce using rule 92 (exp_4 -> .)
    CTESTRING       reduce using rule 92 (exp_4 -> .)
    ID              reduce using rule 92 (exp_4 -> .)
    TRUE            reduce using rule 92 (exp_4 -> .)
    FALSE           reduce using rule 92 (exp_4 -> .)
    COMMA           reduce using rule 92 (exp_4 -> .)
    RPARENTHESIS    reduce using rule 92 (exp_4 -> .)
    RSQUAREBRACKET  reduce using rule 92 (exp_4 -> .)

    exp_4                          shift and go to state 139

state 109

    (102) ad -> LPARENTHESIS . exp_6 expresion RPARENTHESIS exp_7
    (103) exp_6 -> .

    LPARENTHESIS    reduce using rule 103 (exp_6 -> .)
    PLUS            reduce using rule 103 (exp_6 -> .)
    MINUS           reduce using rule 103 (exp_6 -> .)
    CALL            reduce using rule 103 (exp_6 -> .)
    RANDOM          reduce using rule 103 (exp_6 -> .)
    CTEINT          reduce using rule 103 (exp_6 -> .)
    CTEFLOAT        reduce using rule 103 (exp_6 -> .)
    CTESTRING       reduce using rule 103 (exp_6 -> .)
    ID              reduce using rule 103 (exp_6 -> .)
    TRUE            reduce using rule 103 (exp_6 -> .)
    FALSE           reduce using rule 103 (exp_6 -> .)

    exp_6                          shift and go to state 140

state 110

    (101) factor -> opfunc .

    PRODUCT         reduce using rule 101 (factor -> opfunc .)
    DIVISION        reduce using rule 101 (factor -> opfunc .)
    PLUS            reduce using rule 101 (factor -> opfunc .)
    MINUS           reduce using rule 101 (factor -> opfunc .)
    RPARENTHESIS    reduce using rule 101 (factor -> opfunc .)
    GREATERTHAN     reduce using rule 101 (factor -> opfunc .)
    LESSTHAN        reduce using rule 101 (factor -> opfunc .)
    NOTEQUAL        reduce using rule 101 (factor -> opfunc .)
    LESSEQUAL       reduce using rule 101 (factor -> opfunc .)
    GREATEREQUAL    reduce using rule 101 (factor -> opfunc .)
    EQUALEQUAL      reduce using rule 101 (factor -> opfunc .)
    AND             reduce using rule 101 (factor -> opfunc .)
    OR              reduce using rule 101 (factor -> opfunc .)
    LPARENTHESIS    reduce using rule 101 (factor -> opfunc .)
    CALL            reduce using rule 101 (factor -> opfunc .)
    RANDOM          reduce using rule 101 (factor -> opfunc .)
    CTEINT          reduce using rule 101 (factor -> opfunc .)
    CTEFLOAT        reduce using rule 101 (factor -> opfunc .)
    CTESTRING       reduce using rule 101 (factor -> opfunc .)
    ID              reduce using rule 101 (factor -> opfunc .)
    TRUE            reduce using rule 101 (factor -> opfunc .)
    FALSE           reduce using rule 101 (factor -> opfunc .)
    COMMA           reduce using rule 101 (factor -> opfunc .)
    SEMICOLON       reduce using rule 101 (factor -> opfunc .)
    RSQUAREBRACKET  reduce using rule 101 (factor -> opfunc .)


state 111

    (146) return -> RETURN exp .

    SEMICOLON       reduce using rule 146 (return -> RETURN exp .)


state 112

    (154) am -> linecolorfunc .

    STARTFILL       reduce using rule 154 (am -> linecolorfunc .)
    LINE            reduce using rule 154 (am -> linecolorfunc .)
    SQUARE          reduce using rule 154 (am -> linecolorfunc .)
    CIRCLE          reduce using rule 154 (am -> linecolorfunc .)
    STAR            reduce using rule 154 (am -> linecolorfunc .)
    TRIANGLE        reduce using rule 154 (am -> linecolorfunc .)
    ARC             reduce using rule 154 (am -> linecolorfunc .)


state 113

    (151) dibujafunc -> al am . an
    (156) an -> . dibuja
    (157) an -> . startfillfunc dibuja stopfillfunc
    (160) dibuja -> . v RPARENTHESIS
    (173) startfillfunc -> . STARTFILL LPARENTHESIS exp RPARENTHESIS SEMICOLON
    (161) v -> . LINE lineparam
    (162) v -> . SQUARE squareparam
    (163) v -> . CIRCLE circleparam
    (164) v -> . STAR starparam
    (165) v -> . TRIANGLE triangleparam
    (166) v -> . ARC arcparam

    STARTFILL       shift and go to state 145
    LINE            shift and go to state 144
    SQUARE          shift and go to state 146
    CIRCLE          shift and go to state 151
    STAR            shift and go to state 141
    TRIANGLE        shift and go to state 143
    ARC             shift and go to state 149

    startfillfunc                  shift and go to state 147
    dibuja                         shift and go to state 148
    v                              shift and go to state 150
    an                             shift and go to state 142

state 114

    (159) linecolorfunc -> LINECOLOR . LPARENTHESIS exp RPARENTHESIS SEMICOLON

    LPARENTHESIS    shift and go to state 152


state 115

    (130) ciclo -> WHILE estatuto_while_1 . LPARENTHESIS expresion RPARENTHESIS estatuto_while_2 bloque estatuto_while_3

    LPARENTHESIS    shift and go to state 153


state 116

    (134) escritura -> PRINT LPARENTHESIS . ah RPARENTHESIS
    (136) ah -> . expresion estatuto_print ai
    (137) ah -> . CTESTRING estatuto_print ai
    (64) expresion -> . specialexp m exp_9 n
    (73) specialexp -> . exp p exp_11
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

  ! shift/reduce conflict for CTESTRING resolved as shift
    CTESTRING       shift and go to state 154
    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

  ! CTESTRING       [ reduce using rule 109 (ag -> .) ]

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    ah                             shift and go to state 155
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110
    expresion                      shift and go to state 156
    llamadafunc                    shift and go to state 106
    specialexp                     shift and go to state 157
    exp                            shift and go to state 158

state 117

    (48) l -> estatuto l .

    RBRACKET        reduce using rule 48 (l -> estatuto l .)


state 118

    (50) estatuto -> estatutotipos SEMICOLON .

    ID              reduce using rule 50 (estatuto -> estatutotipos SEMICOLON .)
    IF              reduce using rule 50 (estatuto -> estatutotipos SEMICOLON .)
    WHILE           reduce using rule 50 (estatuto -> estatutotipos SEMICOLON .)
    PRINT           reduce using rule 50 (estatuto -> estatutotipos SEMICOLON .)
    CALL            reduce using rule 50 (estatuto -> estatutotipos SEMICOLON .)
    RETURN          reduce using rule 50 (estatuto -> estatutotipos SEMICOLON .)
    RANDOM          reduce using rule 50 (estatuto -> estatutotipos SEMICOLON .)
    LINEWIDTH       reduce using rule 50 (estatuto -> estatutotipos SEMICOLON .)
    LINECOLOR       reduce using rule 50 (estatuto -> estatutotipos SEMICOLON .)
    STARTFILL       reduce using rule 50 (estatuto -> estatutotipos SEMICOLON .)
    LINE            reduce using rule 50 (estatuto -> estatutotipos SEMICOLON .)
    SQUARE          reduce using rule 50 (estatuto -> estatutotipos SEMICOLON .)
    CIRCLE          reduce using rule 50 (estatuto -> estatutotipos SEMICOLON .)
    STAR            reduce using rule 50 (estatuto -> estatutotipos SEMICOLON .)
    TRIANGLE        reduce using rule 50 (estatuto -> estatutotipos SEMICOLON .)
    ARC             reduce using rule 50 (estatuto -> estatutotipos SEMICOLON .)
    RBRACKET        reduce using rule 50 (estatuto -> estatutotipos SEMICOLON .)


state 119

    (150) randomfunc -> RANDOM LPARENTHESIS . exp COMMA exp RPARENTHESIS
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 159
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 120

    (58) asignacion -> ID exp_asign . aa EQUAL exp_12 expresion exp_13
    (62) aa -> . LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET
    (63) aa -> .

    LSQUAREBRACKET  shift and go to state 161
    EQUAL           reduce using rule 63 (aa -> .)

    aa                             shift and go to state 160

state 121

    (124) condicion -> IF LPARENTHESIS . expresion RPARENTHESIS estatuto_if_1 bloque s estatuto_endif
    (64) expresion -> . specialexp m exp_9 n
    (73) specialexp -> . exp p exp_11
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    specialexp                     shift and go to state 157
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110
    expresion                      shift and go to state 162
    llamadafunc                    shift and go to state 106
    exp                            shift and go to state 158

state 122

    (158) linewidthfunc -> LINEWIDTH LPARENTHESIS . exp RPARENTHESIS SEMICOLON
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 163
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 123

    (47) bloque -> LBRACKET l RBRACKET .

    SEMICOLON       reduce using rule 47 (bloque -> LBRACKET l RBRACKET .)
    ELSE            reduce using rule 47 (bloque -> LBRACKET l RBRACKET .)


state 124

    (140) llamadafunc -> CALL ID . estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (141) estatuto_llamadafunc_1 -> .

    LPARENTHESIS    reduce using rule 141 (estatuto_llamadafunc_1 -> .)

    estatuto_llamadafunc_1         shift and go to state 164

state 125

    (43) main -> MAIN altaMain LPARENTHESIS RPARENTHESIS k bloque SEMICOLON ENDFUNC .

    RBRACKET        reduce using rule 43 (main -> MAIN altaMain LPARENTHESIS RPARENTHESIS k bloque SEMICOLON ENDFUNC .)


state 126

    (21) mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET COMMA . mataux
    (20) mataux -> . ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET
    (21) mataux -> . ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET COMMA mataux

    ID              shift and go to state 166

    mataux                         shift and go to state 165

state 127

    (27) funcion -> FUNC g ID altaFuncion LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc bloque . SEMICOLON ENDFUNC accionRetorno

    SEMICOLON       shift and go to state 167


state 128

    (39) param -> ID COLON tipo saveParamVar j .

    RPARENTHESIS    reduce using rule 39 (param -> ID COLON tipo saveParamVar j .)


state 129

    (41) j -> COMMA . param
    (39) param -> . ID COLON tipo saveParamVar j

    ID              shift and go to state 61

    param                          shift and go to state 168

state 130

    (113) varcte -> CTESTRING . exp_cte_string
    (120) exp_cte_string -> .

    PRODUCT         reduce using rule 120 (exp_cte_string -> .)
    DIVISION        reduce using rule 120 (exp_cte_string -> .)
    PLUS            reduce using rule 120 (exp_cte_string -> .)
    MINUS           reduce using rule 120 (exp_cte_string -> .)
    SEMICOLON       reduce using rule 120 (exp_cte_string -> .)
    GREATERTHAN     reduce using rule 120 (exp_cte_string -> .)
    LESSTHAN        reduce using rule 120 (exp_cte_string -> .)
    NOTEQUAL        reduce using rule 120 (exp_cte_string -> .)
    LESSEQUAL       reduce using rule 120 (exp_cte_string -> .)
    GREATEREQUAL    reduce using rule 120 (exp_cte_string -> .)
    EQUALEQUAL      reduce using rule 120 (exp_cte_string -> .)
    AND             reduce using rule 120 (exp_cte_string -> .)
    OR              reduce using rule 120 (exp_cte_string -> .)
    LPARENTHESIS    reduce using rule 120 (exp_cte_string -> .)
    CALL            reduce using rule 120 (exp_cte_string -> .)
    RANDOM          reduce using rule 120 (exp_cte_string -> .)
    CTEINT          reduce using rule 120 (exp_cte_string -> .)
    CTEFLOAT        reduce using rule 120 (exp_cte_string -> .)
    CTESTRING       reduce using rule 120 (exp_cte_string -> .)
    ID              reduce using rule 120 (exp_cte_string -> .)
    TRUE            reduce using rule 120 (exp_cte_string -> .)
    FALSE           reduce using rule 120 (exp_cte_string -> .)
    COMMA           reduce using rule 120 (exp_cte_string -> .)
    RPARENTHESIS    reduce using rule 120 (exp_cte_string -> .)
    RSQUAREBRACKET  reduce using rule 120 (exp_cte_string -> .)

    exp_cte_string                 shift and go to state 169

state 131

    (105) ae -> ag varcte .

    PRODUCT         reduce using rule 105 (ae -> ag varcte .)
    DIVISION        reduce using rule 105 (ae -> ag varcte .)
    PLUS            reduce using rule 105 (ae -> ag varcte .)
    MINUS           reduce using rule 105 (ae -> ag varcte .)
    COMMA           reduce using rule 105 (ae -> ag varcte .)
    RPARENTHESIS    reduce using rule 105 (ae -> ag varcte .)
    GREATERTHAN     reduce using rule 105 (ae -> ag varcte .)
    LESSTHAN        reduce using rule 105 (ae -> ag varcte .)
    NOTEQUAL        reduce using rule 105 (ae -> ag varcte .)
    LESSEQUAL       reduce using rule 105 (ae -> ag varcte .)
    GREATEREQUAL    reduce using rule 105 (ae -> ag varcte .)
    EQUALEQUAL      reduce using rule 105 (ae -> ag varcte .)
    AND             reduce using rule 105 (ae -> ag varcte .)
    OR              reduce using rule 105 (ae -> ag varcte .)
    LPARENTHESIS    reduce using rule 105 (ae -> ag varcte .)
    CALL            reduce using rule 105 (ae -> ag varcte .)
    RANDOM          reduce using rule 105 (ae -> ag varcte .)
    CTEINT          reduce using rule 105 (ae -> ag varcte .)
    CTEFLOAT        reduce using rule 105 (ae -> ag varcte .)
    CTESTRING       reduce using rule 105 (ae -> ag varcte .)
    ID              reduce using rule 105 (ae -> ag varcte .)
    TRUE            reduce using rule 105 (ae -> ag varcte .)
    FALSE           reduce using rule 105 (ae -> ag varcte .)
    RSQUAREBRACKET  reduce using rule 105 (ae -> ag varcte .)
    SEMICOLON       reduce using rule 105 (ae -> ag varcte .)


state 132

    (112) varcte -> ctebool . exp_cte_bool
    (119) exp_cte_bool -> .

    PRODUCT         reduce using rule 119 (exp_cte_bool -> .)
    DIVISION        reduce using rule 119 (exp_cte_bool -> .)
    PLUS            reduce using rule 119 (exp_cte_bool -> .)
    MINUS           reduce using rule 119 (exp_cte_bool -> .)
    SEMICOLON       reduce using rule 119 (exp_cte_bool -> .)
    GREATERTHAN     reduce using rule 119 (exp_cte_bool -> .)
    LESSTHAN        reduce using rule 119 (exp_cte_bool -> .)
    NOTEQUAL        reduce using rule 119 (exp_cte_bool -> .)
    LESSEQUAL       reduce using rule 119 (exp_cte_bool -> .)
    GREATEREQUAL    reduce using rule 119 (exp_cte_bool -> .)
    EQUALEQUAL      reduce using rule 119 (exp_cte_bool -> .)
    AND             reduce using rule 119 (exp_cte_bool -> .)
    OR              reduce using rule 119 (exp_cte_bool -> .)
    LPARENTHESIS    reduce using rule 119 (exp_cte_bool -> .)
    CALL            reduce using rule 119 (exp_cte_bool -> .)
    RANDOM          reduce using rule 119 (exp_cte_bool -> .)
    CTEINT          reduce using rule 119 (exp_cte_bool -> .)
    CTEFLOAT        reduce using rule 119 (exp_cte_bool -> .)
    CTESTRING       reduce using rule 119 (exp_cte_bool -> .)
    ID              reduce using rule 119 (exp_cte_bool -> .)
    TRUE            reduce using rule 119 (exp_cte_bool -> .)
    FALSE           reduce using rule 119 (exp_cte_bool -> .)
    COMMA           reduce using rule 119 (exp_cte_bool -> .)
    RPARENTHESIS    reduce using rule 119 (exp_cte_bool -> .)
    RSQUAREBRACKET  reduce using rule 119 (exp_cte_bool -> .)

    exp_cte_bool                   shift and go to state 170

state 133

    (110) varcte -> CTEINT . exp_cte_int
    (115) exp_cte_int -> .

    PRODUCT         reduce using rule 115 (exp_cte_int -> .)
    DIVISION        reduce using rule 115 (exp_cte_int -> .)
    PLUS            reduce using rule 115 (exp_cte_int -> .)
    MINUS           reduce using rule 115 (exp_cte_int -> .)
    SEMICOLON       reduce using rule 115 (exp_cte_int -> .)
    GREATERTHAN     reduce using rule 115 (exp_cte_int -> .)
    LESSTHAN        reduce using rule 115 (exp_cte_int -> .)
    NOTEQUAL        reduce using rule 115 (exp_cte_int -> .)
    LESSEQUAL       reduce using rule 115 (exp_cte_int -> .)
    GREATEREQUAL    reduce using rule 115 (exp_cte_int -> .)
    EQUALEQUAL      reduce using rule 115 (exp_cte_int -> .)
    AND             reduce using rule 115 (exp_cte_int -> .)
    OR              reduce using rule 115 (exp_cte_int -> .)
    LPARENTHESIS    reduce using rule 115 (exp_cte_int -> .)
    CALL            reduce using rule 115 (exp_cte_int -> .)
    RANDOM          reduce using rule 115 (exp_cte_int -> .)
    CTEINT          reduce using rule 115 (exp_cte_int -> .)
    CTEFLOAT        reduce using rule 115 (exp_cte_int -> .)
    CTESTRING       reduce using rule 115 (exp_cte_int -> .)
    ID              reduce using rule 115 (exp_cte_int -> .)
    TRUE            reduce using rule 115 (exp_cte_int -> .)
    FALSE           reduce using rule 115 (exp_cte_int -> .)
    COMMA           reduce using rule 115 (exp_cte_int -> .)
    RPARENTHESIS    reduce using rule 115 (exp_cte_int -> .)
    RSQUAREBRACKET  reduce using rule 115 (exp_cte_int -> .)

    exp_cte_int                    shift and go to state 171

state 134

    (111) varcte -> CTEFLOAT . exp_cte_float
    (116) exp_cte_float -> .

    PRODUCT         reduce using rule 116 (exp_cte_float -> .)
    DIVISION        reduce using rule 116 (exp_cte_float -> .)
    PLUS            reduce using rule 116 (exp_cte_float -> .)
    MINUS           reduce using rule 116 (exp_cte_float -> .)
    SEMICOLON       reduce using rule 116 (exp_cte_float -> .)
    GREATERTHAN     reduce using rule 116 (exp_cte_float -> .)
    LESSTHAN        reduce using rule 116 (exp_cte_float -> .)
    NOTEQUAL        reduce using rule 116 (exp_cte_float -> .)
    LESSEQUAL       reduce using rule 116 (exp_cte_float -> .)
    GREATEREQUAL    reduce using rule 116 (exp_cte_float -> .)
    EQUALEQUAL      reduce using rule 116 (exp_cte_float -> .)
    AND             reduce using rule 116 (exp_cte_float -> .)
    OR              reduce using rule 116 (exp_cte_float -> .)
    LPARENTHESIS    reduce using rule 116 (exp_cte_float -> .)
    CALL            reduce using rule 116 (exp_cte_float -> .)
    RANDOM          reduce using rule 116 (exp_cte_float -> .)
    CTEINT          reduce using rule 116 (exp_cte_float -> .)
    CTEFLOAT        reduce using rule 116 (exp_cte_float -> .)
    CTESTRING       reduce using rule 116 (exp_cte_float -> .)
    ID              reduce using rule 116 (exp_cte_float -> .)
    TRUE            reduce using rule 116 (exp_cte_float -> .)
    FALSE           reduce using rule 116 (exp_cte_float -> .)
    COMMA           reduce using rule 116 (exp_cte_float -> .)
    RPARENTHESIS    reduce using rule 116 (exp_cte_float -> .)
    RSQUAREBRACKET  reduce using rule 116 (exp_cte_float -> .)

    exp_cte_float                  shift and go to state 172

state 135

    (118) ctebool -> FALSE .

    PRODUCT         reduce using rule 118 (ctebool -> FALSE .)
    DIVISION        reduce using rule 118 (ctebool -> FALSE .)
    PLUS            reduce using rule 118 (ctebool -> FALSE .)
    MINUS           reduce using rule 118 (ctebool -> FALSE .)
    SEMICOLON       reduce using rule 118 (ctebool -> FALSE .)
    GREATERTHAN     reduce using rule 118 (ctebool -> FALSE .)
    LESSTHAN        reduce using rule 118 (ctebool -> FALSE .)
    NOTEQUAL        reduce using rule 118 (ctebool -> FALSE .)
    LESSEQUAL       reduce using rule 118 (ctebool -> FALSE .)
    GREATEREQUAL    reduce using rule 118 (ctebool -> FALSE .)
    EQUALEQUAL      reduce using rule 118 (ctebool -> FALSE .)
    AND             reduce using rule 118 (ctebool -> FALSE .)
    OR              reduce using rule 118 (ctebool -> FALSE .)
    LPARENTHESIS    reduce using rule 118 (ctebool -> FALSE .)
    CALL            reduce using rule 118 (ctebool -> FALSE .)
    RANDOM          reduce using rule 118 (ctebool -> FALSE .)
    CTEINT          reduce using rule 118 (ctebool -> FALSE .)
    CTEFLOAT        reduce using rule 118 (ctebool -> FALSE .)
    CTESTRING       reduce using rule 118 (ctebool -> FALSE .)
    ID              reduce using rule 118 (ctebool -> FALSE .)
    TRUE            reduce using rule 118 (ctebool -> FALSE .)
    FALSE           reduce using rule 118 (ctebool -> FALSE .)
    COMMA           reduce using rule 118 (ctebool -> FALSE .)
    RPARENTHESIS    reduce using rule 118 (ctebool -> FALSE .)
    RSQUAREBRACKET  reduce using rule 118 (ctebool -> FALSE .)


state 136

    (117) ctebool -> TRUE .

    PRODUCT         reduce using rule 117 (ctebool -> TRUE .)
    DIVISION        reduce using rule 117 (ctebool -> TRUE .)
    PLUS            reduce using rule 117 (ctebool -> TRUE .)
    MINUS           reduce using rule 117 (ctebool -> TRUE .)
    SEMICOLON       reduce using rule 117 (ctebool -> TRUE .)
    GREATERTHAN     reduce using rule 117 (ctebool -> TRUE .)
    LESSTHAN        reduce using rule 117 (ctebool -> TRUE .)
    NOTEQUAL        reduce using rule 117 (ctebool -> TRUE .)
    LESSEQUAL       reduce using rule 117 (ctebool -> TRUE .)
    GREATEREQUAL    reduce using rule 117 (ctebool -> TRUE .)
    EQUALEQUAL      reduce using rule 117 (ctebool -> TRUE .)
    AND             reduce using rule 117 (ctebool -> TRUE .)
    OR              reduce using rule 117 (ctebool -> TRUE .)
    LPARENTHESIS    reduce using rule 117 (ctebool -> TRUE .)
    CALL            reduce using rule 117 (ctebool -> TRUE .)
    RANDOM          reduce using rule 117 (ctebool -> TRUE .)
    CTEINT          reduce using rule 117 (ctebool -> TRUE .)
    CTEFLOAT        reduce using rule 117 (ctebool -> TRUE .)
    CTESTRING       reduce using rule 117 (ctebool -> TRUE .)
    ID              reduce using rule 117 (ctebool -> TRUE .)
    TRUE            reduce using rule 117 (ctebool -> TRUE .)
    FALSE           reduce using rule 117 (ctebool -> TRUE .)
    COMMA           reduce using rule 117 (ctebool -> TRUE .)
    RPARENTHESIS    reduce using rule 117 (ctebool -> TRUE .)
    RSQUAREBRACKET  reduce using rule 117 (ctebool -> TRUE .)


state 137

    (114) varcte -> ID . r exp_1
    (121) r -> . LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET
    (122) r -> .

    LSQUAREBRACKET  shift and go to state 173
    PRODUCT         reduce using rule 122 (r -> .)
    DIVISION        reduce using rule 122 (r -> .)
    PLUS            reduce using rule 122 (r -> .)
    MINUS           reduce using rule 122 (r -> .)
    SEMICOLON       reduce using rule 122 (r -> .)
    GREATERTHAN     reduce using rule 122 (r -> .)
    LESSTHAN        reduce using rule 122 (r -> .)
    NOTEQUAL        reduce using rule 122 (r -> .)
    LESSEQUAL       reduce using rule 122 (r -> .)
    GREATEREQUAL    reduce using rule 122 (r -> .)
    EQUALEQUAL      reduce using rule 122 (r -> .)
    AND             reduce using rule 122 (r -> .)
    OR              reduce using rule 122 (r -> .)
    LPARENTHESIS    reduce using rule 122 (r -> .)
    CALL            reduce using rule 122 (r -> .)
    RANDOM          reduce using rule 122 (r -> .)
    CTEINT          reduce using rule 122 (r -> .)
    CTEFLOAT        reduce using rule 122 (r -> .)
    CTESTRING       reduce using rule 122 (r -> .)
    ID              reduce using rule 122 (r -> .)
    TRUE            reduce using rule 122 (r -> .)
    FALSE           reduce using rule 122 (r -> .)
    COMMA           reduce using rule 122 (r -> .)
    RPARENTHESIS    reduce using rule 122 (r -> .)
    RSQUAREBRACKET  reduce using rule 122 (r -> .)

    r                              shift and go to state 174

state 138

    (84) exp -> termino exp_5 . ab
    (86) ab -> . ab2 exp_3 exp
    (87) ab -> .
    (88) ab2 -> . PLUS
    (89) ab2 -> . MINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    SEMICOLON       reduce using rule 87 (ab -> .)
    GREATERTHAN     reduce using rule 87 (ab -> .)
    LESSTHAN        reduce using rule 87 (ab -> .)
    NOTEQUAL        reduce using rule 87 (ab -> .)
    LESSEQUAL       reduce using rule 87 (ab -> .)
    GREATEREQUAL    reduce using rule 87 (ab -> .)
    EQUALEQUAL      reduce using rule 87 (ab -> .)
    AND             reduce using rule 87 (ab -> .)
    OR              reduce using rule 87 (ab -> .)
    LPARENTHESIS    reduce using rule 87 (ab -> .)
    CALL            reduce using rule 87 (ab -> .)
    RANDOM          reduce using rule 87 (ab -> .)
    CTEINT          reduce using rule 87 (ab -> .)
    CTEFLOAT        reduce using rule 87 (ab -> .)
    CTESTRING       reduce using rule 87 (ab -> .)
    ID              reduce using rule 87 (ab -> .)
    TRUE            reduce using rule 87 (ab -> .)
    FALSE           reduce using rule 87 (ab -> .)
    COMMA           reduce using rule 87 (ab -> .)
    RPARENTHESIS    reduce using rule 87 (ab -> .)
    RSQUAREBRACKET  reduce using rule 87 (ab -> .)
    PLUS            shift and go to state 177
    MINUS           shift and go to state 178

  ! PLUS            [ reduce using rule 87 (ab -> .) ]
  ! MINUS           [ reduce using rule 87 (ab -> .) ]

    ab                             shift and go to state 175
    ab2                            shift and go to state 176

state 139

    (91) termino -> factor exp_4 . ac
    (93) ac -> . ac2 exp_2 termino
    (94) ac -> .
    (96) ac2 -> . PRODUCT
    (97) ac2 -> . DIVISION

    PLUS            reduce using rule 94 (ac -> .)
    MINUS           reduce using rule 94 (ac -> .)
    SEMICOLON       reduce using rule 94 (ac -> .)
    GREATERTHAN     reduce using rule 94 (ac -> .)
    LESSTHAN        reduce using rule 94 (ac -> .)
    NOTEQUAL        reduce using rule 94 (ac -> .)
    LESSEQUAL       reduce using rule 94 (ac -> .)
    GREATEREQUAL    reduce using rule 94 (ac -> .)
    EQUALEQUAL      reduce using rule 94 (ac -> .)
    AND             reduce using rule 94 (ac -> .)
    OR              reduce using rule 94 (ac -> .)
    LPARENTHESIS    reduce using rule 94 (ac -> .)
    CALL            reduce using rule 94 (ac -> .)
    RANDOM          reduce using rule 94 (ac -> .)
    CTEINT          reduce using rule 94 (ac -> .)
    CTEFLOAT        reduce using rule 94 (ac -> .)
    CTESTRING       reduce using rule 94 (ac -> .)
    ID              reduce using rule 94 (ac -> .)
    TRUE            reduce using rule 94 (ac -> .)
    FALSE           reduce using rule 94 (ac -> .)
    COMMA           reduce using rule 94 (ac -> .)
    RPARENTHESIS    reduce using rule 94 (ac -> .)
    RSQUAREBRACKET  reduce using rule 94 (ac -> .)
    PRODUCT         shift and go to state 182
    DIVISION        shift and go to state 179

    ac                             shift and go to state 180
    ac2                            shift and go to state 181

state 140

    (102) ad -> LPARENTHESIS exp_6 . expresion RPARENTHESIS exp_7
    (64) expresion -> . specialexp m exp_9 n
    (73) specialexp -> . exp p exp_11
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110
    expresion                      shift and go to state 183
    llamadafunc                    shift and go to state 106
    specialexp                     shift and go to state 157
    exp                            shift and go to state 158

state 141

    (164) v -> STAR . starparam
    (170) starparam -> . LPARENTHESIS exp COMMA exp COMMA exp

    LPARENTHESIS    shift and go to state 184

    starparam                      shift and go to state 185

state 142

    (151) dibujafunc -> al am an .

    SEMICOLON       reduce using rule 151 (dibujafunc -> al am an .)


state 143

    (165) v -> TRIANGLE . triangleparam
    (171) triangleparam -> . LPARENTHESIS exp COMMA exp COMMA exp

    LPARENTHESIS    shift and go to state 186

    triangleparam                  shift and go to state 187

state 144

    (161) v -> LINE . lineparam
    (167) lineparam -> . LPARENTHESIS exp COMMA exp COMMA exp COMMA exp

    LPARENTHESIS    shift and go to state 189

    lineparam                      shift and go to state 188

state 145

    (173) startfillfunc -> STARTFILL . LPARENTHESIS exp RPARENTHESIS SEMICOLON

    LPARENTHESIS    shift and go to state 190


state 146

    (162) v -> SQUARE . squareparam
    (168) squareparam -> . LPARENTHESIS exp COMMA exp COMMA exp

    LPARENTHESIS    shift and go to state 191

    squareparam                    shift and go to state 192

state 147

    (157) an -> startfillfunc . dibuja stopfillfunc
    (160) dibuja -> . v RPARENTHESIS
    (161) v -> . LINE lineparam
    (162) v -> . SQUARE squareparam
    (163) v -> . CIRCLE circleparam
    (164) v -> . STAR starparam
    (165) v -> . TRIANGLE triangleparam
    (166) v -> . ARC arcparam

    LINE            shift and go to state 144
    SQUARE          shift and go to state 146
    CIRCLE          shift and go to state 151
    STAR            shift and go to state 141
    TRIANGLE        shift and go to state 143
    ARC             shift and go to state 149

    dibuja                         shift and go to state 193
    v                              shift and go to state 150

state 148

    (156) an -> dibuja .

    SEMICOLON       reduce using rule 156 (an -> dibuja .)


state 149

    (166) v -> ARC . arcparam
    (172) arcparam -> . LPARENTHESIS exp COMMA exp COMMA exp COMMA exp COMMA exp

    LPARENTHESIS    shift and go to state 194

    arcparam                       shift and go to state 195

state 150

    (160) dibuja -> v . RPARENTHESIS

    RPARENTHESIS    shift and go to state 196


state 151

    (163) v -> CIRCLE . circleparam
    (169) circleparam -> . LPARENTHESIS exp COMMA exp COMMA exp

    LPARENTHESIS    shift and go to state 197

    circleparam                    shift and go to state 198

state 152

    (159) linecolorfunc -> LINECOLOR LPARENTHESIS . exp RPARENTHESIS SEMICOLON
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 199
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 153

    (130) ciclo -> WHILE estatuto_while_1 LPARENTHESIS . expresion RPARENTHESIS estatuto_while_2 bloque estatuto_while_3
    (64) expresion -> . specialexp m exp_9 n
    (73) specialexp -> . exp p exp_11
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    specialexp                     shift and go to state 157
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110
    expresion                      shift and go to state 200
    llamadafunc                    shift and go to state 106
    exp                            shift and go to state 158

state 154

    (137) ah -> CTESTRING . estatuto_print ai
    (135) estatuto_print -> .

    COMMA           reduce using rule 135 (estatuto_print -> .)
    RPARENTHESIS    reduce using rule 135 (estatuto_print -> .)

    estatuto_print                 shift and go to state 201

state 155

    (134) escritura -> PRINT LPARENTHESIS ah . RPARENTHESIS

    RPARENTHESIS    shift and go to state 202


state 156

    (136) ah -> expresion . estatuto_print ai
    (135) estatuto_print -> .

    COMMA           reduce using rule 135 (estatuto_print -> .)
    RPARENTHESIS    reduce using rule 135 (estatuto_print -> .)

    estatuto_print                 shift and go to state 203

state 157

    (64) expresion -> specialexp . m exp_9 n
    (65) m -> . o exp_8 specialexp
    (66) m -> .
    (67) o -> . AND
    (68) o -> . OR

    LPARENTHESIS    reduce using rule 66 (m -> .)
    PLUS            reduce using rule 66 (m -> .)
    MINUS           reduce using rule 66 (m -> .)
    CALL            reduce using rule 66 (m -> .)
    RANDOM          reduce using rule 66 (m -> .)
    CTEINT          reduce using rule 66 (m -> .)
    CTEFLOAT        reduce using rule 66 (m -> .)
    CTESTRING       reduce using rule 66 (m -> .)
    ID              reduce using rule 66 (m -> .)
    TRUE            reduce using rule 66 (m -> .)
    FALSE           reduce using rule 66 (m -> .)
    COMMA           reduce using rule 66 (m -> .)
    RPARENTHESIS    reduce using rule 66 (m -> .)
    SEMICOLON       reduce using rule 66 (m -> .)
    AND             shift and go to state 204
    OR              shift and go to state 207

    m                              shift and go to state 205
    o                              shift and go to state 206

state 158

    (73) specialexp -> exp . p exp_11
    (74) p -> . q exp_10 exp
    (75) p -> .
    (76) q -> . GREATERTHAN
    (77) q -> . LESSTHAN
    (78) q -> . NOTEQUAL
    (79) q -> . LESSEQUAL
    (80) q -> . GREATEREQUAL
    (81) q -> . EQUALEQUAL

    AND             reduce using rule 75 (p -> .)
    OR              reduce using rule 75 (p -> .)
    LPARENTHESIS    reduce using rule 75 (p -> .)
    PLUS            reduce using rule 75 (p -> .)
    MINUS           reduce using rule 75 (p -> .)
    CALL            reduce using rule 75 (p -> .)
    RANDOM          reduce using rule 75 (p -> .)
    CTEINT          reduce using rule 75 (p -> .)
    CTEFLOAT        reduce using rule 75 (p -> .)
    CTESTRING       reduce using rule 75 (p -> .)
    ID              reduce using rule 75 (p -> .)
    TRUE            reduce using rule 75 (p -> .)
    FALSE           reduce using rule 75 (p -> .)
    COMMA           reduce using rule 75 (p -> .)
    RPARENTHESIS    reduce using rule 75 (p -> .)
    SEMICOLON       reduce using rule 75 (p -> .)
    GREATERTHAN     shift and go to state 213
    LESSTHAN        shift and go to state 212
    NOTEQUAL        shift and go to state 208
    LESSEQUAL       shift and go to state 214
    GREATEREQUAL    shift and go to state 209
    EQUALEQUAL      shift and go to state 215

    q                              shift and go to state 210
    p                              shift and go to state 211

state 159

    (150) randomfunc -> RANDOM LPARENTHESIS exp . COMMA exp RPARENTHESIS

    COMMA           shift and go to state 216


state 160

    (58) asignacion -> ID exp_asign aa . EQUAL exp_12 expresion exp_13

    EQUAL           shift and go to state 217


state 161

    (62) aa -> LSQUAREBRACKET . exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 218
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 162

    (124) condicion -> IF LPARENTHESIS expresion . RPARENTHESIS estatuto_if_1 bloque s estatuto_endif

    RPARENTHESIS    shift and go to state 219


state 163

    (158) linewidthfunc -> LINEWIDTH LPARENTHESIS exp . RPARENTHESIS SEMICOLON

    RPARENTHESIS    shift and go to state 220


state 164

    (140) llamadafunc -> CALL ID estatuto_llamadafunc_1 . LPARENTHESIS t RPARENTHESIS

    LPARENTHESIS    shift and go to state 221


state 165

    (21) mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET COMMA mataux .

    COLON           reduce using rule 21 (mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET COMMA mataux .)


state 166

    (20) mataux -> ID . saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET
    (21) mataux -> ID . saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET COMMA mataux
    (22) saveMatrixID -> .

    LSQUAREBRACKET  reduce using rule 22 (saveMatrixID -> .)

    saveMatrixID                   shift and go to state 33

state 167

    (27) funcion -> FUNC g ID altaFuncion LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON . ENDFUNC accionRetorno

    ENDFUNC         shift and go to state 222


state 168

    (41) j -> COMMA param .

    RPARENTHESIS    reduce using rule 41 (j -> COMMA param .)


state 169

    (113) varcte -> CTESTRING exp_cte_string .

    PRODUCT         reduce using rule 113 (varcte -> CTESTRING exp_cte_string .)
    DIVISION        reduce using rule 113 (varcte -> CTESTRING exp_cte_string .)
    PLUS            reduce using rule 113 (varcte -> CTESTRING exp_cte_string .)
    MINUS           reduce using rule 113 (varcte -> CTESTRING exp_cte_string .)
    SEMICOLON       reduce using rule 113 (varcte -> CTESTRING exp_cte_string .)
    GREATERTHAN     reduce using rule 113 (varcte -> CTESTRING exp_cte_string .)
    LESSTHAN        reduce using rule 113 (varcte -> CTESTRING exp_cte_string .)
    NOTEQUAL        reduce using rule 113 (varcte -> CTESTRING exp_cte_string .)
    LESSEQUAL       reduce using rule 113 (varcte -> CTESTRING exp_cte_string .)
    GREATEREQUAL    reduce using rule 113 (varcte -> CTESTRING exp_cte_string .)
    EQUALEQUAL      reduce using rule 113 (varcte -> CTESTRING exp_cte_string .)
    AND             reduce using rule 113 (varcte -> CTESTRING exp_cte_string .)
    OR              reduce using rule 113 (varcte -> CTESTRING exp_cte_string .)
    LPARENTHESIS    reduce using rule 113 (varcte -> CTESTRING exp_cte_string .)
    CALL            reduce using rule 113 (varcte -> CTESTRING exp_cte_string .)
    RANDOM          reduce using rule 113 (varcte -> CTESTRING exp_cte_string .)
    CTEINT          reduce using rule 113 (varcte -> CTESTRING exp_cte_string .)
    CTEFLOAT        reduce using rule 113 (varcte -> CTESTRING exp_cte_string .)
    CTESTRING       reduce using rule 113 (varcte -> CTESTRING exp_cte_string .)
    ID              reduce using rule 113 (varcte -> CTESTRING exp_cte_string .)
    TRUE            reduce using rule 113 (varcte -> CTESTRING exp_cte_string .)
    FALSE           reduce using rule 113 (varcte -> CTESTRING exp_cte_string .)
    COMMA           reduce using rule 113 (varcte -> CTESTRING exp_cte_string .)
    RPARENTHESIS    reduce using rule 113 (varcte -> CTESTRING exp_cte_string .)
    RSQUAREBRACKET  reduce using rule 113 (varcte -> CTESTRING exp_cte_string .)


state 170

    (112) varcte -> ctebool exp_cte_bool .

    PRODUCT         reduce using rule 112 (varcte -> ctebool exp_cte_bool .)
    DIVISION        reduce using rule 112 (varcte -> ctebool exp_cte_bool .)
    PLUS            reduce using rule 112 (varcte -> ctebool exp_cte_bool .)
    MINUS           reduce using rule 112 (varcte -> ctebool exp_cte_bool .)
    SEMICOLON       reduce using rule 112 (varcte -> ctebool exp_cte_bool .)
    GREATERTHAN     reduce using rule 112 (varcte -> ctebool exp_cte_bool .)
    LESSTHAN        reduce using rule 112 (varcte -> ctebool exp_cte_bool .)
    NOTEQUAL        reduce using rule 112 (varcte -> ctebool exp_cte_bool .)
    LESSEQUAL       reduce using rule 112 (varcte -> ctebool exp_cte_bool .)
    GREATEREQUAL    reduce using rule 112 (varcte -> ctebool exp_cte_bool .)
    EQUALEQUAL      reduce using rule 112 (varcte -> ctebool exp_cte_bool .)
    AND             reduce using rule 112 (varcte -> ctebool exp_cte_bool .)
    OR              reduce using rule 112 (varcte -> ctebool exp_cte_bool .)
    LPARENTHESIS    reduce using rule 112 (varcte -> ctebool exp_cte_bool .)
    CALL            reduce using rule 112 (varcte -> ctebool exp_cte_bool .)
    RANDOM          reduce using rule 112 (varcte -> ctebool exp_cte_bool .)
    CTEINT          reduce using rule 112 (varcte -> ctebool exp_cte_bool .)
    CTEFLOAT        reduce using rule 112 (varcte -> ctebool exp_cte_bool .)
    CTESTRING       reduce using rule 112 (varcte -> ctebool exp_cte_bool .)
    ID              reduce using rule 112 (varcte -> ctebool exp_cte_bool .)
    TRUE            reduce using rule 112 (varcte -> ctebool exp_cte_bool .)
    FALSE           reduce using rule 112 (varcte -> ctebool exp_cte_bool .)
    COMMA           reduce using rule 112 (varcte -> ctebool exp_cte_bool .)
    RPARENTHESIS    reduce using rule 112 (varcte -> ctebool exp_cte_bool .)
    RSQUAREBRACKET  reduce using rule 112 (varcte -> ctebool exp_cte_bool .)


state 171

    (110) varcte -> CTEINT exp_cte_int .

    PRODUCT         reduce using rule 110 (varcte -> CTEINT exp_cte_int .)
    DIVISION        reduce using rule 110 (varcte -> CTEINT exp_cte_int .)
    PLUS            reduce using rule 110 (varcte -> CTEINT exp_cte_int .)
    MINUS           reduce using rule 110 (varcte -> CTEINT exp_cte_int .)
    SEMICOLON       reduce using rule 110 (varcte -> CTEINT exp_cte_int .)
    GREATERTHAN     reduce using rule 110 (varcte -> CTEINT exp_cte_int .)
    LESSTHAN        reduce using rule 110 (varcte -> CTEINT exp_cte_int .)
    NOTEQUAL        reduce using rule 110 (varcte -> CTEINT exp_cte_int .)
    LESSEQUAL       reduce using rule 110 (varcte -> CTEINT exp_cte_int .)
    GREATEREQUAL    reduce using rule 110 (varcte -> CTEINT exp_cte_int .)
    EQUALEQUAL      reduce using rule 110 (varcte -> CTEINT exp_cte_int .)
    AND             reduce using rule 110 (varcte -> CTEINT exp_cte_int .)
    OR              reduce using rule 110 (varcte -> CTEINT exp_cte_int .)
    LPARENTHESIS    reduce using rule 110 (varcte -> CTEINT exp_cte_int .)
    CALL            reduce using rule 110 (varcte -> CTEINT exp_cte_int .)
    RANDOM          reduce using rule 110 (varcte -> CTEINT exp_cte_int .)
    CTEINT          reduce using rule 110 (varcte -> CTEINT exp_cte_int .)
    CTEFLOAT        reduce using rule 110 (varcte -> CTEINT exp_cte_int .)
    CTESTRING       reduce using rule 110 (varcte -> CTEINT exp_cte_int .)
    ID              reduce using rule 110 (varcte -> CTEINT exp_cte_int .)
    TRUE            reduce using rule 110 (varcte -> CTEINT exp_cte_int .)
    FALSE           reduce using rule 110 (varcte -> CTEINT exp_cte_int .)
    COMMA           reduce using rule 110 (varcte -> CTEINT exp_cte_int .)
    RPARENTHESIS    reduce using rule 110 (varcte -> CTEINT exp_cte_int .)
    RSQUAREBRACKET  reduce using rule 110 (varcte -> CTEINT exp_cte_int .)


state 172

    (111) varcte -> CTEFLOAT exp_cte_float .

    PRODUCT         reduce using rule 111 (varcte -> CTEFLOAT exp_cte_float .)
    DIVISION        reduce using rule 111 (varcte -> CTEFLOAT exp_cte_float .)
    PLUS            reduce using rule 111 (varcte -> CTEFLOAT exp_cte_float .)
    MINUS           reduce using rule 111 (varcte -> CTEFLOAT exp_cte_float .)
    SEMICOLON       reduce using rule 111 (varcte -> CTEFLOAT exp_cte_float .)
    GREATERTHAN     reduce using rule 111 (varcte -> CTEFLOAT exp_cte_float .)
    LESSTHAN        reduce using rule 111 (varcte -> CTEFLOAT exp_cte_float .)
    NOTEQUAL        reduce using rule 111 (varcte -> CTEFLOAT exp_cte_float .)
    LESSEQUAL       reduce using rule 111 (varcte -> CTEFLOAT exp_cte_float .)
    GREATEREQUAL    reduce using rule 111 (varcte -> CTEFLOAT exp_cte_float .)
    EQUALEQUAL      reduce using rule 111 (varcte -> CTEFLOAT exp_cte_float .)
    AND             reduce using rule 111 (varcte -> CTEFLOAT exp_cte_float .)
    OR              reduce using rule 111 (varcte -> CTEFLOAT exp_cte_float .)
    LPARENTHESIS    reduce using rule 111 (varcte -> CTEFLOAT exp_cte_float .)
    CALL            reduce using rule 111 (varcte -> CTEFLOAT exp_cte_float .)
    RANDOM          reduce using rule 111 (varcte -> CTEFLOAT exp_cte_float .)
    CTEINT          reduce using rule 111 (varcte -> CTEFLOAT exp_cte_float .)
    CTEFLOAT        reduce using rule 111 (varcte -> CTEFLOAT exp_cte_float .)
    CTESTRING       reduce using rule 111 (varcte -> CTEFLOAT exp_cte_float .)
    ID              reduce using rule 111 (varcte -> CTEFLOAT exp_cte_float .)
    TRUE            reduce using rule 111 (varcte -> CTEFLOAT exp_cte_float .)
    FALSE           reduce using rule 111 (varcte -> CTEFLOAT exp_cte_float .)
    COMMA           reduce using rule 111 (varcte -> CTEFLOAT exp_cte_float .)
    RPARENTHESIS    reduce using rule 111 (varcte -> CTEFLOAT exp_cte_float .)
    RSQUAREBRACKET  reduce using rule 111 (varcte -> CTEFLOAT exp_cte_float .)


state 173

    (121) r -> LSQUAREBRACKET . exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 223
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 174

    (114) varcte -> ID r . exp_1
    (123) exp_1 -> .

    PRODUCT         reduce using rule 123 (exp_1 -> .)
    DIVISION        reduce using rule 123 (exp_1 -> .)
    PLUS            reduce using rule 123 (exp_1 -> .)
    MINUS           reduce using rule 123 (exp_1 -> .)
    SEMICOLON       reduce using rule 123 (exp_1 -> .)
    GREATERTHAN     reduce using rule 123 (exp_1 -> .)
    LESSTHAN        reduce using rule 123 (exp_1 -> .)
    NOTEQUAL        reduce using rule 123 (exp_1 -> .)
    LESSEQUAL       reduce using rule 123 (exp_1 -> .)
    GREATEREQUAL    reduce using rule 123 (exp_1 -> .)
    EQUALEQUAL      reduce using rule 123 (exp_1 -> .)
    AND             reduce using rule 123 (exp_1 -> .)
    OR              reduce using rule 123 (exp_1 -> .)
    LPARENTHESIS    reduce using rule 123 (exp_1 -> .)
    CALL            reduce using rule 123 (exp_1 -> .)
    RANDOM          reduce using rule 123 (exp_1 -> .)
    CTEINT          reduce using rule 123 (exp_1 -> .)
    CTEFLOAT        reduce using rule 123 (exp_1 -> .)
    CTESTRING       reduce using rule 123 (exp_1 -> .)
    ID              reduce using rule 123 (exp_1 -> .)
    TRUE            reduce using rule 123 (exp_1 -> .)
    FALSE           reduce using rule 123 (exp_1 -> .)
    COMMA           reduce using rule 123 (exp_1 -> .)
    RPARENTHESIS    reduce using rule 123 (exp_1 -> .)
    RSQUAREBRACKET  reduce using rule 123 (exp_1 -> .)

    exp_1                          shift and go to state 224

state 175

    (84) exp -> termino exp_5 ab .

    SEMICOLON       reduce using rule 84 (exp -> termino exp_5 ab .)
    COMMA           reduce using rule 84 (exp -> termino exp_5 ab .)
    GREATERTHAN     reduce using rule 84 (exp -> termino exp_5 ab .)
    LESSTHAN        reduce using rule 84 (exp -> termino exp_5 ab .)
    NOTEQUAL        reduce using rule 84 (exp -> termino exp_5 ab .)
    LESSEQUAL       reduce using rule 84 (exp -> termino exp_5 ab .)
    GREATEREQUAL    reduce using rule 84 (exp -> termino exp_5 ab .)
    EQUALEQUAL      reduce using rule 84 (exp -> termino exp_5 ab .)
    AND             reduce using rule 84 (exp -> termino exp_5 ab .)
    OR              reduce using rule 84 (exp -> termino exp_5 ab .)
    LPARENTHESIS    reduce using rule 84 (exp -> termino exp_5 ab .)
    PLUS            reduce using rule 84 (exp -> termino exp_5 ab .)
    MINUS           reduce using rule 84 (exp -> termino exp_5 ab .)
    CALL            reduce using rule 84 (exp -> termino exp_5 ab .)
    RANDOM          reduce using rule 84 (exp -> termino exp_5 ab .)
    CTEINT          reduce using rule 84 (exp -> termino exp_5 ab .)
    CTEFLOAT        reduce using rule 84 (exp -> termino exp_5 ab .)
    CTESTRING       reduce using rule 84 (exp -> termino exp_5 ab .)
    ID              reduce using rule 84 (exp -> termino exp_5 ab .)
    TRUE            reduce using rule 84 (exp -> termino exp_5 ab .)
    FALSE           reduce using rule 84 (exp -> termino exp_5 ab .)
    RPARENTHESIS    reduce using rule 84 (exp -> termino exp_5 ab .)
    RSQUAREBRACKET  reduce using rule 84 (exp -> termino exp_5 ab .)


state 176

    (86) ab -> ab2 . exp_3 exp
    (90) exp_3 -> .

    LPARENTHESIS    reduce using rule 90 (exp_3 -> .)
    PLUS            reduce using rule 90 (exp_3 -> .)
    MINUS           reduce using rule 90 (exp_3 -> .)
    CALL            reduce using rule 90 (exp_3 -> .)
    RANDOM          reduce using rule 90 (exp_3 -> .)
    CTEINT          reduce using rule 90 (exp_3 -> .)
    CTEFLOAT        reduce using rule 90 (exp_3 -> .)
    CTESTRING       reduce using rule 90 (exp_3 -> .)
    ID              reduce using rule 90 (exp_3 -> .)
    TRUE            reduce using rule 90 (exp_3 -> .)
    FALSE           reduce using rule 90 (exp_3 -> .)

    exp_3                          shift and go to state 225

state 177

    (88) ab2 -> PLUS .

    LPARENTHESIS    reduce using rule 88 (ab2 -> PLUS .)
    PLUS            reduce using rule 88 (ab2 -> PLUS .)
    MINUS           reduce using rule 88 (ab2 -> PLUS .)
    CALL            reduce using rule 88 (ab2 -> PLUS .)
    RANDOM          reduce using rule 88 (ab2 -> PLUS .)
    CTEINT          reduce using rule 88 (ab2 -> PLUS .)
    CTEFLOAT        reduce using rule 88 (ab2 -> PLUS .)
    CTESTRING       reduce using rule 88 (ab2 -> PLUS .)
    ID              reduce using rule 88 (ab2 -> PLUS .)
    TRUE            reduce using rule 88 (ab2 -> PLUS .)
    FALSE           reduce using rule 88 (ab2 -> PLUS .)


state 178

    (89) ab2 -> MINUS .

    LPARENTHESIS    reduce using rule 89 (ab2 -> MINUS .)
    PLUS            reduce using rule 89 (ab2 -> MINUS .)
    MINUS           reduce using rule 89 (ab2 -> MINUS .)
    CALL            reduce using rule 89 (ab2 -> MINUS .)
    RANDOM          reduce using rule 89 (ab2 -> MINUS .)
    CTEINT          reduce using rule 89 (ab2 -> MINUS .)
    CTEFLOAT        reduce using rule 89 (ab2 -> MINUS .)
    CTESTRING       reduce using rule 89 (ab2 -> MINUS .)
    ID              reduce using rule 89 (ab2 -> MINUS .)
    TRUE            reduce using rule 89 (ab2 -> MINUS .)
    FALSE           reduce using rule 89 (ab2 -> MINUS .)


state 179

    (97) ac2 -> DIVISION .

    LPARENTHESIS    reduce using rule 97 (ac2 -> DIVISION .)
    PLUS            reduce using rule 97 (ac2 -> DIVISION .)
    MINUS           reduce using rule 97 (ac2 -> DIVISION .)
    CALL            reduce using rule 97 (ac2 -> DIVISION .)
    RANDOM          reduce using rule 97 (ac2 -> DIVISION .)
    CTEINT          reduce using rule 97 (ac2 -> DIVISION .)
    CTEFLOAT        reduce using rule 97 (ac2 -> DIVISION .)
    CTESTRING       reduce using rule 97 (ac2 -> DIVISION .)
    ID              reduce using rule 97 (ac2 -> DIVISION .)
    TRUE            reduce using rule 97 (ac2 -> DIVISION .)
    FALSE           reduce using rule 97 (ac2 -> DIVISION .)


state 180

    (91) termino -> factor exp_4 ac .

    PLUS            reduce using rule 91 (termino -> factor exp_4 ac .)
    MINUS           reduce using rule 91 (termino -> factor exp_4 ac .)
    RPARENTHESIS    reduce using rule 91 (termino -> factor exp_4 ac .)
    COMMA           reduce using rule 91 (termino -> factor exp_4 ac .)
    GREATERTHAN     reduce using rule 91 (termino -> factor exp_4 ac .)
    LESSTHAN        reduce using rule 91 (termino -> factor exp_4 ac .)
    NOTEQUAL        reduce using rule 91 (termino -> factor exp_4 ac .)
    LESSEQUAL       reduce using rule 91 (termino -> factor exp_4 ac .)
    GREATEREQUAL    reduce using rule 91 (termino -> factor exp_4 ac .)
    EQUALEQUAL      reduce using rule 91 (termino -> factor exp_4 ac .)
    AND             reduce using rule 91 (termino -> factor exp_4 ac .)
    OR              reduce using rule 91 (termino -> factor exp_4 ac .)
    LPARENTHESIS    reduce using rule 91 (termino -> factor exp_4 ac .)
    CALL            reduce using rule 91 (termino -> factor exp_4 ac .)
    RANDOM          reduce using rule 91 (termino -> factor exp_4 ac .)
    CTEINT          reduce using rule 91 (termino -> factor exp_4 ac .)
    CTEFLOAT        reduce using rule 91 (termino -> factor exp_4 ac .)
    CTESTRING       reduce using rule 91 (termino -> factor exp_4 ac .)
    ID              reduce using rule 91 (termino -> factor exp_4 ac .)
    TRUE            reduce using rule 91 (termino -> factor exp_4 ac .)
    FALSE           reduce using rule 91 (termino -> factor exp_4 ac .)
    SEMICOLON       reduce using rule 91 (termino -> factor exp_4 ac .)
    RSQUAREBRACKET  reduce using rule 91 (termino -> factor exp_4 ac .)


state 181

    (93) ac -> ac2 . exp_2 termino
    (95) exp_2 -> .

    LPARENTHESIS    reduce using rule 95 (exp_2 -> .)
    PLUS            reduce using rule 95 (exp_2 -> .)
    MINUS           reduce using rule 95 (exp_2 -> .)
    CALL            reduce using rule 95 (exp_2 -> .)
    RANDOM          reduce using rule 95 (exp_2 -> .)
    CTEINT          reduce using rule 95 (exp_2 -> .)
    CTEFLOAT        reduce using rule 95 (exp_2 -> .)
    CTESTRING       reduce using rule 95 (exp_2 -> .)
    ID              reduce using rule 95 (exp_2 -> .)
    TRUE            reduce using rule 95 (exp_2 -> .)
    FALSE           reduce using rule 95 (exp_2 -> .)

    exp_2                          shift and go to state 226

state 182

    (96) ac2 -> PRODUCT .

    LPARENTHESIS    reduce using rule 96 (ac2 -> PRODUCT .)
    PLUS            reduce using rule 96 (ac2 -> PRODUCT .)
    MINUS           reduce using rule 96 (ac2 -> PRODUCT .)
    CALL            reduce using rule 96 (ac2 -> PRODUCT .)
    RANDOM          reduce using rule 96 (ac2 -> PRODUCT .)
    CTEINT          reduce using rule 96 (ac2 -> PRODUCT .)
    CTEFLOAT        reduce using rule 96 (ac2 -> PRODUCT .)
    CTESTRING       reduce using rule 96 (ac2 -> PRODUCT .)
    ID              reduce using rule 96 (ac2 -> PRODUCT .)
    TRUE            reduce using rule 96 (ac2 -> PRODUCT .)
    FALSE           reduce using rule 96 (ac2 -> PRODUCT .)


state 183

    (102) ad -> LPARENTHESIS exp_6 expresion . RPARENTHESIS exp_7

    RPARENTHESIS    shift and go to state 227


state 184

    (170) starparam -> LPARENTHESIS . exp COMMA exp COMMA exp
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 228
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 185

    (164) v -> STAR starparam .

    RPARENTHESIS    reduce using rule 164 (v -> STAR starparam .)


state 186

    (171) triangleparam -> LPARENTHESIS . exp COMMA exp COMMA exp
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 229
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 187

    (165) v -> TRIANGLE triangleparam .

    RPARENTHESIS    reduce using rule 165 (v -> TRIANGLE triangleparam .)


state 188

    (161) v -> LINE lineparam .

    RPARENTHESIS    reduce using rule 161 (v -> LINE lineparam .)


state 189

    (167) lineparam -> LPARENTHESIS . exp COMMA exp COMMA exp COMMA exp
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 230
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 190

    (173) startfillfunc -> STARTFILL LPARENTHESIS . exp RPARENTHESIS SEMICOLON
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 231
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 191

    (168) squareparam -> LPARENTHESIS . exp COMMA exp COMMA exp
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 232
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 192

    (162) v -> SQUARE squareparam .

    RPARENTHESIS    reduce using rule 162 (v -> SQUARE squareparam .)


state 193

    (157) an -> startfillfunc dibuja . stopfillfunc
    (174) stopfillfunc -> . STOPFILL LPARENTHESIS RPARENTHESIS

    STOPFILL        shift and go to state 234

    stopfillfunc                   shift and go to state 233

state 194

    (172) arcparam -> LPARENTHESIS . exp COMMA exp COMMA exp COMMA exp COMMA exp
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 235
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 195

    (166) v -> ARC arcparam .

    RPARENTHESIS    reduce using rule 166 (v -> ARC arcparam .)


state 196

    (160) dibuja -> v RPARENTHESIS .

    SEMICOLON       reduce using rule 160 (dibuja -> v RPARENTHESIS .)
    STOPFILL        reduce using rule 160 (dibuja -> v RPARENTHESIS .)


state 197

    (169) circleparam -> LPARENTHESIS . exp COMMA exp COMMA exp
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 236
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 198

    (163) v -> CIRCLE circleparam .

    RPARENTHESIS    reduce using rule 163 (v -> CIRCLE circleparam .)


state 199

    (159) linecolorfunc -> LINECOLOR LPARENTHESIS exp . RPARENTHESIS SEMICOLON

    RPARENTHESIS    shift and go to state 237


state 200

    (130) ciclo -> WHILE estatuto_while_1 LPARENTHESIS expresion . RPARENTHESIS estatuto_while_2 bloque estatuto_while_3

    RPARENTHESIS    shift and go to state 238


state 201

    (137) ah -> CTESTRING estatuto_print . ai
    (138) ai -> . COMMA ah
    (139) ai -> .

    COMMA           shift and go to state 240
    RPARENTHESIS    reduce using rule 139 (ai -> .)

    ai                             shift and go to state 239

state 202

    (134) escritura -> PRINT LPARENTHESIS ah RPARENTHESIS .

    SEMICOLON       reduce using rule 134 (escritura -> PRINT LPARENTHESIS ah RPARENTHESIS .)


state 203

    (136) ah -> expresion estatuto_print . ai
    (138) ai -> . COMMA ah
    (139) ai -> .

    COMMA           shift and go to state 240
    RPARENTHESIS    reduce using rule 139 (ai -> .)

    ai                             shift and go to state 241

state 204

    (67) o -> AND .

    LPARENTHESIS    reduce using rule 67 (o -> AND .)
    PLUS            reduce using rule 67 (o -> AND .)
    MINUS           reduce using rule 67 (o -> AND .)
    CALL            reduce using rule 67 (o -> AND .)
    RANDOM          reduce using rule 67 (o -> AND .)
    CTEINT          reduce using rule 67 (o -> AND .)
    CTEFLOAT        reduce using rule 67 (o -> AND .)
    CTESTRING       reduce using rule 67 (o -> AND .)
    ID              reduce using rule 67 (o -> AND .)
    TRUE            reduce using rule 67 (o -> AND .)
    FALSE           reduce using rule 67 (o -> AND .)


state 205

    (64) expresion -> specialexp m . exp_9 n
    (70) exp_9 -> .

    LPARENTHESIS    reduce using rule 70 (exp_9 -> .)
    PLUS            reduce using rule 70 (exp_9 -> .)
    MINUS           reduce using rule 70 (exp_9 -> .)
    CALL            reduce using rule 70 (exp_9 -> .)
    RANDOM          reduce using rule 70 (exp_9 -> .)
    CTEINT          reduce using rule 70 (exp_9 -> .)
    CTEFLOAT        reduce using rule 70 (exp_9 -> .)
    CTESTRING       reduce using rule 70 (exp_9 -> .)
    ID              reduce using rule 70 (exp_9 -> .)
    TRUE            reduce using rule 70 (exp_9 -> .)
    FALSE           reduce using rule 70 (exp_9 -> .)
    COMMA           reduce using rule 70 (exp_9 -> .)
    RPARENTHESIS    reduce using rule 70 (exp_9 -> .)
    SEMICOLON       reduce using rule 70 (exp_9 -> .)

    exp_9                          shift and go to state 242

state 206

    (65) m -> o . exp_8 specialexp
    (69) exp_8 -> .

    LPARENTHESIS    reduce using rule 69 (exp_8 -> .)
    PLUS            reduce using rule 69 (exp_8 -> .)
    MINUS           reduce using rule 69 (exp_8 -> .)
    CALL            reduce using rule 69 (exp_8 -> .)
    RANDOM          reduce using rule 69 (exp_8 -> .)
    CTEINT          reduce using rule 69 (exp_8 -> .)
    CTEFLOAT        reduce using rule 69 (exp_8 -> .)
    CTESTRING       reduce using rule 69 (exp_8 -> .)
    ID              reduce using rule 69 (exp_8 -> .)
    TRUE            reduce using rule 69 (exp_8 -> .)
    FALSE           reduce using rule 69 (exp_8 -> .)

    exp_8                          shift and go to state 243

state 207

    (68) o -> OR .

    LPARENTHESIS    reduce using rule 68 (o -> OR .)
    PLUS            reduce using rule 68 (o -> OR .)
    MINUS           reduce using rule 68 (o -> OR .)
    CALL            reduce using rule 68 (o -> OR .)
    RANDOM          reduce using rule 68 (o -> OR .)
    CTEINT          reduce using rule 68 (o -> OR .)
    CTEFLOAT        reduce using rule 68 (o -> OR .)
    CTESTRING       reduce using rule 68 (o -> OR .)
    ID              reduce using rule 68 (o -> OR .)
    TRUE            reduce using rule 68 (o -> OR .)
    FALSE           reduce using rule 68 (o -> OR .)


state 208

    (78) q -> NOTEQUAL .

    LPARENTHESIS    reduce using rule 78 (q -> NOTEQUAL .)
    PLUS            reduce using rule 78 (q -> NOTEQUAL .)
    MINUS           reduce using rule 78 (q -> NOTEQUAL .)
    CALL            reduce using rule 78 (q -> NOTEQUAL .)
    RANDOM          reduce using rule 78 (q -> NOTEQUAL .)
    CTEINT          reduce using rule 78 (q -> NOTEQUAL .)
    CTEFLOAT        reduce using rule 78 (q -> NOTEQUAL .)
    CTESTRING       reduce using rule 78 (q -> NOTEQUAL .)
    ID              reduce using rule 78 (q -> NOTEQUAL .)
    TRUE            reduce using rule 78 (q -> NOTEQUAL .)
    FALSE           reduce using rule 78 (q -> NOTEQUAL .)


state 209

    (80) q -> GREATEREQUAL .

    LPARENTHESIS    reduce using rule 80 (q -> GREATEREQUAL .)
    PLUS            reduce using rule 80 (q -> GREATEREQUAL .)
    MINUS           reduce using rule 80 (q -> GREATEREQUAL .)
    CALL            reduce using rule 80 (q -> GREATEREQUAL .)
    RANDOM          reduce using rule 80 (q -> GREATEREQUAL .)
    CTEINT          reduce using rule 80 (q -> GREATEREQUAL .)
    CTEFLOAT        reduce using rule 80 (q -> GREATEREQUAL .)
    CTESTRING       reduce using rule 80 (q -> GREATEREQUAL .)
    ID              reduce using rule 80 (q -> GREATEREQUAL .)
    TRUE            reduce using rule 80 (q -> GREATEREQUAL .)
    FALSE           reduce using rule 80 (q -> GREATEREQUAL .)


state 210

    (74) p -> q . exp_10 exp
    (82) exp_10 -> .

    LPARENTHESIS    reduce using rule 82 (exp_10 -> .)
    PLUS            reduce using rule 82 (exp_10 -> .)
    MINUS           reduce using rule 82 (exp_10 -> .)
    CALL            reduce using rule 82 (exp_10 -> .)
    RANDOM          reduce using rule 82 (exp_10 -> .)
    CTEINT          reduce using rule 82 (exp_10 -> .)
    CTEFLOAT        reduce using rule 82 (exp_10 -> .)
    CTESTRING       reduce using rule 82 (exp_10 -> .)
    ID              reduce using rule 82 (exp_10 -> .)
    TRUE            reduce using rule 82 (exp_10 -> .)
    FALSE           reduce using rule 82 (exp_10 -> .)

    exp_10                         shift and go to state 244

state 211

    (73) specialexp -> exp p . exp_11
    (83) exp_11 -> .

    AND             reduce using rule 83 (exp_11 -> .)
    OR              reduce using rule 83 (exp_11 -> .)
    LPARENTHESIS    reduce using rule 83 (exp_11 -> .)
    PLUS            reduce using rule 83 (exp_11 -> .)
    MINUS           reduce using rule 83 (exp_11 -> .)
    CALL            reduce using rule 83 (exp_11 -> .)
    RANDOM          reduce using rule 83 (exp_11 -> .)
    CTEINT          reduce using rule 83 (exp_11 -> .)
    CTEFLOAT        reduce using rule 83 (exp_11 -> .)
    CTESTRING       reduce using rule 83 (exp_11 -> .)
    ID              reduce using rule 83 (exp_11 -> .)
    TRUE            reduce using rule 83 (exp_11 -> .)
    FALSE           reduce using rule 83 (exp_11 -> .)
    COMMA           reduce using rule 83 (exp_11 -> .)
    RPARENTHESIS    reduce using rule 83 (exp_11 -> .)
    SEMICOLON       reduce using rule 83 (exp_11 -> .)

    exp_11                         shift and go to state 245

state 212

    (77) q -> LESSTHAN .

    LPARENTHESIS    reduce using rule 77 (q -> LESSTHAN .)
    PLUS            reduce using rule 77 (q -> LESSTHAN .)
    MINUS           reduce using rule 77 (q -> LESSTHAN .)
    CALL            reduce using rule 77 (q -> LESSTHAN .)
    RANDOM          reduce using rule 77 (q -> LESSTHAN .)
    CTEINT          reduce using rule 77 (q -> LESSTHAN .)
    CTEFLOAT        reduce using rule 77 (q -> LESSTHAN .)
    CTESTRING       reduce using rule 77 (q -> LESSTHAN .)
    ID              reduce using rule 77 (q -> LESSTHAN .)
    TRUE            reduce using rule 77 (q -> LESSTHAN .)
    FALSE           reduce using rule 77 (q -> LESSTHAN .)


state 213

    (76) q -> GREATERTHAN .

    LPARENTHESIS    reduce using rule 76 (q -> GREATERTHAN .)
    PLUS            reduce using rule 76 (q -> GREATERTHAN .)
    MINUS           reduce using rule 76 (q -> GREATERTHAN .)
    CALL            reduce using rule 76 (q -> GREATERTHAN .)
    RANDOM          reduce using rule 76 (q -> GREATERTHAN .)
    CTEINT          reduce using rule 76 (q -> GREATERTHAN .)
    CTEFLOAT        reduce using rule 76 (q -> GREATERTHAN .)
    CTESTRING       reduce using rule 76 (q -> GREATERTHAN .)
    ID              reduce using rule 76 (q -> GREATERTHAN .)
    TRUE            reduce using rule 76 (q -> GREATERTHAN .)
    FALSE           reduce using rule 76 (q -> GREATERTHAN .)


state 214

    (79) q -> LESSEQUAL .

    LPARENTHESIS    reduce using rule 79 (q -> LESSEQUAL .)
    PLUS            reduce using rule 79 (q -> LESSEQUAL .)
    MINUS           reduce using rule 79 (q -> LESSEQUAL .)
    CALL            reduce using rule 79 (q -> LESSEQUAL .)
    RANDOM          reduce using rule 79 (q -> LESSEQUAL .)
    CTEINT          reduce using rule 79 (q -> LESSEQUAL .)
    CTEFLOAT        reduce using rule 79 (q -> LESSEQUAL .)
    CTESTRING       reduce using rule 79 (q -> LESSEQUAL .)
    ID              reduce using rule 79 (q -> LESSEQUAL .)
    TRUE            reduce using rule 79 (q -> LESSEQUAL .)
    FALSE           reduce using rule 79 (q -> LESSEQUAL .)


state 215

    (81) q -> EQUALEQUAL .

    LPARENTHESIS    reduce using rule 81 (q -> EQUALEQUAL .)
    PLUS            reduce using rule 81 (q -> EQUALEQUAL .)
    MINUS           reduce using rule 81 (q -> EQUALEQUAL .)
    CALL            reduce using rule 81 (q -> EQUALEQUAL .)
    RANDOM          reduce using rule 81 (q -> EQUALEQUAL .)
    CTEINT          reduce using rule 81 (q -> EQUALEQUAL .)
    CTEFLOAT        reduce using rule 81 (q -> EQUALEQUAL .)
    CTESTRING       reduce using rule 81 (q -> EQUALEQUAL .)
    ID              reduce using rule 81 (q -> EQUALEQUAL .)
    TRUE            reduce using rule 81 (q -> EQUALEQUAL .)
    FALSE           reduce using rule 81 (q -> EQUALEQUAL .)


state 216

    (150) randomfunc -> RANDOM LPARENTHESIS exp COMMA . exp RPARENTHESIS
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 246
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 217

    (58) asignacion -> ID exp_asign aa EQUAL . exp_12 expresion exp_13
    (60) exp_12 -> .

    LPARENTHESIS    reduce using rule 60 (exp_12 -> .)
    PLUS            reduce using rule 60 (exp_12 -> .)
    MINUS           reduce using rule 60 (exp_12 -> .)
    CALL            reduce using rule 60 (exp_12 -> .)
    RANDOM          reduce using rule 60 (exp_12 -> .)
    CTEINT          reduce using rule 60 (exp_12 -> .)
    CTEFLOAT        reduce using rule 60 (exp_12 -> .)
    CTESTRING       reduce using rule 60 (exp_12 -> .)
    ID              reduce using rule 60 (exp_12 -> .)
    TRUE            reduce using rule 60 (exp_12 -> .)
    FALSE           reduce using rule 60 (exp_12 -> .)

    exp_12                         shift and go to state 247

state 218

    (62) aa -> LSQUAREBRACKET exp . RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET

    RSQUAREBRACKET  shift and go to state 248


state 219

    (124) condicion -> IF LPARENTHESIS expresion RPARENTHESIS . estatuto_if_1 bloque s estatuto_endif
    (125) estatuto_if_1 -> .

    LBRACKET        reduce using rule 125 (estatuto_if_1 -> .)

    estatuto_if_1                  shift and go to state 249

state 220

    (158) linewidthfunc -> LINEWIDTH LPARENTHESIS exp RPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 250


state 221

    (140) llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS . t RPARENTHESIS
    (142) t -> . u
    (143) t -> .
    (144) u -> . exp
    (145) u -> . exp COMMA u
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    RPARENTHESIS    reduce using rule 143 (t -> .)
    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    u                              shift and go to state 251
    t                              shift and go to state 252
    exp                            shift and go to state 253
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110
    termino                        shift and go to state 103

state 222

    (27) funcion -> FUNC g ID altaFuncion LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON ENDFUNC . accionRetorno
    (28) accionRetorno -> .

    FUNC            reduce using rule 28 (accionRetorno -> .)
    MAIN            reduce using rule 28 (accionRetorno -> .)

    accionRetorno                  shift and go to state 254

state 223

    (121) r -> LSQUAREBRACKET exp . RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET

    RSQUAREBRACKET  shift and go to state 255


state 224

    (114) varcte -> ID r exp_1 .

    PRODUCT         reduce using rule 114 (varcte -> ID r exp_1 .)
    DIVISION        reduce using rule 114 (varcte -> ID r exp_1 .)
    PLUS            reduce using rule 114 (varcte -> ID r exp_1 .)
    MINUS           reduce using rule 114 (varcte -> ID r exp_1 .)
    SEMICOLON       reduce using rule 114 (varcte -> ID r exp_1 .)
    GREATERTHAN     reduce using rule 114 (varcte -> ID r exp_1 .)
    LESSTHAN        reduce using rule 114 (varcte -> ID r exp_1 .)
    NOTEQUAL        reduce using rule 114 (varcte -> ID r exp_1 .)
    LESSEQUAL       reduce using rule 114 (varcte -> ID r exp_1 .)
    GREATEREQUAL    reduce using rule 114 (varcte -> ID r exp_1 .)
    EQUALEQUAL      reduce using rule 114 (varcte -> ID r exp_1 .)
    AND             reduce using rule 114 (varcte -> ID r exp_1 .)
    OR              reduce using rule 114 (varcte -> ID r exp_1 .)
    LPARENTHESIS    reduce using rule 114 (varcte -> ID r exp_1 .)
    CALL            reduce using rule 114 (varcte -> ID r exp_1 .)
    RANDOM          reduce using rule 114 (varcte -> ID r exp_1 .)
    CTEINT          reduce using rule 114 (varcte -> ID r exp_1 .)
    CTEFLOAT        reduce using rule 114 (varcte -> ID r exp_1 .)
    CTESTRING       reduce using rule 114 (varcte -> ID r exp_1 .)
    ID              reduce using rule 114 (varcte -> ID r exp_1 .)
    TRUE            reduce using rule 114 (varcte -> ID r exp_1 .)
    FALSE           reduce using rule 114 (varcte -> ID r exp_1 .)
    COMMA           reduce using rule 114 (varcte -> ID r exp_1 .)
    RPARENTHESIS    reduce using rule 114 (varcte -> ID r exp_1 .)
    RSQUAREBRACKET  reduce using rule 114 (varcte -> ID r exp_1 .)


state 225

    (86) ab -> ab2 exp_3 . exp
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    llamadafunc                    shift and go to state 106
    factor                         shift and go to state 108
    exp                            shift and go to state 256
    opfunc                         shift and go to state 110

state 226

    (93) ac -> ac2 exp_2 . termino
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    randomfunc                     shift and go to state 87
    af                             shift and go to state 102
    termino                        shift and go to state 257
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110
    llamadafunc                    shift and go to state 106

state 227

    (102) ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS . exp_7
    (104) exp_7 -> .

    PRODUCT         reduce using rule 104 (exp_7 -> .)
    DIVISION        reduce using rule 104 (exp_7 -> .)
    PLUS            reduce using rule 104 (exp_7 -> .)
    MINUS           reduce using rule 104 (exp_7 -> .)
    SEMICOLON       reduce using rule 104 (exp_7 -> .)
    GREATERTHAN     reduce using rule 104 (exp_7 -> .)
    LESSTHAN        reduce using rule 104 (exp_7 -> .)
    NOTEQUAL        reduce using rule 104 (exp_7 -> .)
    LESSEQUAL       reduce using rule 104 (exp_7 -> .)
    GREATEREQUAL    reduce using rule 104 (exp_7 -> .)
    EQUALEQUAL      reduce using rule 104 (exp_7 -> .)
    AND             reduce using rule 104 (exp_7 -> .)
    OR              reduce using rule 104 (exp_7 -> .)
    LPARENTHESIS    reduce using rule 104 (exp_7 -> .)
    CALL            reduce using rule 104 (exp_7 -> .)
    RANDOM          reduce using rule 104 (exp_7 -> .)
    CTEINT          reduce using rule 104 (exp_7 -> .)
    CTEFLOAT        reduce using rule 104 (exp_7 -> .)
    CTESTRING       reduce using rule 104 (exp_7 -> .)
    ID              reduce using rule 104 (exp_7 -> .)
    TRUE            reduce using rule 104 (exp_7 -> .)
    FALSE           reduce using rule 104 (exp_7 -> .)
    COMMA           reduce using rule 104 (exp_7 -> .)
    RPARENTHESIS    reduce using rule 104 (exp_7 -> .)
    RSQUAREBRACKET  reduce using rule 104 (exp_7 -> .)

    exp_7                          shift and go to state 258

state 228

    (170) starparam -> LPARENTHESIS exp . COMMA exp COMMA exp

    COMMA           shift and go to state 259


state 229

    (171) triangleparam -> LPARENTHESIS exp . COMMA exp COMMA exp

    COMMA           shift and go to state 260


state 230

    (167) lineparam -> LPARENTHESIS exp . COMMA exp COMMA exp COMMA exp

    COMMA           shift and go to state 261


state 231

    (173) startfillfunc -> STARTFILL LPARENTHESIS exp . RPARENTHESIS SEMICOLON

    RPARENTHESIS    shift and go to state 262


state 232

    (168) squareparam -> LPARENTHESIS exp . COMMA exp COMMA exp

    COMMA           shift and go to state 263


state 233

    (157) an -> startfillfunc dibuja stopfillfunc .

    SEMICOLON       reduce using rule 157 (an -> startfillfunc dibuja stopfillfunc .)


state 234

    (174) stopfillfunc -> STOPFILL . LPARENTHESIS RPARENTHESIS

    LPARENTHESIS    shift and go to state 264


state 235

    (172) arcparam -> LPARENTHESIS exp . COMMA exp COMMA exp COMMA exp COMMA exp

    COMMA           shift and go to state 265


state 236

    (169) circleparam -> LPARENTHESIS exp . COMMA exp COMMA exp

    COMMA           shift and go to state 266


state 237

    (159) linecolorfunc -> LINECOLOR LPARENTHESIS exp RPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 267


state 238

    (130) ciclo -> WHILE estatuto_while_1 LPARENTHESIS expresion RPARENTHESIS . estatuto_while_2 bloque estatuto_while_3
    (132) estatuto_while_2 -> .

    LBRACKET        reduce using rule 132 (estatuto_while_2 -> .)

    estatuto_while_2               shift and go to state 268

state 239

    (137) ah -> CTESTRING estatuto_print ai .

    RPARENTHESIS    reduce using rule 137 (ah -> CTESTRING estatuto_print ai .)


state 240

    (138) ai -> COMMA . ah
    (136) ah -> . expresion estatuto_print ai
    (137) ah -> . CTESTRING estatuto_print ai
    (64) expresion -> . specialexp m exp_9 n
    (73) specialexp -> . exp p exp_11
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

  ! shift/reduce conflict for CTESTRING resolved as shift
    CTESTRING       shift and go to state 154
    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

  ! CTESTRING       [ reduce using rule 109 (ag -> .) ]

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    ah                             shift and go to state 269
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110
    expresion                      shift and go to state 156
    llamadafunc                    shift and go to state 106
    specialexp                     shift and go to state 157
    exp                            shift and go to state 158

state 241

    (136) ah -> expresion estatuto_print ai .

    RPARENTHESIS    reduce using rule 136 (ah -> expresion estatuto_print ai .)


state 242

    (64) expresion -> specialexp m exp_9 . n
    (71) n -> . expresion
    (72) n -> .
    (64) expresion -> . specialexp m exp_9 n
    (73) specialexp -> . exp p exp_11
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    COMMA           reduce using rule 72 (n -> .)
    RPARENTHESIS    reduce using rule 72 (n -> .)
    SEMICOLON       reduce using rule 72 (n -> .)
    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110
    expresion                      shift and go to state 270
    llamadafunc                    shift and go to state 106
    specialexp                     shift and go to state 157
    n                              shift and go to state 271
    exp                            shift and go to state 158

state 243

    (65) m -> o exp_8 . specialexp
    (73) specialexp -> . exp p exp_11
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    llamadafunc                    shift and go to state 106
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110
    specialexp                     shift and go to state 272
    exp                            shift and go to state 158

state 244

    (74) p -> q exp_10 . exp
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    llamadafunc                    shift and go to state 106
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110
    exp                            shift and go to state 273

state 245

    (73) specialexp -> exp p exp_11 .

    AND             reduce using rule 73 (specialexp -> exp p exp_11 .)
    OR              reduce using rule 73 (specialexp -> exp p exp_11 .)
    LPARENTHESIS    reduce using rule 73 (specialexp -> exp p exp_11 .)
    PLUS            reduce using rule 73 (specialexp -> exp p exp_11 .)
    MINUS           reduce using rule 73 (specialexp -> exp p exp_11 .)
    CALL            reduce using rule 73 (specialexp -> exp p exp_11 .)
    RANDOM          reduce using rule 73 (specialexp -> exp p exp_11 .)
    CTEINT          reduce using rule 73 (specialexp -> exp p exp_11 .)
    CTEFLOAT        reduce using rule 73 (specialexp -> exp p exp_11 .)
    CTESTRING       reduce using rule 73 (specialexp -> exp p exp_11 .)
    ID              reduce using rule 73 (specialexp -> exp p exp_11 .)
    TRUE            reduce using rule 73 (specialexp -> exp p exp_11 .)
    FALSE           reduce using rule 73 (specialexp -> exp p exp_11 .)
    RPARENTHESIS    reduce using rule 73 (specialexp -> exp p exp_11 .)
    COMMA           reduce using rule 73 (specialexp -> exp p exp_11 .)
    SEMICOLON       reduce using rule 73 (specialexp -> exp p exp_11 .)


state 246

    (150) randomfunc -> RANDOM LPARENTHESIS exp COMMA exp . RPARENTHESIS

    RPARENTHESIS    shift and go to state 274


state 247

    (58) asignacion -> ID exp_asign aa EQUAL exp_12 . expresion exp_13
    (64) expresion -> . specialexp m exp_9 n
    (73) specialexp -> . exp p exp_11
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    specialexp                     shift and go to state 157
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110
    expresion                      shift and go to state 275
    llamadafunc                    shift and go to state 106
    exp                            shift and go to state 158

state 248

    (62) aa -> LSQUAREBRACKET exp RSQUAREBRACKET . LSQUAREBRACKET exp RSQUAREBRACKET

    LSQUAREBRACKET  shift and go to state 276


state 249

    (124) condicion -> IF LPARENTHESIS expresion RPARENTHESIS estatuto_if_1 . bloque s estatuto_endif
    (47) bloque -> . LBRACKET l RBRACKET

    LBRACKET        shift and go to state 67

    bloque                         shift and go to state 277

state 250

    (158) linewidthfunc -> LINEWIDTH LPARENTHESIS exp RPARENTHESIS SEMICOLON .

    LINECOLOR       reduce using rule 158 (linewidthfunc -> LINEWIDTH LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    STARTFILL       reduce using rule 158 (linewidthfunc -> LINEWIDTH LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    LINE            reduce using rule 158 (linewidthfunc -> LINEWIDTH LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    SQUARE          reduce using rule 158 (linewidthfunc -> LINEWIDTH LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    CIRCLE          reduce using rule 158 (linewidthfunc -> LINEWIDTH LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    STAR            reduce using rule 158 (linewidthfunc -> LINEWIDTH LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    TRIANGLE        reduce using rule 158 (linewidthfunc -> LINEWIDTH LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    ARC             reduce using rule 158 (linewidthfunc -> LINEWIDTH LPARENTHESIS exp RPARENTHESIS SEMICOLON .)


state 251

    (142) t -> u .

    RPARENTHESIS    reduce using rule 142 (t -> u .)


state 252

    (140) llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t . RPARENTHESIS

    RPARENTHESIS    shift and go to state 278


state 253

    (144) u -> exp .
    (145) u -> exp . COMMA u

    RPARENTHESIS    reduce using rule 144 (u -> exp .)
    COMMA           shift and go to state 279


state 254

    (27) funcion -> FUNC g ID altaFuncion LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno .

    FUNC            reduce using rule 27 (funcion -> FUNC g ID altaFuncion LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno .)
    MAIN            reduce using rule 27 (funcion -> FUNC g ID altaFuncion LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno .)


state 255

    (121) r -> LSQUAREBRACKET exp RSQUAREBRACKET . LSQUAREBRACKET exp RSQUAREBRACKET

    LSQUAREBRACKET  shift and go to state 280


state 256

    (86) ab -> ab2 exp_3 exp .

    SEMICOLON       reduce using rule 86 (ab -> ab2 exp_3 exp .)
    GREATERTHAN     reduce using rule 86 (ab -> ab2 exp_3 exp .)
    LESSTHAN        reduce using rule 86 (ab -> ab2 exp_3 exp .)
    NOTEQUAL        reduce using rule 86 (ab -> ab2 exp_3 exp .)
    LESSEQUAL       reduce using rule 86 (ab -> ab2 exp_3 exp .)
    GREATEREQUAL    reduce using rule 86 (ab -> ab2 exp_3 exp .)
    EQUALEQUAL      reduce using rule 86 (ab -> ab2 exp_3 exp .)
    AND             reduce using rule 86 (ab -> ab2 exp_3 exp .)
    OR              reduce using rule 86 (ab -> ab2 exp_3 exp .)
    LPARENTHESIS    reduce using rule 86 (ab -> ab2 exp_3 exp .)
    PLUS            reduce using rule 86 (ab -> ab2 exp_3 exp .)
    MINUS           reduce using rule 86 (ab -> ab2 exp_3 exp .)
    CALL            reduce using rule 86 (ab -> ab2 exp_3 exp .)
    RANDOM          reduce using rule 86 (ab -> ab2 exp_3 exp .)
    CTEINT          reduce using rule 86 (ab -> ab2 exp_3 exp .)
    CTEFLOAT        reduce using rule 86 (ab -> ab2 exp_3 exp .)
    CTESTRING       reduce using rule 86 (ab -> ab2 exp_3 exp .)
    ID              reduce using rule 86 (ab -> ab2 exp_3 exp .)
    TRUE            reduce using rule 86 (ab -> ab2 exp_3 exp .)
    FALSE           reduce using rule 86 (ab -> ab2 exp_3 exp .)
    COMMA           reduce using rule 86 (ab -> ab2 exp_3 exp .)
    RPARENTHESIS    reduce using rule 86 (ab -> ab2 exp_3 exp .)
    RSQUAREBRACKET  reduce using rule 86 (ab -> ab2 exp_3 exp .)


state 257

    (93) ac -> ac2 exp_2 termino .

    PLUS            reduce using rule 93 (ac -> ac2 exp_2 termino .)
    MINUS           reduce using rule 93 (ac -> ac2 exp_2 termino .)
    SEMICOLON       reduce using rule 93 (ac -> ac2 exp_2 termino .)
    GREATERTHAN     reduce using rule 93 (ac -> ac2 exp_2 termino .)
    LESSTHAN        reduce using rule 93 (ac -> ac2 exp_2 termino .)
    NOTEQUAL        reduce using rule 93 (ac -> ac2 exp_2 termino .)
    LESSEQUAL       reduce using rule 93 (ac -> ac2 exp_2 termino .)
    GREATEREQUAL    reduce using rule 93 (ac -> ac2 exp_2 termino .)
    EQUALEQUAL      reduce using rule 93 (ac -> ac2 exp_2 termino .)
    AND             reduce using rule 93 (ac -> ac2 exp_2 termino .)
    OR              reduce using rule 93 (ac -> ac2 exp_2 termino .)
    LPARENTHESIS    reduce using rule 93 (ac -> ac2 exp_2 termino .)
    CALL            reduce using rule 93 (ac -> ac2 exp_2 termino .)
    RANDOM          reduce using rule 93 (ac -> ac2 exp_2 termino .)
    CTEINT          reduce using rule 93 (ac -> ac2 exp_2 termino .)
    CTEFLOAT        reduce using rule 93 (ac -> ac2 exp_2 termino .)
    CTESTRING       reduce using rule 93 (ac -> ac2 exp_2 termino .)
    ID              reduce using rule 93 (ac -> ac2 exp_2 termino .)
    TRUE            reduce using rule 93 (ac -> ac2 exp_2 termino .)
    FALSE           reduce using rule 93 (ac -> ac2 exp_2 termino .)
    COMMA           reduce using rule 93 (ac -> ac2 exp_2 termino .)
    RPARENTHESIS    reduce using rule 93 (ac -> ac2 exp_2 termino .)
    RSQUAREBRACKET  reduce using rule 93 (ac -> ac2 exp_2 termino .)


state 258

    (102) ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .

    PRODUCT         reduce using rule 102 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    DIVISION        reduce using rule 102 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    PLUS            reduce using rule 102 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    MINUS           reduce using rule 102 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    COMMA           reduce using rule 102 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    GREATERTHAN     reduce using rule 102 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    LESSTHAN        reduce using rule 102 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    NOTEQUAL        reduce using rule 102 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    LESSEQUAL       reduce using rule 102 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    GREATEREQUAL    reduce using rule 102 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    EQUALEQUAL      reduce using rule 102 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    AND             reduce using rule 102 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    OR              reduce using rule 102 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    LPARENTHESIS    reduce using rule 102 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    CALL            reduce using rule 102 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    RANDOM          reduce using rule 102 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    CTEINT          reduce using rule 102 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    CTEFLOAT        reduce using rule 102 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    CTESTRING       reduce using rule 102 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    ID              reduce using rule 102 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    TRUE            reduce using rule 102 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    FALSE           reduce using rule 102 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    RPARENTHESIS    reduce using rule 102 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    SEMICOLON       reduce using rule 102 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    RSQUAREBRACKET  reduce using rule 102 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)


state 259

    (170) starparam -> LPARENTHESIS exp COMMA . exp COMMA exp
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 281
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 260

    (171) triangleparam -> LPARENTHESIS exp COMMA . exp COMMA exp
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 282
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 261

    (167) lineparam -> LPARENTHESIS exp COMMA . exp COMMA exp COMMA exp
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 283
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 262

    (173) startfillfunc -> STARTFILL LPARENTHESIS exp RPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 284


state 263

    (168) squareparam -> LPARENTHESIS exp COMMA . exp COMMA exp
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 285
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 264

    (174) stopfillfunc -> STOPFILL LPARENTHESIS . RPARENTHESIS

    RPARENTHESIS    shift and go to state 286


state 265

    (172) arcparam -> LPARENTHESIS exp COMMA . exp COMMA exp COMMA exp COMMA exp
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 287
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 266

    (169) circleparam -> LPARENTHESIS exp COMMA . exp COMMA exp
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 288
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 267

    (159) linecolorfunc -> LINECOLOR LPARENTHESIS exp RPARENTHESIS SEMICOLON .

    STARTFILL       reduce using rule 159 (linecolorfunc -> LINECOLOR LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    LINE            reduce using rule 159 (linecolorfunc -> LINECOLOR LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    SQUARE          reduce using rule 159 (linecolorfunc -> LINECOLOR LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    CIRCLE          reduce using rule 159 (linecolorfunc -> LINECOLOR LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    STAR            reduce using rule 159 (linecolorfunc -> LINECOLOR LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    TRIANGLE        reduce using rule 159 (linecolorfunc -> LINECOLOR LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    ARC             reduce using rule 159 (linecolorfunc -> LINECOLOR LPARENTHESIS exp RPARENTHESIS SEMICOLON .)


state 268

    (130) ciclo -> WHILE estatuto_while_1 LPARENTHESIS expresion RPARENTHESIS estatuto_while_2 . bloque estatuto_while_3
    (47) bloque -> . LBRACKET l RBRACKET

    LBRACKET        shift and go to state 67

    bloque                         shift and go to state 289

state 269

    (138) ai -> COMMA ah .

    RPARENTHESIS    reduce using rule 138 (ai -> COMMA ah .)


state 270

    (71) n -> expresion .

    COMMA           reduce using rule 71 (n -> expresion .)
    RPARENTHESIS    reduce using rule 71 (n -> expresion .)
    SEMICOLON       reduce using rule 71 (n -> expresion .)


state 271

    (64) expresion -> specialexp m exp_9 n .

    COMMA           reduce using rule 64 (expresion -> specialexp m exp_9 n .)
    RPARENTHESIS    reduce using rule 64 (expresion -> specialexp m exp_9 n .)
    SEMICOLON       reduce using rule 64 (expresion -> specialexp m exp_9 n .)


state 272

    (65) m -> o exp_8 specialexp .

    LPARENTHESIS    reduce using rule 65 (m -> o exp_8 specialexp .)
    PLUS            reduce using rule 65 (m -> o exp_8 specialexp .)
    MINUS           reduce using rule 65 (m -> o exp_8 specialexp .)
    CALL            reduce using rule 65 (m -> o exp_8 specialexp .)
    RANDOM          reduce using rule 65 (m -> o exp_8 specialexp .)
    CTEINT          reduce using rule 65 (m -> o exp_8 specialexp .)
    CTEFLOAT        reduce using rule 65 (m -> o exp_8 specialexp .)
    CTESTRING       reduce using rule 65 (m -> o exp_8 specialexp .)
    ID              reduce using rule 65 (m -> o exp_8 specialexp .)
    TRUE            reduce using rule 65 (m -> o exp_8 specialexp .)
    FALSE           reduce using rule 65 (m -> o exp_8 specialexp .)
    COMMA           reduce using rule 65 (m -> o exp_8 specialexp .)
    RPARENTHESIS    reduce using rule 65 (m -> o exp_8 specialexp .)
    SEMICOLON       reduce using rule 65 (m -> o exp_8 specialexp .)


state 273

    (74) p -> q exp_10 exp .

    AND             reduce using rule 74 (p -> q exp_10 exp .)
    OR              reduce using rule 74 (p -> q exp_10 exp .)
    LPARENTHESIS    reduce using rule 74 (p -> q exp_10 exp .)
    PLUS            reduce using rule 74 (p -> q exp_10 exp .)
    MINUS           reduce using rule 74 (p -> q exp_10 exp .)
    CALL            reduce using rule 74 (p -> q exp_10 exp .)
    RANDOM          reduce using rule 74 (p -> q exp_10 exp .)
    CTEINT          reduce using rule 74 (p -> q exp_10 exp .)
    CTEFLOAT        reduce using rule 74 (p -> q exp_10 exp .)
    CTESTRING       reduce using rule 74 (p -> q exp_10 exp .)
    ID              reduce using rule 74 (p -> q exp_10 exp .)
    TRUE            reduce using rule 74 (p -> q exp_10 exp .)
    FALSE           reduce using rule 74 (p -> q exp_10 exp .)
    COMMA           reduce using rule 74 (p -> q exp_10 exp .)
    RPARENTHESIS    reduce using rule 74 (p -> q exp_10 exp .)
    SEMICOLON       reduce using rule 74 (p -> q exp_10 exp .)


state 274

    (150) randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .

    PRODUCT         reduce using rule 150 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    DIVISION        reduce using rule 150 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    PLUS            reduce using rule 150 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    MINUS           reduce using rule 150 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    COMMA           reduce using rule 150 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    GREATERTHAN     reduce using rule 150 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    LESSTHAN        reduce using rule 150 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    NOTEQUAL        reduce using rule 150 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    LESSEQUAL       reduce using rule 150 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    GREATEREQUAL    reduce using rule 150 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    EQUALEQUAL      reduce using rule 150 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    AND             reduce using rule 150 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    OR              reduce using rule 150 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    LPARENTHESIS    reduce using rule 150 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    CALL            reduce using rule 150 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    RANDOM          reduce using rule 150 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    CTEINT          reduce using rule 150 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    CTEFLOAT        reduce using rule 150 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    CTESTRING       reduce using rule 150 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    ID              reduce using rule 150 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    TRUE            reduce using rule 150 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    FALSE           reduce using rule 150 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 150 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    SEMICOLON       reduce using rule 150 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    RSQUAREBRACKET  reduce using rule 150 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)


state 275

    (58) asignacion -> ID exp_asign aa EQUAL exp_12 expresion . exp_13
    (61) exp_13 -> .

    SEMICOLON       reduce using rule 61 (exp_13 -> .)

    exp_13                         shift and go to state 290

state 276

    (62) aa -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET . exp RSQUAREBRACKET
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 291
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 277

    (124) condicion -> IF LPARENTHESIS expresion RPARENTHESIS estatuto_if_1 bloque . s estatuto_endif
    (126) s -> . ELSE estatuto_else bloque
    (127) s -> .

    ELSE            shift and go to state 292
    SEMICOLON       reduce using rule 127 (s -> .)

    s                              shift and go to state 293

state 278

    (140) llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS .

    PRODUCT         reduce using rule 140 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS .)
    DIVISION        reduce using rule 140 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS .)
    PLUS            reduce using rule 140 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS .)
    MINUS           reduce using rule 140 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS .)
    SEMICOLON       reduce using rule 140 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS .)
    COMMA           reduce using rule 140 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS .)
    GREATERTHAN     reduce using rule 140 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS .)
    LESSTHAN        reduce using rule 140 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS .)
    NOTEQUAL        reduce using rule 140 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS .)
    LESSEQUAL       reduce using rule 140 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS .)
    GREATEREQUAL    reduce using rule 140 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS .)
    EQUALEQUAL      reduce using rule 140 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS .)
    AND             reduce using rule 140 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS .)
    OR              reduce using rule 140 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS .)
    LPARENTHESIS    reduce using rule 140 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS .)
    CALL            reduce using rule 140 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS .)
    RANDOM          reduce using rule 140 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS .)
    CTEINT          reduce using rule 140 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS .)
    CTEFLOAT        reduce using rule 140 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS .)
    CTESTRING       reduce using rule 140 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS .)
    ID              reduce using rule 140 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS .)
    TRUE            reduce using rule 140 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS .)
    FALSE           reduce using rule 140 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 140 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS .)
    RSQUAREBRACKET  reduce using rule 140 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS .)


state 279

    (145) u -> exp COMMA . u
    (144) u -> . exp
    (145) u -> . exp COMMA u
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    u                              shift and go to state 294
    termino                        shift and go to state 103
    exp                            shift and go to state 253
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 280

    (121) r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET . exp RSQUAREBRACKET
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 295
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 281

    (170) starparam -> LPARENTHESIS exp COMMA exp . COMMA exp

    COMMA           shift and go to state 296


state 282

    (171) triangleparam -> LPARENTHESIS exp COMMA exp . COMMA exp

    COMMA           shift and go to state 297


state 283

    (167) lineparam -> LPARENTHESIS exp COMMA exp . COMMA exp COMMA exp

    COMMA           shift and go to state 298


state 284

    (173) startfillfunc -> STARTFILL LPARENTHESIS exp RPARENTHESIS SEMICOLON .

    LINE            reduce using rule 173 (startfillfunc -> STARTFILL LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    SQUARE          reduce using rule 173 (startfillfunc -> STARTFILL LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    CIRCLE          reduce using rule 173 (startfillfunc -> STARTFILL LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    STAR            reduce using rule 173 (startfillfunc -> STARTFILL LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    TRIANGLE        reduce using rule 173 (startfillfunc -> STARTFILL LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    ARC             reduce using rule 173 (startfillfunc -> STARTFILL LPARENTHESIS exp RPARENTHESIS SEMICOLON .)


state 285

    (168) squareparam -> LPARENTHESIS exp COMMA exp . COMMA exp

    COMMA           shift and go to state 299


state 286

    (174) stopfillfunc -> STOPFILL LPARENTHESIS RPARENTHESIS .

    SEMICOLON       reduce using rule 174 (stopfillfunc -> STOPFILL LPARENTHESIS RPARENTHESIS .)


state 287

    (172) arcparam -> LPARENTHESIS exp COMMA exp . COMMA exp COMMA exp COMMA exp

    COMMA           shift and go to state 300


state 288

    (169) circleparam -> LPARENTHESIS exp COMMA exp . COMMA exp

    COMMA           shift and go to state 301


state 289

    (130) ciclo -> WHILE estatuto_while_1 LPARENTHESIS expresion RPARENTHESIS estatuto_while_2 bloque . estatuto_while_3
    (133) estatuto_while_3 -> .

    SEMICOLON       reduce using rule 133 (estatuto_while_3 -> .)

    estatuto_while_3               shift and go to state 302

state 290

    (58) asignacion -> ID exp_asign aa EQUAL exp_12 expresion exp_13 .

    SEMICOLON       reduce using rule 58 (asignacion -> ID exp_asign aa EQUAL exp_12 expresion exp_13 .)


state 291

    (62) aa -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp . RSQUAREBRACKET

    RSQUAREBRACKET  shift and go to state 303


state 292

    (126) s -> ELSE . estatuto_else bloque
    (128) estatuto_else -> .

    LBRACKET        reduce using rule 128 (estatuto_else -> .)

    estatuto_else                  shift and go to state 304

state 293

    (124) condicion -> IF LPARENTHESIS expresion RPARENTHESIS estatuto_if_1 bloque s . estatuto_endif
    (129) estatuto_endif -> .

    SEMICOLON       reduce using rule 129 (estatuto_endif -> .)

    estatuto_endif                 shift and go to state 305

state 294

    (145) u -> exp COMMA u .

    RPARENTHESIS    reduce using rule 145 (u -> exp COMMA u .)


state 295

    (121) r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp . RSQUAREBRACKET

    RSQUAREBRACKET  shift and go to state 306


state 296

    (170) starparam -> LPARENTHESIS exp COMMA exp COMMA . exp
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 307
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 297

    (171) triangleparam -> LPARENTHESIS exp COMMA exp COMMA . exp
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 308
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 298

    (167) lineparam -> LPARENTHESIS exp COMMA exp COMMA . exp COMMA exp
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 309
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 299

    (168) squareparam -> LPARENTHESIS exp COMMA exp COMMA . exp
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 310
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 300

    (172) arcparam -> LPARENTHESIS exp COMMA exp COMMA . exp COMMA exp COMMA exp
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 311
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 301

    (169) circleparam -> LPARENTHESIS exp COMMA exp COMMA . exp
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 312
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 302

    (130) ciclo -> WHILE estatuto_while_1 LPARENTHESIS expresion RPARENTHESIS estatuto_while_2 bloque estatuto_while_3 .

    SEMICOLON       reduce using rule 130 (ciclo -> WHILE estatuto_while_1 LPARENTHESIS expresion RPARENTHESIS estatuto_while_2 bloque estatuto_while_3 .)


state 303

    (62) aa -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .

    EQUAL           reduce using rule 62 (aa -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)


state 304

    (126) s -> ELSE estatuto_else . bloque
    (47) bloque -> . LBRACKET l RBRACKET

    LBRACKET        shift and go to state 67

    bloque                         shift and go to state 313

state 305

    (124) condicion -> IF LPARENTHESIS expresion RPARENTHESIS estatuto_if_1 bloque s estatuto_endif .

    SEMICOLON       reduce using rule 124 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS estatuto_if_1 bloque s estatuto_endif .)


state 306

    (121) r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .

    PRODUCT         reduce using rule 121 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    DIVISION        reduce using rule 121 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    PLUS            reduce using rule 121 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    MINUS           reduce using rule 121 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    SEMICOLON       reduce using rule 121 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    GREATERTHAN     reduce using rule 121 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    LESSTHAN        reduce using rule 121 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    NOTEQUAL        reduce using rule 121 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    LESSEQUAL       reduce using rule 121 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    GREATEREQUAL    reduce using rule 121 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    EQUALEQUAL      reduce using rule 121 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    AND             reduce using rule 121 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    OR              reduce using rule 121 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    LPARENTHESIS    reduce using rule 121 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    CALL            reduce using rule 121 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    RANDOM          reduce using rule 121 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    CTEINT          reduce using rule 121 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    CTEFLOAT        reduce using rule 121 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    CTESTRING       reduce using rule 121 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    ID              reduce using rule 121 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    TRUE            reduce using rule 121 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    FALSE           reduce using rule 121 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    COMMA           reduce using rule 121 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    RPARENTHESIS    reduce using rule 121 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    RSQUAREBRACKET  reduce using rule 121 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)


state 307

    (170) starparam -> LPARENTHESIS exp COMMA exp COMMA exp .

    RPARENTHESIS    reduce using rule 170 (starparam -> LPARENTHESIS exp COMMA exp COMMA exp .)


state 308

    (171) triangleparam -> LPARENTHESIS exp COMMA exp COMMA exp .

    RPARENTHESIS    reduce using rule 171 (triangleparam -> LPARENTHESIS exp COMMA exp COMMA exp .)


state 309

    (167) lineparam -> LPARENTHESIS exp COMMA exp COMMA exp . COMMA exp

    COMMA           shift and go to state 314


state 310

    (168) squareparam -> LPARENTHESIS exp COMMA exp COMMA exp .

    RPARENTHESIS    reduce using rule 168 (squareparam -> LPARENTHESIS exp COMMA exp COMMA exp .)


state 311

    (172) arcparam -> LPARENTHESIS exp COMMA exp COMMA exp . COMMA exp COMMA exp

    COMMA           shift and go to state 315


state 312

    (169) circleparam -> LPARENTHESIS exp COMMA exp COMMA exp .

    RPARENTHESIS    reduce using rule 169 (circleparam -> LPARENTHESIS exp COMMA exp COMMA exp .)


state 313

    (126) s -> ELSE estatuto_else bloque .

    SEMICOLON       reduce using rule 126 (s -> ELSE estatuto_else bloque .)


state 314

    (167) lineparam -> LPARENTHESIS exp COMMA exp COMMA exp COMMA . exp
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 316
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 315

    (172) arcparam -> LPARENTHESIS exp COMMA exp COMMA exp COMMA . exp COMMA exp
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 317
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 316

    (167) lineparam -> LPARENTHESIS exp COMMA exp COMMA exp COMMA exp .

    RPARENTHESIS    reduce using rule 167 (lineparam -> LPARENTHESIS exp COMMA exp COMMA exp COMMA exp .)


state 317

    (172) arcparam -> LPARENTHESIS exp COMMA exp COMMA exp COMMA exp . COMMA exp

    COMMA           shift and go to state 318


state 318

    (172) arcparam -> LPARENTHESIS exp COMMA exp COMMA exp COMMA exp COMMA . exp
    (84) exp -> . termino exp_5 ab
    (91) termino -> . factor exp_4 ac
    (98) factor -> . ad
    (99) factor -> . ae
    (100) factor -> . af
    (101) factor -> . opfunc
    (102) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (105) ae -> . ag varcte
    (106) af -> . llamadafunc
    (149) opfunc -> . randomfunc
    (107) ag -> . PLUS
    (108) ag -> . MINUS
    (109) ag -> .
    (140) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS t RPARENTHESIS
    (150) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 109
    PLUS            shift and go to state 107
    MINUS           shift and go to state 105
    CTEINT          reduce using rule 109 (ag -> .)
    CTEFLOAT        reduce using rule 109 (ag -> .)
    CTESTRING       reduce using rule 109 (ag -> .)
    ID              reduce using rule 109 (ag -> .)
    TRUE            reduce using rule 109 (ag -> .)
    FALSE           reduce using rule 109 (ag -> .)
    CALL            shift and go to state 94
    RANDOM          shift and go to state 85

    ae                             shift and go to state 104
    ad                             shift and go to state 100
    ag                             shift and go to state 101
    af                             shift and go to state 102
    llamadafunc                    shift and go to state 106
    randomfunc                     shift and go to state 87
    termino                        shift and go to state 103
    exp                            shift and go to state 319
    factor                         shift and go to state 108
    opfunc                         shift and go to state 110

state 319

    (172) arcparam -> LPARENTHESIS exp COMMA exp COMMA exp COMMA exp COMMA exp .

    RPARENTHESIS    reduce using rule 172 (arcparam -> LPARENTHESIS exp COMMA exp COMMA exp COMMA exp COMMA exp .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CTESTRING in state 116 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 138 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 138 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 240 resolved as shift
