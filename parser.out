Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> BEGIN PROGRAM goto_main_quad createDirProc ID altaPrograma SEMICOLON a LBRACKET crearGlobalTam b main RBRACKET SEMICOLON END
Rule 2     goto_main_quad -> <empty>
Rule 3     createDirProc -> <empty>
Rule 4     altaPrograma -> <empty>
Rule 5     crearGlobalTam -> <empty>
Rule 6     a -> vars
Rule 7     a -> <empty>
Rule 8     vars -> VAR createGlobalTable c
Rule 9     createGlobalTable -> <empty>
Rule 10    c -> f SEMICOLON e
Rule 11    f -> d COLON tipo saveTipo
Rule 12    f -> matrix
Rule 13    saveTipo -> <empty>
Rule 14    d -> ID saveVarID
Rule 15    d -> ID saveVarID COMMA d
Rule 16    saveVarID -> <empty>
Rule 17    tipo -> INT
Rule 18    tipo -> FLOAT
Rule 19    tipo -> BOOL
Rule 20    tipo -> STRING
Rule 21    matrix -> mataux COLON INT
Rule 22    mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET almacenaLimites
Rule 23    mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET almacenaLimites COMMA mataux
Rule 24    saveMatrixID -> <empty>
Rule 25    almacenaLimites -> <empty>
Rule 26    e -> c
Rule 27    e -> <empty>
Rule 28    b -> funcion b
Rule 29    b -> <empty>
Rule 30    funcion -> FUNC g ID altaFuncion LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno
Rule 31    accionRetorno -> <empty>
Rule 32    funcvars -> vars
Rule 33    funcvars -> <empty>
Rule 34    altaFuncion -> <empty>
Rule 35    altaInicioFunc -> <empty>
Rule 36    g -> INT
Rule 37    g -> BOOL
Rule 38    g -> FLOAT
Rule 39    g -> VOID
Rule 40    h -> param
Rule 41    h -> <empty>
Rule 42    param -> ID COLON tipo saveParamVar j
Rule 43    saveParamVar -> <empty>
Rule 44    j -> COMMA param
Rule 45    j -> <empty>
Rule 46    main -> MAIN altaMain LPARENTHESIS RPARENTHESIS k bloque SEMICOLON ENDFUNC
Rule 47    altaMain -> <empty>
Rule 48    k -> vars
Rule 49    k -> <empty>
Rule 50    bloque -> LBRACKET l RBRACKET
Rule 51    l -> estatuto l
Rule 52    l -> <empty>
Rule 53    estatuto -> estatutotipos SEMICOLON
Rule 54    estatutotipos -> asignacion
Rule 55    estatutotipos -> condicion
Rule 56    estatutotipos -> ciclo
Rule 57    estatutotipos -> escritura
Rule 58    estatutotipos -> llamadafunc
Rule 59    estatutotipos -> specialfunc
Rule 60    estatutotipos -> return
Rule 61    asignacion -> ID exp_asign aa EQUAL exp_12 expresion exp_13
Rule 62    exp_asign -> <empty>
Rule 63    exp_12 -> <empty>
Rule 64    exp_13 -> <empty>
Rule 65    aa -> LSQUAREBRACKET acceso_dimvar_2 exp acceso_dimvar_3 RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET
Rule 66    aa -> <empty>
Rule 67    acceso_dimvar_2 -> <empty>
Rule 68    acceso_dimvar_3 -> <empty>
Rule 69    expresion -> specialexp m exp_9 n
Rule 70    m -> o exp_8 specialexp
Rule 71    m -> <empty>
Rule 72    o -> AND
Rule 73    o -> OR
Rule 74    exp_8 -> <empty>
Rule 75    exp_9 -> <empty>
Rule 76    n -> expresion
Rule 77    n -> <empty>
Rule 78    specialexp -> exp p exp_11
Rule 79    p -> q exp_10 exp
Rule 80    p -> <empty>
Rule 81    q -> GREATERTHAN
Rule 82    q -> LESSTHAN
Rule 83    q -> NOTEQUAL
Rule 84    q -> LESSEQUAL
Rule 85    q -> GREATEREQUAL
Rule 86    q -> EQUALEQUAL
Rule 87    exp_10 -> <empty>
Rule 88    exp_11 -> <empty>
Rule 89    exp -> termino exp_5 ab
Rule 90    exp_5 -> <empty>
Rule 91    ab -> ab2 exp_3 exp
Rule 92    ab -> <empty>
Rule 93    ab2 -> PLUS
Rule 94    ab2 -> MINUS
Rule 95    exp_3 -> <empty>
Rule 96    termino -> factor exp_4 ac
Rule 97    exp_4 -> <empty>
Rule 98    ac -> ac2 exp_2 termino
Rule 99    ac -> <empty>
Rule 100   exp_2 -> <empty>
Rule 101   ac2 -> PRODUCT
Rule 102   ac2 -> DIVISION
Rule 103   factor -> ad
Rule 104   factor -> ae
Rule 105   factor -> af
Rule 106   factor -> opfunc
Rule 107   ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
Rule 108   exp_6 -> <empty>
Rule 109   exp_7 -> <empty>
Rule 110   ae -> ag varcte
Rule 111   af -> llamadafunc
Rule 112   ag -> PLUS
Rule 113   ag -> MINUS
Rule 114   ag -> <empty>
Rule 115   varcte -> CTEINT exp_cte_int
Rule 116   varcte -> CTEFLOAT exp_cte_float
Rule 117   varcte -> ctebool exp_cte_bool
Rule 118   varcte -> CTESTRING exp_cte_string
Rule 119   varcte -> ID exp_1 r
Rule 120   exp_cte_int -> <empty>
Rule 121   exp_cte_float -> <empty>
Rule 122   ctebool -> TRUE
Rule 123   ctebool -> FALSE
Rule 124   exp_cte_bool -> <empty>
Rule 125   exp_cte_string -> <empty>
Rule 126   r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET
Rule 127   r -> <empty>
Rule 128   exp_1 -> <empty>
Rule 129   condicion -> IF LPARENTHESIS expresion RPARENTHESIS estatuto_if_1 bloque s estatuto_endif
Rule 130   estatuto_if_1 -> <empty>
Rule 131   s -> ELSE estatuto_else bloque
Rule 132   s -> <empty>
Rule 133   estatuto_else -> <empty>
Rule 134   estatuto_endif -> <empty>
Rule 135   ciclo -> WHILE estatuto_while_1 LPARENTHESIS expresion RPARENTHESIS estatuto_while_2 bloque estatuto_while_3
Rule 136   estatuto_while_1 -> <empty>
Rule 137   estatuto_while_2 -> <empty>
Rule 138   estatuto_while_3 -> <empty>
Rule 139   escritura -> PRINT LPARENTHESIS ah RPARENTHESIS
Rule 140   estatuto_print -> <empty>
Rule 141   ah -> expresion estatuto_print ai
Rule 142   ah -> CTESTRING estatuto_print ai
Rule 143   ai -> COMMA ah
Rule 144   ai -> <empty>
Rule 145   llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
Rule 146   estatuto_llamadafunc_1 -> <empty>
Rule 147   estatuto_llamadafunc_2 -> <empty>
Rule 148   t -> u
Rule 149   t -> <empty>
Rule 150   u -> exp estatuto_llamadafunc_3
Rule 151   u -> exp estatuto_llamadafunc_3 COMMA estatuto_llamadafunc_4 u
Rule 152   estatuto_llamadafunc_3 -> <empty>
Rule 153   estatuto_llamadafunc_4 -> <empty>
Rule 154   estatuto_llamadafunc_5 -> <empty>
Rule 155   estatuto_llamadafunc_6 -> <empty>
Rule 156   return -> RETURN exp
Rule 157   specialfunc -> opfunc
Rule 158   specialfunc -> dibujafunc
Rule 159   opfunc -> randomfunc
Rule 160   randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS
Rule 161   dibujafunc -> al am an
Rule 162   al -> linewidthfunc
Rule 163   al -> <empty>
Rule 164   am -> linecolorfunc
Rule 165   am -> <empty>
Rule 166   an -> dibuja
Rule 167   an -> startfillfunc dibuja stopfillfunc
Rule 168   linewidthfunc -> LINEWIDTH LPARENTHESIS exp RPARENTHESIS SEMICOLON
Rule 169   linecolorfunc -> LINECOLOR LPARENTHESIS exp RPARENTHESIS SEMICOLON
Rule 170   dibuja -> v RPARENTHESIS
Rule 171   v -> LINE lineparam
Rule 172   v -> SQUARE squareparam
Rule 173   v -> CIRCLE circleparam
Rule 174   v -> STAR starparam
Rule 175   v -> TRIANGLE triangleparam
Rule 176   v -> ARC arcparam
Rule 177   lineparam -> LPARENTHESIS exp COMMA exp COMMA exp COMMA exp
Rule 178   squareparam -> LPARENTHESIS exp COMMA exp COMMA exp
Rule 179   circleparam -> LPARENTHESIS exp COMMA exp COMMA exp
Rule 180   starparam -> LPARENTHESIS exp COMMA exp COMMA exp
Rule 181   triangleparam -> LPARENTHESIS exp COMMA exp COMMA exp
Rule 182   arcparam -> LPARENTHESIS exp COMMA exp COMMA exp COMMA exp COMMA exp
Rule 183   startfillfunc -> STARTFILL LPARENTHESIS exp RPARENTHESIS SEMICOLON
Rule 184   stopfillfunc -> STOPFILL LPARENTHESIS RPARENTHESIS

Terminals, with rules where they appear

AND                  : 72
ARC                  : 176
BEGIN                : 1
BOOL                 : 19 37
CALL                 : 145
CIRCLE               : 173
COLON                : 11 21 42
COMMA                : 15 23 44 143 151 160 177 177 177 178 178 179 179 180 180 181 181 182 182 182 182
CTEFLOAT             : 116
CTEINT               : 22 22 23 23 115
CTESTRING            : 118 142
DIVISION             : 102
ELSE                 : 131
END                  : 1
ENDFUNC              : 30 46
EQUAL                : 61
EQUALEQUAL           : 86
FALSE                : 123
FLOAT                : 18 38
FUNC                 : 30
GREATEREQUAL         : 85
GREATERTHAN          : 81
ID                   : 1 14 15 22 23 30 42 61 119 145
IF                   : 129
INT                  : 17 21 36
LBRACKET             : 1 50
LESSEQUAL            : 84
LESSTHAN             : 82
LINE                 : 171
LINECOLOR            : 169
LINEWIDTH            : 168
LPARENTHESIS         : 30 46 107 129 135 139 145 160 168 169 177 178 179 180 181 182 183 184
LSQUAREBRACKET       : 22 22 23 23 65 65 126 126
MAIN                 : 46
MINUS                : 94 113
NOTEQUAL             : 83
OR                   : 73
PLUS                 : 93 112
PRINT                : 139
PRODUCT              : 101
PROGRAM              : 1
RANDOM               : 160
RBRACKET             : 1 50
RETURN               : 156
RPARENTHESIS         : 30 46 107 129 135 139 145 160 168 169 170 183 184
RSQUAREBRACKET       : 22 22 23 23 65 65 126 126
SEMICOLON            : 1 1 10 30 46 53 168 169 183
SQUARE               : 172
STAR                 : 174
STARTFILL            : 183
STOPFILL             : 184
STRING               : 20
TRIANGLE             : 175
TRUE                 : 122
VAR                  : 8
VOID                 : 39
WHILE                : 135
error                : 

Nonterminals, with rules where they appear

a                    : 1
aa                   : 61
ab                   : 89
ab2                  : 91
ac                   : 96
ac2                  : 98
acceso_dimvar_2      : 65
acceso_dimvar_3      : 65
accionRetorno        : 30
ad                   : 103
ae                   : 104
af                   : 105
ag                   : 110
ah                   : 139 143
ai                   : 141 142
al                   : 161
almacenaLimites      : 22 23
altaFuncion          : 30
altaInicioFunc       : 30
altaMain             : 46
altaPrograma         : 1
am                   : 161
an                   : 161
arcparam             : 176
asignacion           : 54
b                    : 1 28
bloque               : 30 46 129 131 135
c                    : 8 26
ciclo                : 56
circleparam          : 173
condicion            : 55
crearGlobalTam       : 1
createDirProc        : 1
createGlobalTable    : 8
ctebool              : 117
d                    : 11 15
dibuja               : 166 167
dibujafunc           : 158
e                    : 10
escritura            : 57
estatuto             : 51
estatuto_else        : 131
estatuto_endif       : 129
estatuto_if_1        : 129
estatuto_llamadafunc_1 : 145
estatuto_llamadafunc_2 : 145
estatuto_llamadafunc_3 : 150 151
estatuto_llamadafunc_4 : 151
estatuto_llamadafunc_5 : 145
estatuto_llamadafunc_6 : 145
estatuto_print       : 141 142
estatuto_while_1     : 135
estatuto_while_2     : 135
estatuto_while_3     : 135
estatutotipos        : 53
exp                  : 65 65 78 79 91 126 126 150 151 156 160 160 168 169 177 177 177 177 178 178 178 179 179 179 180 180 180 181 181 181 182 182 182 182 182 183
exp_1                : 119
exp_10               : 79
exp_11               : 78
exp_12               : 61
exp_13               : 61
exp_2                : 98
exp_3                : 91
exp_4                : 96
exp_5                : 89
exp_6                : 107
exp_7                : 107
exp_8                : 70
exp_9                : 69
exp_asign            : 61
exp_cte_bool         : 117
exp_cte_float        : 116
exp_cte_int          : 115
exp_cte_string       : 118
expresion            : 61 76 107 129 135 141
f                    : 10
factor               : 96
funcion              : 28
funcvars             : 30
g                    : 30
goto_main_quad       : 1
h                    : 30
j                    : 42
k                    : 46
l                    : 50 51
linecolorfunc        : 164
lineparam            : 171
linewidthfunc        : 162
llamadafunc          : 58 111
m                    : 69
main                 : 1
mataux               : 21 23
matrix               : 12
n                    : 69
o                    : 70
opfunc               : 106 157
p                    : 78
param                : 40 44
programa             : 0
q                    : 79
r                    : 119
randomfunc           : 159
return               : 60
s                    : 129
saveMatrixID         : 22 23
saveParamVar         : 42
saveTipo             : 11
saveVarID            : 14 15
specialexp           : 69 70
specialfunc          : 59
squareparam          : 172
starparam            : 174
startfillfunc        : 167
stopfillfunc         : 167
t                    : 145
termino              : 89 98
tipo                 : 11 42
triangleparam        : 175
u                    : 148 151
v                    : 170
varcte               : 110
vars                 : 6 32 48

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . BEGIN PROGRAM goto_main_quad createDirProc ID altaPrograma SEMICOLON a LBRACKET crearGlobalTam b main RBRACKET SEMICOLON END

    BEGIN           shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> BEGIN . PROGRAM goto_main_quad createDirProc ID altaPrograma SEMICOLON a LBRACKET crearGlobalTam b main RBRACKET SEMICOLON END

    PROGRAM         shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (1) programa -> BEGIN PROGRAM . goto_main_quad createDirProc ID altaPrograma SEMICOLON a LBRACKET crearGlobalTam b main RBRACKET SEMICOLON END
    (2) goto_main_quad -> .

    ID              reduce using rule 2 (goto_main_quad -> .)

    goto_main_quad                 shift and go to state 4

state 4

    (1) programa -> BEGIN PROGRAM goto_main_quad . createDirProc ID altaPrograma SEMICOLON a LBRACKET crearGlobalTam b main RBRACKET SEMICOLON END
    (3) createDirProc -> .

    ID              reduce using rule 3 (createDirProc -> .)

    createDirProc                  shift and go to state 5

state 5

    (1) programa -> BEGIN PROGRAM goto_main_quad createDirProc . ID altaPrograma SEMICOLON a LBRACKET crearGlobalTam b main RBRACKET SEMICOLON END

    ID              shift and go to state 6


state 6

    (1) programa -> BEGIN PROGRAM goto_main_quad createDirProc ID . altaPrograma SEMICOLON a LBRACKET crearGlobalTam b main RBRACKET SEMICOLON END
    (4) altaPrograma -> .

    SEMICOLON       reduce using rule 4 (altaPrograma -> .)

    altaPrograma                   shift and go to state 7

state 7

    (1) programa -> BEGIN PROGRAM goto_main_quad createDirProc ID altaPrograma . SEMICOLON a LBRACKET crearGlobalTam b main RBRACKET SEMICOLON END

    SEMICOLON       shift and go to state 8


state 8

    (1) programa -> BEGIN PROGRAM goto_main_quad createDirProc ID altaPrograma SEMICOLON . a LBRACKET crearGlobalTam b main RBRACKET SEMICOLON END
    (6) a -> . vars
    (7) a -> .
    (8) vars -> . VAR createGlobalTable c

    LBRACKET        reduce using rule 7 (a -> .)
    VAR             shift and go to state 11

    a                              shift and go to state 9
    vars                           shift and go to state 10

state 9

    (1) programa -> BEGIN PROGRAM goto_main_quad createDirProc ID altaPrograma SEMICOLON a . LBRACKET crearGlobalTam b main RBRACKET SEMICOLON END

    LBRACKET        shift and go to state 12


state 10

    (6) a -> vars .

    LBRACKET        reduce using rule 6 (a -> vars .)


state 11

    (8) vars -> VAR . createGlobalTable c
    (9) createGlobalTable -> .

    ID              reduce using rule 9 (createGlobalTable -> .)

    createGlobalTable              shift and go to state 13

state 12

    (1) programa -> BEGIN PROGRAM goto_main_quad createDirProc ID altaPrograma SEMICOLON a LBRACKET . crearGlobalTam b main RBRACKET SEMICOLON END
    (5) crearGlobalTam -> .

    FUNC            reduce using rule 5 (crearGlobalTam -> .)
    MAIN            reduce using rule 5 (crearGlobalTam -> .)

    crearGlobalTam                 shift and go to state 14

state 13

    (8) vars -> VAR createGlobalTable . c
    (10) c -> . f SEMICOLON e
    (11) f -> . d COLON tipo saveTipo
    (12) f -> . matrix
    (14) d -> . ID saveVarID
    (15) d -> . ID saveVarID COMMA d
    (21) matrix -> . mataux COLON INT
    (22) mataux -> . ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET almacenaLimites
    (23) mataux -> . ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET almacenaLimites COMMA mataux

    ID              shift and go to state 20

    c                              shift and go to state 15
    d                              shift and go to state 16
    f                              shift and go to state 17
    mataux                         shift and go to state 19
    matrix                         shift and go to state 18

state 14

    (1) programa -> BEGIN PROGRAM goto_main_quad createDirProc ID altaPrograma SEMICOLON a LBRACKET crearGlobalTam . b main RBRACKET SEMICOLON END
    (28) b -> . funcion b
    (29) b -> .
    (30) funcion -> . FUNC g ID altaFuncion LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno

    MAIN            reduce using rule 29 (b -> .)
    FUNC            shift and go to state 22

    b                              shift and go to state 23
    funcion                        shift and go to state 21

state 15

    (8) vars -> VAR createGlobalTable c .

    LBRACKET        reduce using rule 8 (vars -> VAR createGlobalTable c .)


state 16

    (11) f -> d . COLON tipo saveTipo

    COLON           shift and go to state 24


state 17

    (10) c -> f . SEMICOLON e

    SEMICOLON       shift and go to state 25


state 18

    (12) f -> matrix .

    SEMICOLON       reduce using rule 12 (f -> matrix .)


state 19

    (21) matrix -> mataux . COLON INT

    COLON           shift and go to state 26


state 20

    (14) d -> ID . saveVarID
    (15) d -> ID . saveVarID COMMA d
    (22) mataux -> ID . saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET almacenaLimites
    (23) mataux -> ID . saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET almacenaLimites COMMA mataux
    (16) saveVarID -> .
    (24) saveMatrixID -> .

    COMMA           reduce using rule 16 (saveVarID -> .)
    COLON           reduce using rule 16 (saveVarID -> .)
    LSQUAREBRACKET  reduce using rule 24 (saveMatrixID -> .)

    saveVarID                      shift and go to state 28
    saveMatrixID                   shift and go to state 27

state 21

    (28) b -> funcion . b
    (28) b -> . funcion b
    (29) b -> .
    (30) funcion -> . FUNC g ID altaFuncion LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno

    MAIN            reduce using rule 29 (b -> .)
    FUNC            shift and go to state 22

    b                              shift and go to state 29
    funcion                        shift and go to state 21

state 22

    (30) funcion -> FUNC . g ID altaFuncion LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno
    (36) g -> . INT
    (37) g -> . BOOL
    (38) g -> . FLOAT
    (39) g -> . VOID

    INT             shift and go to state 34
    BOOL            shift and go to state 33
    FLOAT           shift and go to state 32
    VOID            shift and go to state 31

    g                              shift and go to state 30

state 23

    (1) programa -> BEGIN PROGRAM goto_main_quad createDirProc ID altaPrograma SEMICOLON a LBRACKET crearGlobalTam b . main RBRACKET SEMICOLON END
    (46) main -> . MAIN altaMain LPARENTHESIS RPARENTHESIS k bloque SEMICOLON ENDFUNC

    MAIN            shift and go to state 35

    main                           shift and go to state 36

state 24

    (11) f -> d COLON . tipo saveTipo
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . BOOL
    (20) tipo -> . STRING

    INT             shift and go to state 38
    FLOAT           shift and go to state 39
    BOOL            shift and go to state 40
    STRING          shift and go to state 41

    tipo                           shift and go to state 37

state 25

    (10) c -> f SEMICOLON . e
    (26) e -> . c
    (27) e -> .
    (10) c -> . f SEMICOLON e
    (11) f -> . d COLON tipo saveTipo
    (12) f -> . matrix
    (14) d -> . ID saveVarID
    (15) d -> . ID saveVarID COMMA d
    (21) matrix -> . mataux COLON INT
    (22) mataux -> . ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET almacenaLimites
    (23) mataux -> . ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET almacenaLimites COMMA mataux

    LBRACKET        reduce using rule 27 (e -> .)
    ID              shift and go to state 20

    c                              shift and go to state 42
    e                              shift and go to state 43
    d                              shift and go to state 16
    f                              shift and go to state 17
    mataux                         shift and go to state 19
    matrix                         shift and go to state 18

state 26

    (21) matrix -> mataux COLON . INT

    INT             shift and go to state 44


state 27

    (22) mataux -> ID saveMatrixID . LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET almacenaLimites
    (23) mataux -> ID saveMatrixID . LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET almacenaLimites COMMA mataux

    LSQUAREBRACKET  shift and go to state 45


state 28

    (14) d -> ID saveVarID .
    (15) d -> ID saveVarID . COMMA d

    COLON           reduce using rule 14 (d -> ID saveVarID .)
    COMMA           shift and go to state 46


state 29

    (28) b -> funcion b .

    MAIN            reduce using rule 28 (b -> funcion b .)


state 30

    (30) funcion -> FUNC g . ID altaFuncion LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno

    ID              shift and go to state 47


state 31

    (39) g -> VOID .

    ID              reduce using rule 39 (g -> VOID .)


state 32

    (38) g -> FLOAT .

    ID              reduce using rule 38 (g -> FLOAT .)


state 33

    (37) g -> BOOL .

    ID              reduce using rule 37 (g -> BOOL .)


state 34

    (36) g -> INT .

    ID              reduce using rule 36 (g -> INT .)


state 35

    (46) main -> MAIN . altaMain LPARENTHESIS RPARENTHESIS k bloque SEMICOLON ENDFUNC
    (47) altaMain -> .

    LPARENTHESIS    reduce using rule 47 (altaMain -> .)

    altaMain                       shift and go to state 48

state 36

    (1) programa -> BEGIN PROGRAM goto_main_quad createDirProc ID altaPrograma SEMICOLON a LBRACKET crearGlobalTam b main . RBRACKET SEMICOLON END

    RBRACKET        shift and go to state 49


state 37

    (11) f -> d COLON tipo . saveTipo
    (13) saveTipo -> .

    SEMICOLON       reduce using rule 13 (saveTipo -> .)

    saveTipo                       shift and go to state 50

state 38

    (17) tipo -> INT .

    COMMA           reduce using rule 17 (tipo -> INT .)
    RPARENTHESIS    reduce using rule 17 (tipo -> INT .)
    SEMICOLON       reduce using rule 17 (tipo -> INT .)


state 39

    (18) tipo -> FLOAT .

    COMMA           reduce using rule 18 (tipo -> FLOAT .)
    RPARENTHESIS    reduce using rule 18 (tipo -> FLOAT .)
    SEMICOLON       reduce using rule 18 (tipo -> FLOAT .)


state 40

    (19) tipo -> BOOL .

    COMMA           reduce using rule 19 (tipo -> BOOL .)
    RPARENTHESIS    reduce using rule 19 (tipo -> BOOL .)
    SEMICOLON       reduce using rule 19 (tipo -> BOOL .)


state 41

    (20) tipo -> STRING .

    COMMA           reduce using rule 20 (tipo -> STRING .)
    RPARENTHESIS    reduce using rule 20 (tipo -> STRING .)
    SEMICOLON       reduce using rule 20 (tipo -> STRING .)


state 42

    (26) e -> c .

    LBRACKET        reduce using rule 26 (e -> c .)


state 43

    (10) c -> f SEMICOLON e .

    LBRACKET        reduce using rule 10 (c -> f SEMICOLON e .)


state 44

    (21) matrix -> mataux COLON INT .

    SEMICOLON       reduce using rule 21 (matrix -> mataux COLON INT .)


state 45

    (22) mataux -> ID saveMatrixID LSQUAREBRACKET . CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET almacenaLimites
    (23) mataux -> ID saveMatrixID LSQUAREBRACKET . CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET almacenaLimites COMMA mataux

    CTEINT          shift and go to state 51


state 46

    (15) d -> ID saveVarID COMMA . d
    (14) d -> . ID saveVarID
    (15) d -> . ID saveVarID COMMA d

    ID              shift and go to state 52

    d                              shift and go to state 53

state 47

    (30) funcion -> FUNC g ID . altaFuncion LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno
    (34) altaFuncion -> .

    LPARENTHESIS    reduce using rule 34 (altaFuncion -> .)

    altaFuncion                    shift and go to state 54

state 48

    (46) main -> MAIN altaMain . LPARENTHESIS RPARENTHESIS k bloque SEMICOLON ENDFUNC

    LPARENTHESIS    shift and go to state 55


state 49

    (1) programa -> BEGIN PROGRAM goto_main_quad createDirProc ID altaPrograma SEMICOLON a LBRACKET crearGlobalTam b main RBRACKET . SEMICOLON END

    SEMICOLON       shift and go to state 56


state 50

    (11) f -> d COLON tipo saveTipo .

    SEMICOLON       reduce using rule 11 (f -> d COLON tipo saveTipo .)


state 51

    (22) mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT . RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET almacenaLimites
    (23) mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT . RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET almacenaLimites COMMA mataux

    RSQUAREBRACKET  shift and go to state 57


state 52

    (14) d -> ID . saveVarID
    (15) d -> ID . saveVarID COMMA d
    (16) saveVarID -> .

    COMMA           reduce using rule 16 (saveVarID -> .)
    COLON           reduce using rule 16 (saveVarID -> .)

    saveVarID                      shift and go to state 28

state 53

    (15) d -> ID saveVarID COMMA d .

    COLON           reduce using rule 15 (d -> ID saveVarID COMMA d .)


state 54

    (30) funcion -> FUNC g ID altaFuncion . LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno

    LPARENTHESIS    shift and go to state 58


state 55

    (46) main -> MAIN altaMain LPARENTHESIS . RPARENTHESIS k bloque SEMICOLON ENDFUNC

    RPARENTHESIS    shift and go to state 59


state 56

    (1) programa -> BEGIN PROGRAM goto_main_quad createDirProc ID altaPrograma SEMICOLON a LBRACKET crearGlobalTam b main RBRACKET SEMICOLON . END

    END             shift and go to state 60


state 57

    (22) mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET . LSQUAREBRACKET CTEINT RSQUAREBRACKET almacenaLimites
    (23) mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET . LSQUAREBRACKET CTEINT RSQUAREBRACKET almacenaLimites COMMA mataux

    LSQUAREBRACKET  shift and go to state 61


state 58

    (30) funcion -> FUNC g ID altaFuncion LPARENTHESIS . h RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno
    (40) h -> . param
    (41) h -> .
    (42) param -> . ID COLON tipo saveParamVar j

    RPARENTHESIS    reduce using rule 41 (h -> .)
    ID              shift and go to state 64

    h                              shift and go to state 62
    param                          shift and go to state 63

state 59

    (46) main -> MAIN altaMain LPARENTHESIS RPARENTHESIS . k bloque SEMICOLON ENDFUNC
    (48) k -> . vars
    (49) k -> .
    (8) vars -> . VAR createGlobalTable c

    LBRACKET        reduce using rule 49 (k -> .)
    VAR             shift and go to state 11

    vars                           shift and go to state 66
    k                              shift and go to state 65

state 60

    (1) programa -> BEGIN PROGRAM goto_main_quad createDirProc ID altaPrograma SEMICOLON a LBRACKET crearGlobalTam b main RBRACKET SEMICOLON END .

    $end            reduce using rule 1 (programa -> BEGIN PROGRAM goto_main_quad createDirProc ID altaPrograma SEMICOLON a LBRACKET crearGlobalTam b main RBRACKET SEMICOLON END .)


state 61

    (22) mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET . CTEINT RSQUAREBRACKET almacenaLimites
    (23) mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET . CTEINT RSQUAREBRACKET almacenaLimites COMMA mataux

    CTEINT          shift and go to state 67


state 62

    (30) funcion -> FUNC g ID altaFuncion LPARENTHESIS h . RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno

    RPARENTHESIS    shift and go to state 68


state 63

    (40) h -> param .

    RPARENTHESIS    reduce using rule 40 (h -> param .)


state 64

    (42) param -> ID . COLON tipo saveParamVar j

    COLON           shift and go to state 69


state 65

    (46) main -> MAIN altaMain LPARENTHESIS RPARENTHESIS k . bloque SEMICOLON ENDFUNC
    (50) bloque -> . LBRACKET l RBRACKET

    LBRACKET        shift and go to state 70

    bloque                         shift and go to state 71

state 66

    (48) k -> vars .

    LBRACKET        reduce using rule 48 (k -> vars .)


state 67

    (22) mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT . RSQUAREBRACKET almacenaLimites
    (23) mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT . RSQUAREBRACKET almacenaLimites COMMA mataux

    RSQUAREBRACKET  shift and go to state 72


state 68

    (30) funcion -> FUNC g ID altaFuncion LPARENTHESIS h RPARENTHESIS . funcvars altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno
    (32) funcvars -> . vars
    (33) funcvars -> .
    (8) vars -> . VAR createGlobalTable c

    LBRACKET        reduce using rule 33 (funcvars -> .)
    VAR             shift and go to state 11

    vars                           shift and go to state 74
    funcvars                       shift and go to state 73

state 69

    (42) param -> ID COLON . tipo saveParamVar j
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . BOOL
    (20) tipo -> . STRING

    INT             shift and go to state 38
    FLOAT           shift and go to state 39
    BOOL            shift and go to state 40
    STRING          shift and go to state 41

    tipo                           shift and go to state 75

state 70

    (50) bloque -> LBRACKET . l RBRACKET
    (51) l -> . estatuto l
    (52) l -> .
    (53) estatuto -> . estatutotipos SEMICOLON
    (54) estatutotipos -> . asignacion
    (55) estatutotipos -> . condicion
    (56) estatutotipos -> . ciclo
    (57) estatutotipos -> . escritura
    (58) estatutotipos -> . llamadafunc
    (59) estatutotipos -> . specialfunc
    (60) estatutotipos -> . return
    (61) asignacion -> . ID exp_asign aa EQUAL exp_12 expresion exp_13
    (129) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS estatuto_if_1 bloque s estatuto_endif
    (135) ciclo -> . WHILE estatuto_while_1 LPARENTHESIS expresion RPARENTHESIS estatuto_while_2 bloque estatuto_while_3
    (139) escritura -> . PRINT LPARENTHESIS ah RPARENTHESIS
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (157) specialfunc -> . opfunc
    (158) specialfunc -> . dibujafunc
    (156) return -> . RETURN exp
    (159) opfunc -> . randomfunc
    (161) dibujafunc -> . al am an
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS
    (162) al -> . linewidthfunc
    (163) al -> .
    (168) linewidthfunc -> . LINEWIDTH LPARENTHESIS exp RPARENTHESIS SEMICOLON

    RBRACKET        reduce using rule 52 (l -> .)
    ID              shift and go to state 92
    IF              shift and go to state 93
    WHILE           shift and go to state 78
    PRINT           shift and go to state 80
    CALL            shift and go to state 97
    RETURN          shift and go to state 76
    RANDOM          shift and go to state 88
    LINECOLOR       reduce using rule 163 (al -> .)
    STARTFILL       reduce using rule 163 (al -> .)
    LINE            reduce using rule 163 (al -> .)
    SQUARE          reduce using rule 163 (al -> .)
    CIRCLE          reduce using rule 163 (al -> .)
    STAR            reduce using rule 163 (al -> .)
    TRIANGLE        reduce using rule 163 (al -> .)
    ARC             reduce using rule 163 (al -> .)
    LINEWIDTH       shift and go to state 94

    randomfunc                     shift and go to state 90
    dibujafunc                     shift and go to state 79
    ciclo                          shift and go to state 81
    llamadafunc                    shift and go to state 82
    estatuto                       shift and go to state 83
    estatutotipos                  shift and go to state 84
    condicion                      shift and go to state 85
    specialfunc                    shift and go to state 86
    return                         shift and go to state 87
    linewidthfunc                  shift and go to state 89
    al                             shift and go to state 77
    opfunc                         shift and go to state 91
    asignacion                     shift and go to state 95
    l                              shift and go to state 96
    escritura                      shift and go to state 98

state 71

    (46) main -> MAIN altaMain LPARENTHESIS RPARENTHESIS k bloque . SEMICOLON ENDFUNC

    SEMICOLON       shift and go to state 99


state 72

    (22) mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET . almacenaLimites
    (23) mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET . almacenaLimites COMMA mataux
    (25) almacenaLimites -> .

    COMMA           reduce using rule 25 (almacenaLimites -> .)
    COLON           reduce using rule 25 (almacenaLimites -> .)

    almacenaLimites                shift and go to state 100

state 73

    (30) funcion -> FUNC g ID altaFuncion LPARENTHESIS h RPARENTHESIS funcvars . altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno
    (35) altaInicioFunc -> .

    LBRACKET        reduce using rule 35 (altaInicioFunc -> .)

    altaInicioFunc                 shift and go to state 101

state 74

    (32) funcvars -> vars .

    LBRACKET        reduce using rule 32 (funcvars -> vars .)


state 75

    (42) param -> ID COLON tipo . saveParamVar j
    (43) saveParamVar -> .

    COMMA           reduce using rule 43 (saveParamVar -> .)
    RPARENTHESIS    reduce using rule 43 (saveParamVar -> .)

    saveParamVar                   shift and go to state 102

state 76

    (156) return -> RETURN . exp
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 114

state 77

    (161) dibujafunc -> al . am an
    (164) am -> . linecolorfunc
    (165) am -> .
    (169) linecolorfunc -> . LINECOLOR LPARENTHESIS exp RPARENTHESIS SEMICOLON

    STARTFILL       reduce using rule 165 (am -> .)
    LINE            reduce using rule 165 (am -> .)
    SQUARE          reduce using rule 165 (am -> .)
    CIRCLE          reduce using rule 165 (am -> .)
    STAR            reduce using rule 165 (am -> .)
    TRIANGLE        reduce using rule 165 (am -> .)
    ARC             reduce using rule 165 (am -> .)
    LINECOLOR       shift and go to state 117

    linecolorfunc                  shift and go to state 115
    am                             shift and go to state 116

state 78

    (135) ciclo -> WHILE . estatuto_while_1 LPARENTHESIS expresion RPARENTHESIS estatuto_while_2 bloque estatuto_while_3
    (136) estatuto_while_1 -> .

    LPARENTHESIS    reduce using rule 136 (estatuto_while_1 -> .)

    estatuto_while_1               shift and go to state 118

state 79

    (158) specialfunc -> dibujafunc .

    SEMICOLON       reduce using rule 158 (specialfunc -> dibujafunc .)


state 80

    (139) escritura -> PRINT . LPARENTHESIS ah RPARENTHESIS

    LPARENTHESIS    shift and go to state 119


state 81

    (56) estatutotipos -> ciclo .

    SEMICOLON       reduce using rule 56 (estatutotipos -> ciclo .)


state 82

    (58) estatutotipos -> llamadafunc .

    SEMICOLON       reduce using rule 58 (estatutotipos -> llamadafunc .)


state 83

    (51) l -> estatuto . l
    (51) l -> . estatuto l
    (52) l -> .
    (53) estatuto -> . estatutotipos SEMICOLON
    (54) estatutotipos -> . asignacion
    (55) estatutotipos -> . condicion
    (56) estatutotipos -> . ciclo
    (57) estatutotipos -> . escritura
    (58) estatutotipos -> . llamadafunc
    (59) estatutotipos -> . specialfunc
    (60) estatutotipos -> . return
    (61) asignacion -> . ID exp_asign aa EQUAL exp_12 expresion exp_13
    (129) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS estatuto_if_1 bloque s estatuto_endif
    (135) ciclo -> . WHILE estatuto_while_1 LPARENTHESIS expresion RPARENTHESIS estatuto_while_2 bloque estatuto_while_3
    (139) escritura -> . PRINT LPARENTHESIS ah RPARENTHESIS
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (157) specialfunc -> . opfunc
    (158) specialfunc -> . dibujafunc
    (156) return -> . RETURN exp
    (159) opfunc -> . randomfunc
    (161) dibujafunc -> . al am an
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS
    (162) al -> . linewidthfunc
    (163) al -> .
    (168) linewidthfunc -> . LINEWIDTH LPARENTHESIS exp RPARENTHESIS SEMICOLON

    RBRACKET        reduce using rule 52 (l -> .)
    ID              shift and go to state 92
    IF              shift and go to state 93
    WHILE           shift and go to state 78
    PRINT           shift and go to state 80
    CALL            shift and go to state 97
    RETURN          shift and go to state 76
    RANDOM          shift and go to state 88
    LINECOLOR       reduce using rule 163 (al -> .)
    STARTFILL       reduce using rule 163 (al -> .)
    LINE            reduce using rule 163 (al -> .)
    SQUARE          reduce using rule 163 (al -> .)
    CIRCLE          reduce using rule 163 (al -> .)
    STAR            reduce using rule 163 (al -> .)
    TRIANGLE        reduce using rule 163 (al -> .)
    ARC             reduce using rule 163 (al -> .)
    LINEWIDTH       shift and go to state 94

    randomfunc                     shift and go to state 90
    dibujafunc                     shift and go to state 79
    ciclo                          shift and go to state 81
    llamadafunc                    shift and go to state 82
    estatuto                       shift and go to state 83
    estatutotipos                  shift and go to state 84
    condicion                      shift and go to state 85
    specialfunc                    shift and go to state 86
    return                         shift and go to state 87
    linewidthfunc                  shift and go to state 89
    al                             shift and go to state 77
    opfunc                         shift and go to state 91
    asignacion                     shift and go to state 95
    l                              shift and go to state 120
    escritura                      shift and go to state 98

state 84

    (53) estatuto -> estatutotipos . SEMICOLON

    SEMICOLON       shift and go to state 121


state 85

    (55) estatutotipos -> condicion .

    SEMICOLON       reduce using rule 55 (estatutotipos -> condicion .)


state 86

    (59) estatutotipos -> specialfunc .

    SEMICOLON       reduce using rule 59 (estatutotipos -> specialfunc .)


state 87

    (60) estatutotipos -> return .

    SEMICOLON       reduce using rule 60 (estatutotipos -> return .)


state 88

    (160) randomfunc -> RANDOM . LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 122


state 89

    (162) al -> linewidthfunc .

    LINECOLOR       reduce using rule 162 (al -> linewidthfunc .)
    STARTFILL       reduce using rule 162 (al -> linewidthfunc .)
    LINE            reduce using rule 162 (al -> linewidthfunc .)
    SQUARE          reduce using rule 162 (al -> linewidthfunc .)
    CIRCLE          reduce using rule 162 (al -> linewidthfunc .)
    STAR            reduce using rule 162 (al -> linewidthfunc .)
    TRIANGLE        reduce using rule 162 (al -> linewidthfunc .)
    ARC             reduce using rule 162 (al -> linewidthfunc .)


state 90

    (159) opfunc -> randomfunc .

    PRODUCT         reduce using rule 159 (opfunc -> randomfunc .)
    DIVISION        reduce using rule 159 (opfunc -> randomfunc .)
    PLUS            reduce using rule 159 (opfunc -> randomfunc .)
    MINUS           reduce using rule 159 (opfunc -> randomfunc .)
    GREATERTHAN     reduce using rule 159 (opfunc -> randomfunc .)
    LESSTHAN        reduce using rule 159 (opfunc -> randomfunc .)
    NOTEQUAL        reduce using rule 159 (opfunc -> randomfunc .)
    LESSEQUAL       reduce using rule 159 (opfunc -> randomfunc .)
    GREATEREQUAL    reduce using rule 159 (opfunc -> randomfunc .)
    EQUALEQUAL      reduce using rule 159 (opfunc -> randomfunc .)
    LPARENTHESIS    reduce using rule 159 (opfunc -> randomfunc .)
    CALL            reduce using rule 159 (opfunc -> randomfunc .)
    RANDOM          reduce using rule 159 (opfunc -> randomfunc .)
    CTEINT          reduce using rule 159 (opfunc -> randomfunc .)
    CTEFLOAT        reduce using rule 159 (opfunc -> randomfunc .)
    CTESTRING       reduce using rule 159 (opfunc -> randomfunc .)
    ID              reduce using rule 159 (opfunc -> randomfunc .)
    TRUE            reduce using rule 159 (opfunc -> randomfunc .)
    FALSE           reduce using rule 159 (opfunc -> randomfunc .)
    COMMA           reduce using rule 159 (opfunc -> randomfunc .)
    RPARENTHESIS    reduce using rule 159 (opfunc -> randomfunc .)
    SEMICOLON       reduce using rule 159 (opfunc -> randomfunc .)
    AND             reduce using rule 159 (opfunc -> randomfunc .)
    OR              reduce using rule 159 (opfunc -> randomfunc .)
    RSQUAREBRACKET  reduce using rule 159 (opfunc -> randomfunc .)


state 91

    (157) specialfunc -> opfunc .

    SEMICOLON       reduce using rule 157 (specialfunc -> opfunc .)


state 92

    (61) asignacion -> ID . exp_asign aa EQUAL exp_12 expresion exp_13
    (62) exp_asign -> .

    LSQUAREBRACKET  reduce using rule 62 (exp_asign -> .)
    EQUAL           reduce using rule 62 (exp_asign -> .)

    exp_asign                      shift and go to state 123

state 93

    (129) condicion -> IF . LPARENTHESIS expresion RPARENTHESIS estatuto_if_1 bloque s estatuto_endif

    LPARENTHESIS    shift and go to state 124


state 94

    (168) linewidthfunc -> LINEWIDTH . LPARENTHESIS exp RPARENTHESIS SEMICOLON

    LPARENTHESIS    shift and go to state 125


state 95

    (54) estatutotipos -> asignacion .

    SEMICOLON       reduce using rule 54 (estatutotipos -> asignacion .)


state 96

    (50) bloque -> LBRACKET l . RBRACKET

    RBRACKET        shift and go to state 126


state 97

    (145) llamadafunc -> CALL . ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6

    ID              shift and go to state 127


state 98

    (57) estatutotipos -> escritura .

    SEMICOLON       reduce using rule 57 (estatutotipos -> escritura .)


state 99

    (46) main -> MAIN altaMain LPARENTHESIS RPARENTHESIS k bloque SEMICOLON . ENDFUNC

    ENDFUNC         shift and go to state 128


state 100

    (22) mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET almacenaLimites .
    (23) mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET almacenaLimites . COMMA mataux

    COLON           reduce using rule 22 (mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET almacenaLimites .)
    COMMA           shift and go to state 129


state 101

    (30) funcion -> FUNC g ID altaFuncion LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc . bloque SEMICOLON ENDFUNC accionRetorno
    (50) bloque -> . LBRACKET l RBRACKET

    LBRACKET        shift and go to state 70

    bloque                         shift and go to state 130

state 102

    (42) param -> ID COLON tipo saveParamVar . j
    (44) j -> . COMMA param
    (45) j -> .

    COMMA           shift and go to state 132
    RPARENTHESIS    reduce using rule 45 (j -> .)

    j                              shift and go to state 131

state 103

    (103) factor -> ad .

    PRODUCT         reduce using rule 103 (factor -> ad .)
    DIVISION        reduce using rule 103 (factor -> ad .)
    PLUS            reduce using rule 103 (factor -> ad .)
    MINUS           reduce using rule 103 (factor -> ad .)
    RPARENTHESIS    reduce using rule 103 (factor -> ad .)
    GREATERTHAN     reduce using rule 103 (factor -> ad .)
    LESSTHAN        reduce using rule 103 (factor -> ad .)
    NOTEQUAL        reduce using rule 103 (factor -> ad .)
    LESSEQUAL       reduce using rule 103 (factor -> ad .)
    GREATEREQUAL    reduce using rule 103 (factor -> ad .)
    EQUALEQUAL      reduce using rule 103 (factor -> ad .)
    AND             reduce using rule 103 (factor -> ad .)
    OR              reduce using rule 103 (factor -> ad .)
    LPARENTHESIS    reduce using rule 103 (factor -> ad .)
    CALL            reduce using rule 103 (factor -> ad .)
    RANDOM          reduce using rule 103 (factor -> ad .)
    CTEINT          reduce using rule 103 (factor -> ad .)
    CTEFLOAT        reduce using rule 103 (factor -> ad .)
    CTESTRING       reduce using rule 103 (factor -> ad .)
    ID              reduce using rule 103 (factor -> ad .)
    TRUE            reduce using rule 103 (factor -> ad .)
    FALSE           reduce using rule 103 (factor -> ad .)
    COMMA           reduce using rule 103 (factor -> ad .)
    SEMICOLON       reduce using rule 103 (factor -> ad .)
    RSQUAREBRACKET  reduce using rule 103 (factor -> ad .)


state 104

    (110) ae -> ag . varcte
    (115) varcte -> . CTEINT exp_cte_int
    (116) varcte -> . CTEFLOAT exp_cte_float
    (117) varcte -> . ctebool exp_cte_bool
    (118) varcte -> . CTESTRING exp_cte_string
    (119) varcte -> . ID exp_1 r
    (122) ctebool -> . TRUE
    (123) ctebool -> . FALSE

    CTEINT          shift and go to state 136
    CTEFLOAT        shift and go to state 137
    CTESTRING       shift and go to state 133
    ID              shift and go to state 140
    TRUE            shift and go to state 139
    FALSE           shift and go to state 138

    varcte                         shift and go to state 134
    ctebool                        shift and go to state 135

state 105

    (105) factor -> af .

    PRODUCT         reduce using rule 105 (factor -> af .)
    DIVISION        reduce using rule 105 (factor -> af .)
    PLUS            reduce using rule 105 (factor -> af .)
    MINUS           reduce using rule 105 (factor -> af .)
    RPARENTHESIS    reduce using rule 105 (factor -> af .)
    GREATERTHAN     reduce using rule 105 (factor -> af .)
    LESSTHAN        reduce using rule 105 (factor -> af .)
    NOTEQUAL        reduce using rule 105 (factor -> af .)
    LESSEQUAL       reduce using rule 105 (factor -> af .)
    GREATEREQUAL    reduce using rule 105 (factor -> af .)
    EQUALEQUAL      reduce using rule 105 (factor -> af .)
    AND             reduce using rule 105 (factor -> af .)
    OR              reduce using rule 105 (factor -> af .)
    LPARENTHESIS    reduce using rule 105 (factor -> af .)
    CALL            reduce using rule 105 (factor -> af .)
    RANDOM          reduce using rule 105 (factor -> af .)
    CTEINT          reduce using rule 105 (factor -> af .)
    CTEFLOAT        reduce using rule 105 (factor -> af .)
    CTESTRING       reduce using rule 105 (factor -> af .)
    ID              reduce using rule 105 (factor -> af .)
    TRUE            reduce using rule 105 (factor -> af .)
    FALSE           reduce using rule 105 (factor -> af .)
    COMMA           reduce using rule 105 (factor -> af .)
    SEMICOLON       reduce using rule 105 (factor -> af .)
    RSQUAREBRACKET  reduce using rule 105 (factor -> af .)


state 106

    (89) exp -> termino . exp_5 ab
    (90) exp_5 -> .

    PLUS            reduce using rule 90 (exp_5 -> .)
    MINUS           reduce using rule 90 (exp_5 -> .)
    SEMICOLON       reduce using rule 90 (exp_5 -> .)
    GREATERTHAN     reduce using rule 90 (exp_5 -> .)
    LESSTHAN        reduce using rule 90 (exp_5 -> .)
    NOTEQUAL        reduce using rule 90 (exp_5 -> .)
    LESSEQUAL       reduce using rule 90 (exp_5 -> .)
    GREATEREQUAL    reduce using rule 90 (exp_5 -> .)
    EQUALEQUAL      reduce using rule 90 (exp_5 -> .)
    AND             reduce using rule 90 (exp_5 -> .)
    OR              reduce using rule 90 (exp_5 -> .)
    LPARENTHESIS    reduce using rule 90 (exp_5 -> .)
    CALL            reduce using rule 90 (exp_5 -> .)
    RANDOM          reduce using rule 90 (exp_5 -> .)
    CTEINT          reduce using rule 90 (exp_5 -> .)
    CTEFLOAT        reduce using rule 90 (exp_5 -> .)
    CTESTRING       reduce using rule 90 (exp_5 -> .)
    ID              reduce using rule 90 (exp_5 -> .)
    TRUE            reduce using rule 90 (exp_5 -> .)
    FALSE           reduce using rule 90 (exp_5 -> .)
    COMMA           reduce using rule 90 (exp_5 -> .)
    RPARENTHESIS    reduce using rule 90 (exp_5 -> .)
    RSQUAREBRACKET  reduce using rule 90 (exp_5 -> .)

    exp_5                          shift and go to state 141

state 107

    (104) factor -> ae .

    PRODUCT         reduce using rule 104 (factor -> ae .)
    DIVISION        reduce using rule 104 (factor -> ae .)
    PLUS            reduce using rule 104 (factor -> ae .)
    MINUS           reduce using rule 104 (factor -> ae .)
    RPARENTHESIS    reduce using rule 104 (factor -> ae .)
    GREATERTHAN     reduce using rule 104 (factor -> ae .)
    LESSTHAN        reduce using rule 104 (factor -> ae .)
    NOTEQUAL        reduce using rule 104 (factor -> ae .)
    LESSEQUAL       reduce using rule 104 (factor -> ae .)
    GREATEREQUAL    reduce using rule 104 (factor -> ae .)
    EQUALEQUAL      reduce using rule 104 (factor -> ae .)
    AND             reduce using rule 104 (factor -> ae .)
    OR              reduce using rule 104 (factor -> ae .)
    LPARENTHESIS    reduce using rule 104 (factor -> ae .)
    CALL            reduce using rule 104 (factor -> ae .)
    RANDOM          reduce using rule 104 (factor -> ae .)
    CTEINT          reduce using rule 104 (factor -> ae .)
    CTEFLOAT        reduce using rule 104 (factor -> ae .)
    CTESTRING       reduce using rule 104 (factor -> ae .)
    ID              reduce using rule 104 (factor -> ae .)
    TRUE            reduce using rule 104 (factor -> ae .)
    FALSE           reduce using rule 104 (factor -> ae .)
    COMMA           reduce using rule 104 (factor -> ae .)
    SEMICOLON       reduce using rule 104 (factor -> ae .)
    RSQUAREBRACKET  reduce using rule 104 (factor -> ae .)


state 108

    (113) ag -> MINUS .

    CTEINT          reduce using rule 113 (ag -> MINUS .)
    CTEFLOAT        reduce using rule 113 (ag -> MINUS .)
    CTESTRING       reduce using rule 113 (ag -> MINUS .)
    ID              reduce using rule 113 (ag -> MINUS .)
    TRUE            reduce using rule 113 (ag -> MINUS .)
    FALSE           reduce using rule 113 (ag -> MINUS .)


state 109

    (111) af -> llamadafunc .

    PRODUCT         reduce using rule 111 (af -> llamadafunc .)
    DIVISION        reduce using rule 111 (af -> llamadafunc .)
    PLUS            reduce using rule 111 (af -> llamadafunc .)
    MINUS           reduce using rule 111 (af -> llamadafunc .)
    COMMA           reduce using rule 111 (af -> llamadafunc .)
    GREATERTHAN     reduce using rule 111 (af -> llamadafunc .)
    LESSTHAN        reduce using rule 111 (af -> llamadafunc .)
    NOTEQUAL        reduce using rule 111 (af -> llamadafunc .)
    LESSEQUAL       reduce using rule 111 (af -> llamadafunc .)
    GREATEREQUAL    reduce using rule 111 (af -> llamadafunc .)
    EQUALEQUAL      reduce using rule 111 (af -> llamadafunc .)
    AND             reduce using rule 111 (af -> llamadafunc .)
    OR              reduce using rule 111 (af -> llamadafunc .)
    LPARENTHESIS    reduce using rule 111 (af -> llamadafunc .)
    CALL            reduce using rule 111 (af -> llamadafunc .)
    RANDOM          reduce using rule 111 (af -> llamadafunc .)
    CTEINT          reduce using rule 111 (af -> llamadafunc .)
    CTEFLOAT        reduce using rule 111 (af -> llamadafunc .)
    CTESTRING       reduce using rule 111 (af -> llamadafunc .)
    ID              reduce using rule 111 (af -> llamadafunc .)
    TRUE            reduce using rule 111 (af -> llamadafunc .)
    FALSE           reduce using rule 111 (af -> llamadafunc .)
    SEMICOLON       reduce using rule 111 (af -> llamadafunc .)
    RSQUAREBRACKET  reduce using rule 111 (af -> llamadafunc .)
    RPARENTHESIS    reduce using rule 111 (af -> llamadafunc .)


state 110

    (112) ag -> PLUS .

    CTEINT          reduce using rule 112 (ag -> PLUS .)
    CTEFLOAT        reduce using rule 112 (ag -> PLUS .)
    CTESTRING       reduce using rule 112 (ag -> PLUS .)
    ID              reduce using rule 112 (ag -> PLUS .)
    TRUE            reduce using rule 112 (ag -> PLUS .)
    FALSE           reduce using rule 112 (ag -> PLUS .)


state 111

    (96) termino -> factor . exp_4 ac
    (97) exp_4 -> .

    PRODUCT         reduce using rule 97 (exp_4 -> .)
    DIVISION        reduce using rule 97 (exp_4 -> .)
    PLUS            reduce using rule 97 (exp_4 -> .)
    MINUS           reduce using rule 97 (exp_4 -> .)
    SEMICOLON       reduce using rule 97 (exp_4 -> .)
    GREATERTHAN     reduce using rule 97 (exp_4 -> .)
    LESSTHAN        reduce using rule 97 (exp_4 -> .)
    NOTEQUAL        reduce using rule 97 (exp_4 -> .)
    LESSEQUAL       reduce using rule 97 (exp_4 -> .)
    GREATEREQUAL    reduce using rule 97 (exp_4 -> .)
    EQUALEQUAL      reduce using rule 97 (exp_4 -> .)
    AND             reduce using rule 97 (exp_4 -> .)
    OR              reduce using rule 97 (exp_4 -> .)
    LPARENTHESIS    reduce using rule 97 (exp_4 -> .)
    CALL            reduce using rule 97 (exp_4 -> .)
    RANDOM          reduce using rule 97 (exp_4 -> .)
    CTEINT          reduce using rule 97 (exp_4 -> .)
    CTEFLOAT        reduce using rule 97 (exp_4 -> .)
    CTESTRING       reduce using rule 97 (exp_4 -> .)
    ID              reduce using rule 97 (exp_4 -> .)
    TRUE            reduce using rule 97 (exp_4 -> .)
    FALSE           reduce using rule 97 (exp_4 -> .)
    COMMA           reduce using rule 97 (exp_4 -> .)
    RPARENTHESIS    reduce using rule 97 (exp_4 -> .)
    RSQUAREBRACKET  reduce using rule 97 (exp_4 -> .)

    exp_4                          shift and go to state 142

state 112

    (107) ad -> LPARENTHESIS . exp_6 expresion RPARENTHESIS exp_7
    (108) exp_6 -> .

    LPARENTHESIS    reduce using rule 108 (exp_6 -> .)
    PLUS            reduce using rule 108 (exp_6 -> .)
    MINUS           reduce using rule 108 (exp_6 -> .)
    CALL            reduce using rule 108 (exp_6 -> .)
    RANDOM          reduce using rule 108 (exp_6 -> .)
    CTEINT          reduce using rule 108 (exp_6 -> .)
    CTEFLOAT        reduce using rule 108 (exp_6 -> .)
    CTESTRING       reduce using rule 108 (exp_6 -> .)
    ID              reduce using rule 108 (exp_6 -> .)
    TRUE            reduce using rule 108 (exp_6 -> .)
    FALSE           reduce using rule 108 (exp_6 -> .)

    exp_6                          shift and go to state 143

state 113

    (106) factor -> opfunc .

    PRODUCT         reduce using rule 106 (factor -> opfunc .)
    DIVISION        reduce using rule 106 (factor -> opfunc .)
    PLUS            reduce using rule 106 (factor -> opfunc .)
    MINUS           reduce using rule 106 (factor -> opfunc .)
    RPARENTHESIS    reduce using rule 106 (factor -> opfunc .)
    GREATERTHAN     reduce using rule 106 (factor -> opfunc .)
    LESSTHAN        reduce using rule 106 (factor -> opfunc .)
    NOTEQUAL        reduce using rule 106 (factor -> opfunc .)
    LESSEQUAL       reduce using rule 106 (factor -> opfunc .)
    GREATEREQUAL    reduce using rule 106 (factor -> opfunc .)
    EQUALEQUAL      reduce using rule 106 (factor -> opfunc .)
    AND             reduce using rule 106 (factor -> opfunc .)
    OR              reduce using rule 106 (factor -> opfunc .)
    LPARENTHESIS    reduce using rule 106 (factor -> opfunc .)
    CALL            reduce using rule 106 (factor -> opfunc .)
    RANDOM          reduce using rule 106 (factor -> opfunc .)
    CTEINT          reduce using rule 106 (factor -> opfunc .)
    CTEFLOAT        reduce using rule 106 (factor -> opfunc .)
    CTESTRING       reduce using rule 106 (factor -> opfunc .)
    ID              reduce using rule 106 (factor -> opfunc .)
    TRUE            reduce using rule 106 (factor -> opfunc .)
    FALSE           reduce using rule 106 (factor -> opfunc .)
    COMMA           reduce using rule 106 (factor -> opfunc .)
    SEMICOLON       reduce using rule 106 (factor -> opfunc .)
    RSQUAREBRACKET  reduce using rule 106 (factor -> opfunc .)


state 114

    (156) return -> RETURN exp .

    SEMICOLON       reduce using rule 156 (return -> RETURN exp .)


state 115

    (164) am -> linecolorfunc .

    STARTFILL       reduce using rule 164 (am -> linecolorfunc .)
    LINE            reduce using rule 164 (am -> linecolorfunc .)
    SQUARE          reduce using rule 164 (am -> linecolorfunc .)
    CIRCLE          reduce using rule 164 (am -> linecolorfunc .)
    STAR            reduce using rule 164 (am -> linecolorfunc .)
    TRIANGLE        reduce using rule 164 (am -> linecolorfunc .)
    ARC             reduce using rule 164 (am -> linecolorfunc .)


state 116

    (161) dibujafunc -> al am . an
    (166) an -> . dibuja
    (167) an -> . startfillfunc dibuja stopfillfunc
    (170) dibuja -> . v RPARENTHESIS
    (183) startfillfunc -> . STARTFILL LPARENTHESIS exp RPARENTHESIS SEMICOLON
    (171) v -> . LINE lineparam
    (172) v -> . SQUARE squareparam
    (173) v -> . CIRCLE circleparam
    (174) v -> . STAR starparam
    (175) v -> . TRIANGLE triangleparam
    (176) v -> . ARC arcparam

    STARTFILL       shift and go to state 148
    LINE            shift and go to state 147
    SQUARE          shift and go to state 149
    CIRCLE          shift and go to state 154
    STAR            shift and go to state 144
    TRIANGLE        shift and go to state 146
    ARC             shift and go to state 152

    startfillfunc                  shift and go to state 150
    dibuja                         shift and go to state 151
    v                              shift and go to state 153
    an                             shift and go to state 145

state 117

    (169) linecolorfunc -> LINECOLOR . LPARENTHESIS exp RPARENTHESIS SEMICOLON

    LPARENTHESIS    shift and go to state 155


state 118

    (135) ciclo -> WHILE estatuto_while_1 . LPARENTHESIS expresion RPARENTHESIS estatuto_while_2 bloque estatuto_while_3

    LPARENTHESIS    shift and go to state 156


state 119

    (139) escritura -> PRINT LPARENTHESIS . ah RPARENTHESIS
    (141) ah -> . expresion estatuto_print ai
    (142) ah -> . CTESTRING estatuto_print ai
    (69) expresion -> . specialexp m exp_9 n
    (78) specialexp -> . exp p exp_11
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

  ! shift/reduce conflict for CTESTRING resolved as shift
    CTESTRING       shift and go to state 157
    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

  ! CTESTRING       [ reduce using rule 114 (ag -> .) ]

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    ah                             shift and go to state 158
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    expresion                      shift and go to state 159
    llamadafunc                    shift and go to state 109
    specialexp                     shift and go to state 160
    exp                            shift and go to state 161

state 120

    (51) l -> estatuto l .

    RBRACKET        reduce using rule 51 (l -> estatuto l .)


state 121

    (53) estatuto -> estatutotipos SEMICOLON .

    ID              reduce using rule 53 (estatuto -> estatutotipos SEMICOLON .)
    IF              reduce using rule 53 (estatuto -> estatutotipos SEMICOLON .)
    WHILE           reduce using rule 53 (estatuto -> estatutotipos SEMICOLON .)
    PRINT           reduce using rule 53 (estatuto -> estatutotipos SEMICOLON .)
    CALL            reduce using rule 53 (estatuto -> estatutotipos SEMICOLON .)
    RETURN          reduce using rule 53 (estatuto -> estatutotipos SEMICOLON .)
    RANDOM          reduce using rule 53 (estatuto -> estatutotipos SEMICOLON .)
    LINEWIDTH       reduce using rule 53 (estatuto -> estatutotipos SEMICOLON .)
    LINECOLOR       reduce using rule 53 (estatuto -> estatutotipos SEMICOLON .)
    STARTFILL       reduce using rule 53 (estatuto -> estatutotipos SEMICOLON .)
    LINE            reduce using rule 53 (estatuto -> estatutotipos SEMICOLON .)
    SQUARE          reduce using rule 53 (estatuto -> estatutotipos SEMICOLON .)
    CIRCLE          reduce using rule 53 (estatuto -> estatutotipos SEMICOLON .)
    STAR            reduce using rule 53 (estatuto -> estatutotipos SEMICOLON .)
    TRIANGLE        reduce using rule 53 (estatuto -> estatutotipos SEMICOLON .)
    ARC             reduce using rule 53 (estatuto -> estatutotipos SEMICOLON .)
    RBRACKET        reduce using rule 53 (estatuto -> estatutotipos SEMICOLON .)


state 122

    (160) randomfunc -> RANDOM LPARENTHESIS . exp COMMA exp RPARENTHESIS
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 162

state 123

    (61) asignacion -> ID exp_asign . aa EQUAL exp_12 expresion exp_13
    (65) aa -> . LSQUAREBRACKET acceso_dimvar_2 exp acceso_dimvar_3 RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET
    (66) aa -> .

    LSQUAREBRACKET  shift and go to state 164
    EQUAL           reduce using rule 66 (aa -> .)

    aa                             shift and go to state 163

state 124

    (129) condicion -> IF LPARENTHESIS . expresion RPARENTHESIS estatuto_if_1 bloque s estatuto_endif
    (69) expresion -> . specialexp m exp_9 n
    (78) specialexp -> . exp p exp_11
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    specialexp                     shift and go to state 160
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    expresion                      shift and go to state 165
    llamadafunc                    shift and go to state 109
    exp                            shift and go to state 161

state 125

    (168) linewidthfunc -> LINEWIDTH LPARENTHESIS . exp RPARENTHESIS SEMICOLON
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 166

state 126

    (50) bloque -> LBRACKET l RBRACKET .

    SEMICOLON       reduce using rule 50 (bloque -> LBRACKET l RBRACKET .)
    ELSE            reduce using rule 50 (bloque -> LBRACKET l RBRACKET .)


state 127

    (145) llamadafunc -> CALL ID . estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (146) estatuto_llamadafunc_1 -> .

    LPARENTHESIS    reduce using rule 146 (estatuto_llamadafunc_1 -> .)

    estatuto_llamadafunc_1         shift and go to state 167

state 128

    (46) main -> MAIN altaMain LPARENTHESIS RPARENTHESIS k bloque SEMICOLON ENDFUNC .

    RBRACKET        reduce using rule 46 (main -> MAIN altaMain LPARENTHESIS RPARENTHESIS k bloque SEMICOLON ENDFUNC .)


state 129

    (23) mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET almacenaLimites COMMA . mataux
    (22) mataux -> . ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET almacenaLimites
    (23) mataux -> . ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET almacenaLimites COMMA mataux

    ID              shift and go to state 169

    mataux                         shift and go to state 168

state 130

    (30) funcion -> FUNC g ID altaFuncion LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc bloque . SEMICOLON ENDFUNC accionRetorno

    SEMICOLON       shift and go to state 170


state 131

    (42) param -> ID COLON tipo saveParamVar j .

    RPARENTHESIS    reduce using rule 42 (param -> ID COLON tipo saveParamVar j .)


state 132

    (44) j -> COMMA . param
    (42) param -> . ID COLON tipo saveParamVar j

    ID              shift and go to state 64

    param                          shift and go to state 171

state 133

    (118) varcte -> CTESTRING . exp_cte_string
    (125) exp_cte_string -> .

    PRODUCT         reduce using rule 125 (exp_cte_string -> .)
    DIVISION        reduce using rule 125 (exp_cte_string -> .)
    PLUS            reduce using rule 125 (exp_cte_string -> .)
    MINUS           reduce using rule 125 (exp_cte_string -> .)
    SEMICOLON       reduce using rule 125 (exp_cte_string -> .)
    GREATERTHAN     reduce using rule 125 (exp_cte_string -> .)
    LESSTHAN        reduce using rule 125 (exp_cte_string -> .)
    NOTEQUAL        reduce using rule 125 (exp_cte_string -> .)
    LESSEQUAL       reduce using rule 125 (exp_cte_string -> .)
    GREATEREQUAL    reduce using rule 125 (exp_cte_string -> .)
    EQUALEQUAL      reduce using rule 125 (exp_cte_string -> .)
    AND             reduce using rule 125 (exp_cte_string -> .)
    OR              reduce using rule 125 (exp_cte_string -> .)
    LPARENTHESIS    reduce using rule 125 (exp_cte_string -> .)
    CALL            reduce using rule 125 (exp_cte_string -> .)
    RANDOM          reduce using rule 125 (exp_cte_string -> .)
    CTEINT          reduce using rule 125 (exp_cte_string -> .)
    CTEFLOAT        reduce using rule 125 (exp_cte_string -> .)
    CTESTRING       reduce using rule 125 (exp_cte_string -> .)
    ID              reduce using rule 125 (exp_cte_string -> .)
    TRUE            reduce using rule 125 (exp_cte_string -> .)
    FALSE           reduce using rule 125 (exp_cte_string -> .)
    COMMA           reduce using rule 125 (exp_cte_string -> .)
    RPARENTHESIS    reduce using rule 125 (exp_cte_string -> .)
    RSQUAREBRACKET  reduce using rule 125 (exp_cte_string -> .)

    exp_cte_string                 shift and go to state 172

state 134

    (110) ae -> ag varcte .

    PRODUCT         reduce using rule 110 (ae -> ag varcte .)
    DIVISION        reduce using rule 110 (ae -> ag varcte .)
    PLUS            reduce using rule 110 (ae -> ag varcte .)
    MINUS           reduce using rule 110 (ae -> ag varcte .)
    RSQUAREBRACKET  reduce using rule 110 (ae -> ag varcte .)
    GREATERTHAN     reduce using rule 110 (ae -> ag varcte .)
    LESSTHAN        reduce using rule 110 (ae -> ag varcte .)
    NOTEQUAL        reduce using rule 110 (ae -> ag varcte .)
    LESSEQUAL       reduce using rule 110 (ae -> ag varcte .)
    GREATEREQUAL    reduce using rule 110 (ae -> ag varcte .)
    EQUALEQUAL      reduce using rule 110 (ae -> ag varcte .)
    AND             reduce using rule 110 (ae -> ag varcte .)
    OR              reduce using rule 110 (ae -> ag varcte .)
    LPARENTHESIS    reduce using rule 110 (ae -> ag varcte .)
    CALL            reduce using rule 110 (ae -> ag varcte .)
    RANDOM          reduce using rule 110 (ae -> ag varcte .)
    CTEINT          reduce using rule 110 (ae -> ag varcte .)
    CTEFLOAT        reduce using rule 110 (ae -> ag varcte .)
    CTESTRING       reduce using rule 110 (ae -> ag varcte .)
    ID              reduce using rule 110 (ae -> ag varcte .)
    TRUE            reduce using rule 110 (ae -> ag varcte .)
    FALSE           reduce using rule 110 (ae -> ag varcte .)
    RPARENTHESIS    reduce using rule 110 (ae -> ag varcte .)
    COMMA           reduce using rule 110 (ae -> ag varcte .)
    SEMICOLON       reduce using rule 110 (ae -> ag varcte .)


state 135

    (117) varcte -> ctebool . exp_cte_bool
    (124) exp_cte_bool -> .

    PRODUCT         reduce using rule 124 (exp_cte_bool -> .)
    DIVISION        reduce using rule 124 (exp_cte_bool -> .)
    PLUS            reduce using rule 124 (exp_cte_bool -> .)
    MINUS           reduce using rule 124 (exp_cte_bool -> .)
    SEMICOLON       reduce using rule 124 (exp_cte_bool -> .)
    GREATERTHAN     reduce using rule 124 (exp_cte_bool -> .)
    LESSTHAN        reduce using rule 124 (exp_cte_bool -> .)
    NOTEQUAL        reduce using rule 124 (exp_cte_bool -> .)
    LESSEQUAL       reduce using rule 124 (exp_cte_bool -> .)
    GREATEREQUAL    reduce using rule 124 (exp_cte_bool -> .)
    EQUALEQUAL      reduce using rule 124 (exp_cte_bool -> .)
    AND             reduce using rule 124 (exp_cte_bool -> .)
    OR              reduce using rule 124 (exp_cte_bool -> .)
    LPARENTHESIS    reduce using rule 124 (exp_cte_bool -> .)
    CALL            reduce using rule 124 (exp_cte_bool -> .)
    RANDOM          reduce using rule 124 (exp_cte_bool -> .)
    CTEINT          reduce using rule 124 (exp_cte_bool -> .)
    CTEFLOAT        reduce using rule 124 (exp_cte_bool -> .)
    CTESTRING       reduce using rule 124 (exp_cte_bool -> .)
    ID              reduce using rule 124 (exp_cte_bool -> .)
    TRUE            reduce using rule 124 (exp_cte_bool -> .)
    FALSE           reduce using rule 124 (exp_cte_bool -> .)
    COMMA           reduce using rule 124 (exp_cte_bool -> .)
    RPARENTHESIS    reduce using rule 124 (exp_cte_bool -> .)
    RSQUAREBRACKET  reduce using rule 124 (exp_cte_bool -> .)

    exp_cte_bool                   shift and go to state 173

state 136

    (115) varcte -> CTEINT . exp_cte_int
    (120) exp_cte_int -> .

    PRODUCT         reduce using rule 120 (exp_cte_int -> .)
    DIVISION        reduce using rule 120 (exp_cte_int -> .)
    PLUS            reduce using rule 120 (exp_cte_int -> .)
    MINUS           reduce using rule 120 (exp_cte_int -> .)
    SEMICOLON       reduce using rule 120 (exp_cte_int -> .)
    GREATERTHAN     reduce using rule 120 (exp_cte_int -> .)
    LESSTHAN        reduce using rule 120 (exp_cte_int -> .)
    NOTEQUAL        reduce using rule 120 (exp_cte_int -> .)
    LESSEQUAL       reduce using rule 120 (exp_cte_int -> .)
    GREATEREQUAL    reduce using rule 120 (exp_cte_int -> .)
    EQUALEQUAL      reduce using rule 120 (exp_cte_int -> .)
    AND             reduce using rule 120 (exp_cte_int -> .)
    OR              reduce using rule 120 (exp_cte_int -> .)
    LPARENTHESIS    reduce using rule 120 (exp_cte_int -> .)
    CALL            reduce using rule 120 (exp_cte_int -> .)
    RANDOM          reduce using rule 120 (exp_cte_int -> .)
    CTEINT          reduce using rule 120 (exp_cte_int -> .)
    CTEFLOAT        reduce using rule 120 (exp_cte_int -> .)
    CTESTRING       reduce using rule 120 (exp_cte_int -> .)
    ID              reduce using rule 120 (exp_cte_int -> .)
    TRUE            reduce using rule 120 (exp_cte_int -> .)
    FALSE           reduce using rule 120 (exp_cte_int -> .)
    COMMA           reduce using rule 120 (exp_cte_int -> .)
    RPARENTHESIS    reduce using rule 120 (exp_cte_int -> .)
    RSQUAREBRACKET  reduce using rule 120 (exp_cte_int -> .)

    exp_cte_int                    shift and go to state 174

state 137

    (116) varcte -> CTEFLOAT . exp_cte_float
    (121) exp_cte_float -> .

    PRODUCT         reduce using rule 121 (exp_cte_float -> .)
    DIVISION        reduce using rule 121 (exp_cte_float -> .)
    PLUS            reduce using rule 121 (exp_cte_float -> .)
    MINUS           reduce using rule 121 (exp_cte_float -> .)
    SEMICOLON       reduce using rule 121 (exp_cte_float -> .)
    GREATERTHAN     reduce using rule 121 (exp_cte_float -> .)
    LESSTHAN        reduce using rule 121 (exp_cte_float -> .)
    NOTEQUAL        reduce using rule 121 (exp_cte_float -> .)
    LESSEQUAL       reduce using rule 121 (exp_cte_float -> .)
    GREATEREQUAL    reduce using rule 121 (exp_cte_float -> .)
    EQUALEQUAL      reduce using rule 121 (exp_cte_float -> .)
    AND             reduce using rule 121 (exp_cte_float -> .)
    OR              reduce using rule 121 (exp_cte_float -> .)
    LPARENTHESIS    reduce using rule 121 (exp_cte_float -> .)
    CALL            reduce using rule 121 (exp_cte_float -> .)
    RANDOM          reduce using rule 121 (exp_cte_float -> .)
    CTEINT          reduce using rule 121 (exp_cte_float -> .)
    CTEFLOAT        reduce using rule 121 (exp_cte_float -> .)
    CTESTRING       reduce using rule 121 (exp_cte_float -> .)
    ID              reduce using rule 121 (exp_cte_float -> .)
    TRUE            reduce using rule 121 (exp_cte_float -> .)
    FALSE           reduce using rule 121 (exp_cte_float -> .)
    COMMA           reduce using rule 121 (exp_cte_float -> .)
    RPARENTHESIS    reduce using rule 121 (exp_cte_float -> .)
    RSQUAREBRACKET  reduce using rule 121 (exp_cte_float -> .)

    exp_cte_float                  shift and go to state 175

state 138

    (123) ctebool -> FALSE .

    PRODUCT         reduce using rule 123 (ctebool -> FALSE .)
    DIVISION        reduce using rule 123 (ctebool -> FALSE .)
    PLUS            reduce using rule 123 (ctebool -> FALSE .)
    MINUS           reduce using rule 123 (ctebool -> FALSE .)
    SEMICOLON       reduce using rule 123 (ctebool -> FALSE .)
    GREATERTHAN     reduce using rule 123 (ctebool -> FALSE .)
    LESSTHAN        reduce using rule 123 (ctebool -> FALSE .)
    NOTEQUAL        reduce using rule 123 (ctebool -> FALSE .)
    LESSEQUAL       reduce using rule 123 (ctebool -> FALSE .)
    GREATEREQUAL    reduce using rule 123 (ctebool -> FALSE .)
    EQUALEQUAL      reduce using rule 123 (ctebool -> FALSE .)
    AND             reduce using rule 123 (ctebool -> FALSE .)
    OR              reduce using rule 123 (ctebool -> FALSE .)
    LPARENTHESIS    reduce using rule 123 (ctebool -> FALSE .)
    CALL            reduce using rule 123 (ctebool -> FALSE .)
    RANDOM          reduce using rule 123 (ctebool -> FALSE .)
    CTEINT          reduce using rule 123 (ctebool -> FALSE .)
    CTEFLOAT        reduce using rule 123 (ctebool -> FALSE .)
    CTESTRING       reduce using rule 123 (ctebool -> FALSE .)
    ID              reduce using rule 123 (ctebool -> FALSE .)
    TRUE            reduce using rule 123 (ctebool -> FALSE .)
    FALSE           reduce using rule 123 (ctebool -> FALSE .)
    COMMA           reduce using rule 123 (ctebool -> FALSE .)
    RPARENTHESIS    reduce using rule 123 (ctebool -> FALSE .)
    RSQUAREBRACKET  reduce using rule 123 (ctebool -> FALSE .)


state 139

    (122) ctebool -> TRUE .

    PRODUCT         reduce using rule 122 (ctebool -> TRUE .)
    DIVISION        reduce using rule 122 (ctebool -> TRUE .)
    PLUS            reduce using rule 122 (ctebool -> TRUE .)
    MINUS           reduce using rule 122 (ctebool -> TRUE .)
    SEMICOLON       reduce using rule 122 (ctebool -> TRUE .)
    GREATERTHAN     reduce using rule 122 (ctebool -> TRUE .)
    LESSTHAN        reduce using rule 122 (ctebool -> TRUE .)
    NOTEQUAL        reduce using rule 122 (ctebool -> TRUE .)
    LESSEQUAL       reduce using rule 122 (ctebool -> TRUE .)
    GREATEREQUAL    reduce using rule 122 (ctebool -> TRUE .)
    EQUALEQUAL      reduce using rule 122 (ctebool -> TRUE .)
    AND             reduce using rule 122 (ctebool -> TRUE .)
    OR              reduce using rule 122 (ctebool -> TRUE .)
    LPARENTHESIS    reduce using rule 122 (ctebool -> TRUE .)
    CALL            reduce using rule 122 (ctebool -> TRUE .)
    RANDOM          reduce using rule 122 (ctebool -> TRUE .)
    CTEINT          reduce using rule 122 (ctebool -> TRUE .)
    CTEFLOAT        reduce using rule 122 (ctebool -> TRUE .)
    CTESTRING       reduce using rule 122 (ctebool -> TRUE .)
    ID              reduce using rule 122 (ctebool -> TRUE .)
    TRUE            reduce using rule 122 (ctebool -> TRUE .)
    FALSE           reduce using rule 122 (ctebool -> TRUE .)
    COMMA           reduce using rule 122 (ctebool -> TRUE .)
    RPARENTHESIS    reduce using rule 122 (ctebool -> TRUE .)
    RSQUAREBRACKET  reduce using rule 122 (ctebool -> TRUE .)


state 140

    (119) varcte -> ID . exp_1 r
    (128) exp_1 -> .

    LSQUAREBRACKET  reduce using rule 128 (exp_1 -> .)
    PRODUCT         reduce using rule 128 (exp_1 -> .)
    DIVISION        reduce using rule 128 (exp_1 -> .)
    PLUS            reduce using rule 128 (exp_1 -> .)
    MINUS           reduce using rule 128 (exp_1 -> .)
    SEMICOLON       reduce using rule 128 (exp_1 -> .)
    GREATERTHAN     reduce using rule 128 (exp_1 -> .)
    LESSTHAN        reduce using rule 128 (exp_1 -> .)
    NOTEQUAL        reduce using rule 128 (exp_1 -> .)
    LESSEQUAL       reduce using rule 128 (exp_1 -> .)
    GREATEREQUAL    reduce using rule 128 (exp_1 -> .)
    EQUALEQUAL      reduce using rule 128 (exp_1 -> .)
    AND             reduce using rule 128 (exp_1 -> .)
    OR              reduce using rule 128 (exp_1 -> .)
    LPARENTHESIS    reduce using rule 128 (exp_1 -> .)
    CALL            reduce using rule 128 (exp_1 -> .)
    RANDOM          reduce using rule 128 (exp_1 -> .)
    CTEINT          reduce using rule 128 (exp_1 -> .)
    CTEFLOAT        reduce using rule 128 (exp_1 -> .)
    CTESTRING       reduce using rule 128 (exp_1 -> .)
    ID              reduce using rule 128 (exp_1 -> .)
    TRUE            reduce using rule 128 (exp_1 -> .)
    FALSE           reduce using rule 128 (exp_1 -> .)
    COMMA           reduce using rule 128 (exp_1 -> .)
    RPARENTHESIS    reduce using rule 128 (exp_1 -> .)
    RSQUAREBRACKET  reduce using rule 128 (exp_1 -> .)

    exp_1                          shift and go to state 176

state 141

    (89) exp -> termino exp_5 . ab
    (91) ab -> . ab2 exp_3 exp
    (92) ab -> .
    (93) ab2 -> . PLUS
    (94) ab2 -> . MINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    SEMICOLON       reduce using rule 92 (ab -> .)
    GREATERTHAN     reduce using rule 92 (ab -> .)
    LESSTHAN        reduce using rule 92 (ab -> .)
    NOTEQUAL        reduce using rule 92 (ab -> .)
    LESSEQUAL       reduce using rule 92 (ab -> .)
    GREATEREQUAL    reduce using rule 92 (ab -> .)
    EQUALEQUAL      reduce using rule 92 (ab -> .)
    AND             reduce using rule 92 (ab -> .)
    OR              reduce using rule 92 (ab -> .)
    LPARENTHESIS    reduce using rule 92 (ab -> .)
    CALL            reduce using rule 92 (ab -> .)
    RANDOM          reduce using rule 92 (ab -> .)
    CTEINT          reduce using rule 92 (ab -> .)
    CTEFLOAT        reduce using rule 92 (ab -> .)
    CTESTRING       reduce using rule 92 (ab -> .)
    ID              reduce using rule 92 (ab -> .)
    TRUE            reduce using rule 92 (ab -> .)
    FALSE           reduce using rule 92 (ab -> .)
    COMMA           reduce using rule 92 (ab -> .)
    RPARENTHESIS    reduce using rule 92 (ab -> .)
    RSQUAREBRACKET  reduce using rule 92 (ab -> .)
    PLUS            shift and go to state 179
    MINUS           shift and go to state 180

  ! PLUS            [ reduce using rule 92 (ab -> .) ]
  ! MINUS           [ reduce using rule 92 (ab -> .) ]

    ab                             shift and go to state 177
    ab2                            shift and go to state 178

state 142

    (96) termino -> factor exp_4 . ac
    (98) ac -> . ac2 exp_2 termino
    (99) ac -> .
    (101) ac2 -> . PRODUCT
    (102) ac2 -> . DIVISION

    PLUS            reduce using rule 99 (ac -> .)
    MINUS           reduce using rule 99 (ac -> .)
    SEMICOLON       reduce using rule 99 (ac -> .)
    GREATERTHAN     reduce using rule 99 (ac -> .)
    LESSTHAN        reduce using rule 99 (ac -> .)
    NOTEQUAL        reduce using rule 99 (ac -> .)
    LESSEQUAL       reduce using rule 99 (ac -> .)
    GREATEREQUAL    reduce using rule 99 (ac -> .)
    EQUALEQUAL      reduce using rule 99 (ac -> .)
    AND             reduce using rule 99 (ac -> .)
    OR              reduce using rule 99 (ac -> .)
    LPARENTHESIS    reduce using rule 99 (ac -> .)
    CALL            reduce using rule 99 (ac -> .)
    RANDOM          reduce using rule 99 (ac -> .)
    CTEINT          reduce using rule 99 (ac -> .)
    CTEFLOAT        reduce using rule 99 (ac -> .)
    CTESTRING       reduce using rule 99 (ac -> .)
    ID              reduce using rule 99 (ac -> .)
    TRUE            reduce using rule 99 (ac -> .)
    FALSE           reduce using rule 99 (ac -> .)
    COMMA           reduce using rule 99 (ac -> .)
    RPARENTHESIS    reduce using rule 99 (ac -> .)
    RSQUAREBRACKET  reduce using rule 99 (ac -> .)
    PRODUCT         shift and go to state 184
    DIVISION        shift and go to state 181

    ac                             shift and go to state 182
    ac2                            shift and go to state 183

state 143

    (107) ad -> LPARENTHESIS exp_6 . expresion RPARENTHESIS exp_7
    (69) expresion -> . specialexp m exp_9 n
    (78) specialexp -> . exp p exp_11
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    expresion                      shift and go to state 185
    llamadafunc                    shift and go to state 109
    specialexp                     shift and go to state 160
    exp                            shift and go to state 161

state 144

    (174) v -> STAR . starparam
    (180) starparam -> . LPARENTHESIS exp COMMA exp COMMA exp

    LPARENTHESIS    shift and go to state 186

    starparam                      shift and go to state 187

state 145

    (161) dibujafunc -> al am an .

    SEMICOLON       reduce using rule 161 (dibujafunc -> al am an .)


state 146

    (175) v -> TRIANGLE . triangleparam
    (181) triangleparam -> . LPARENTHESIS exp COMMA exp COMMA exp

    LPARENTHESIS    shift and go to state 188

    triangleparam                  shift and go to state 189

state 147

    (171) v -> LINE . lineparam
    (177) lineparam -> . LPARENTHESIS exp COMMA exp COMMA exp COMMA exp

    LPARENTHESIS    shift and go to state 191

    lineparam                      shift and go to state 190

state 148

    (183) startfillfunc -> STARTFILL . LPARENTHESIS exp RPARENTHESIS SEMICOLON

    LPARENTHESIS    shift and go to state 192


state 149

    (172) v -> SQUARE . squareparam
    (178) squareparam -> . LPARENTHESIS exp COMMA exp COMMA exp

    LPARENTHESIS    shift and go to state 193

    squareparam                    shift and go to state 194

state 150

    (167) an -> startfillfunc . dibuja stopfillfunc
    (170) dibuja -> . v RPARENTHESIS
    (171) v -> . LINE lineparam
    (172) v -> . SQUARE squareparam
    (173) v -> . CIRCLE circleparam
    (174) v -> . STAR starparam
    (175) v -> . TRIANGLE triangleparam
    (176) v -> . ARC arcparam

    LINE            shift and go to state 147
    SQUARE          shift and go to state 149
    CIRCLE          shift and go to state 154
    STAR            shift and go to state 144
    TRIANGLE        shift and go to state 146
    ARC             shift and go to state 152

    dibuja                         shift and go to state 195
    v                              shift and go to state 153

state 151

    (166) an -> dibuja .

    SEMICOLON       reduce using rule 166 (an -> dibuja .)


state 152

    (176) v -> ARC . arcparam
    (182) arcparam -> . LPARENTHESIS exp COMMA exp COMMA exp COMMA exp COMMA exp

    LPARENTHESIS    shift and go to state 196

    arcparam                       shift and go to state 197

state 153

    (170) dibuja -> v . RPARENTHESIS

    RPARENTHESIS    shift and go to state 198


state 154

    (173) v -> CIRCLE . circleparam
    (179) circleparam -> . LPARENTHESIS exp COMMA exp COMMA exp

    LPARENTHESIS    shift and go to state 199

    circleparam                    shift and go to state 200

state 155

    (169) linecolorfunc -> LINECOLOR LPARENTHESIS . exp RPARENTHESIS SEMICOLON
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 201

state 156

    (135) ciclo -> WHILE estatuto_while_1 LPARENTHESIS . expresion RPARENTHESIS estatuto_while_2 bloque estatuto_while_3
    (69) expresion -> . specialexp m exp_9 n
    (78) specialexp -> . exp p exp_11
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    specialexp                     shift and go to state 160
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    expresion                      shift and go to state 202
    llamadafunc                    shift and go to state 109
    exp                            shift and go to state 161

state 157

    (142) ah -> CTESTRING . estatuto_print ai
    (140) estatuto_print -> .

    COMMA           reduce using rule 140 (estatuto_print -> .)
    RPARENTHESIS    reduce using rule 140 (estatuto_print -> .)

    estatuto_print                 shift and go to state 203

state 158

    (139) escritura -> PRINT LPARENTHESIS ah . RPARENTHESIS

    RPARENTHESIS    shift and go to state 204


state 159

    (141) ah -> expresion . estatuto_print ai
    (140) estatuto_print -> .

    COMMA           reduce using rule 140 (estatuto_print -> .)
    RPARENTHESIS    reduce using rule 140 (estatuto_print -> .)

    estatuto_print                 shift and go to state 205

state 160

    (69) expresion -> specialexp . m exp_9 n
    (70) m -> . o exp_8 specialexp
    (71) m -> .
    (72) o -> . AND
    (73) o -> . OR

    LPARENTHESIS    reduce using rule 71 (m -> .)
    PLUS            reduce using rule 71 (m -> .)
    MINUS           reduce using rule 71 (m -> .)
    CALL            reduce using rule 71 (m -> .)
    RANDOM          reduce using rule 71 (m -> .)
    CTEINT          reduce using rule 71 (m -> .)
    CTEFLOAT        reduce using rule 71 (m -> .)
    CTESTRING       reduce using rule 71 (m -> .)
    ID              reduce using rule 71 (m -> .)
    TRUE            reduce using rule 71 (m -> .)
    FALSE           reduce using rule 71 (m -> .)
    COMMA           reduce using rule 71 (m -> .)
    RPARENTHESIS    reduce using rule 71 (m -> .)
    SEMICOLON       reduce using rule 71 (m -> .)
    AND             shift and go to state 206
    OR              shift and go to state 209

    m                              shift and go to state 207
    o                              shift and go to state 208

state 161

    (78) specialexp -> exp . p exp_11
    (79) p -> . q exp_10 exp
    (80) p -> .
    (81) q -> . GREATERTHAN
    (82) q -> . LESSTHAN
    (83) q -> . NOTEQUAL
    (84) q -> . LESSEQUAL
    (85) q -> . GREATEREQUAL
    (86) q -> . EQUALEQUAL

    AND             reduce using rule 80 (p -> .)
    OR              reduce using rule 80 (p -> .)
    LPARENTHESIS    reduce using rule 80 (p -> .)
    PLUS            reduce using rule 80 (p -> .)
    MINUS           reduce using rule 80 (p -> .)
    CALL            reduce using rule 80 (p -> .)
    RANDOM          reduce using rule 80 (p -> .)
    CTEINT          reduce using rule 80 (p -> .)
    CTEFLOAT        reduce using rule 80 (p -> .)
    CTESTRING       reduce using rule 80 (p -> .)
    ID              reduce using rule 80 (p -> .)
    TRUE            reduce using rule 80 (p -> .)
    FALSE           reduce using rule 80 (p -> .)
    COMMA           reduce using rule 80 (p -> .)
    RPARENTHESIS    reduce using rule 80 (p -> .)
    SEMICOLON       reduce using rule 80 (p -> .)
    GREATERTHAN     shift and go to state 215
    LESSTHAN        shift and go to state 214
    NOTEQUAL        shift and go to state 210
    LESSEQUAL       shift and go to state 216
    GREATEREQUAL    shift and go to state 211
    EQUALEQUAL      shift and go to state 217

    q                              shift and go to state 212
    p                              shift and go to state 213

state 162

    (160) randomfunc -> RANDOM LPARENTHESIS exp . COMMA exp RPARENTHESIS

    COMMA           shift and go to state 218


state 163

    (61) asignacion -> ID exp_asign aa . EQUAL exp_12 expresion exp_13

    EQUAL           shift and go to state 219


state 164

    (65) aa -> LSQUAREBRACKET . acceso_dimvar_2 exp acceso_dimvar_3 RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET
    (67) acceso_dimvar_2 -> .

    LPARENTHESIS    reduce using rule 67 (acceso_dimvar_2 -> .)
    PLUS            reduce using rule 67 (acceso_dimvar_2 -> .)
    MINUS           reduce using rule 67 (acceso_dimvar_2 -> .)
    CALL            reduce using rule 67 (acceso_dimvar_2 -> .)
    RANDOM          reduce using rule 67 (acceso_dimvar_2 -> .)
    CTEINT          reduce using rule 67 (acceso_dimvar_2 -> .)
    CTEFLOAT        reduce using rule 67 (acceso_dimvar_2 -> .)
    CTESTRING       reduce using rule 67 (acceso_dimvar_2 -> .)
    ID              reduce using rule 67 (acceso_dimvar_2 -> .)
    TRUE            reduce using rule 67 (acceso_dimvar_2 -> .)
    FALSE           reduce using rule 67 (acceso_dimvar_2 -> .)

    acceso_dimvar_2                shift and go to state 220

state 165

    (129) condicion -> IF LPARENTHESIS expresion . RPARENTHESIS estatuto_if_1 bloque s estatuto_endif

    RPARENTHESIS    shift and go to state 221


state 166

    (168) linewidthfunc -> LINEWIDTH LPARENTHESIS exp . RPARENTHESIS SEMICOLON

    RPARENTHESIS    shift and go to state 222


state 167

    (145) llamadafunc -> CALL ID estatuto_llamadafunc_1 . LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6

    LPARENTHESIS    shift and go to state 223


state 168

    (23) mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET almacenaLimites COMMA mataux .

    COLON           reduce using rule 23 (mataux -> ID saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET almacenaLimites COMMA mataux .)


state 169

    (22) mataux -> ID . saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET almacenaLimites
    (23) mataux -> ID . saveMatrixID LSQUAREBRACKET CTEINT RSQUAREBRACKET LSQUAREBRACKET CTEINT RSQUAREBRACKET almacenaLimites COMMA mataux
    (24) saveMatrixID -> .

    LSQUAREBRACKET  reduce using rule 24 (saveMatrixID -> .)

    saveMatrixID                   shift and go to state 27

state 170

    (30) funcion -> FUNC g ID altaFuncion LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON . ENDFUNC accionRetorno

    ENDFUNC         shift and go to state 224


state 171

    (44) j -> COMMA param .

    RPARENTHESIS    reduce using rule 44 (j -> COMMA param .)


state 172

    (118) varcte -> CTESTRING exp_cte_string .

    PRODUCT         reduce using rule 118 (varcte -> CTESTRING exp_cte_string .)
    DIVISION        reduce using rule 118 (varcte -> CTESTRING exp_cte_string .)
    PLUS            reduce using rule 118 (varcte -> CTESTRING exp_cte_string .)
    MINUS           reduce using rule 118 (varcte -> CTESTRING exp_cte_string .)
    SEMICOLON       reduce using rule 118 (varcte -> CTESTRING exp_cte_string .)
    GREATERTHAN     reduce using rule 118 (varcte -> CTESTRING exp_cte_string .)
    LESSTHAN        reduce using rule 118 (varcte -> CTESTRING exp_cte_string .)
    NOTEQUAL        reduce using rule 118 (varcte -> CTESTRING exp_cte_string .)
    LESSEQUAL       reduce using rule 118 (varcte -> CTESTRING exp_cte_string .)
    GREATEREQUAL    reduce using rule 118 (varcte -> CTESTRING exp_cte_string .)
    EQUALEQUAL      reduce using rule 118 (varcte -> CTESTRING exp_cte_string .)
    AND             reduce using rule 118 (varcte -> CTESTRING exp_cte_string .)
    OR              reduce using rule 118 (varcte -> CTESTRING exp_cte_string .)
    LPARENTHESIS    reduce using rule 118 (varcte -> CTESTRING exp_cte_string .)
    CALL            reduce using rule 118 (varcte -> CTESTRING exp_cte_string .)
    RANDOM          reduce using rule 118 (varcte -> CTESTRING exp_cte_string .)
    CTEINT          reduce using rule 118 (varcte -> CTESTRING exp_cte_string .)
    CTEFLOAT        reduce using rule 118 (varcte -> CTESTRING exp_cte_string .)
    CTESTRING       reduce using rule 118 (varcte -> CTESTRING exp_cte_string .)
    ID              reduce using rule 118 (varcte -> CTESTRING exp_cte_string .)
    TRUE            reduce using rule 118 (varcte -> CTESTRING exp_cte_string .)
    FALSE           reduce using rule 118 (varcte -> CTESTRING exp_cte_string .)
    COMMA           reduce using rule 118 (varcte -> CTESTRING exp_cte_string .)
    RPARENTHESIS    reduce using rule 118 (varcte -> CTESTRING exp_cte_string .)
    RSQUAREBRACKET  reduce using rule 118 (varcte -> CTESTRING exp_cte_string .)


state 173

    (117) varcte -> ctebool exp_cte_bool .

    PRODUCT         reduce using rule 117 (varcte -> ctebool exp_cte_bool .)
    DIVISION        reduce using rule 117 (varcte -> ctebool exp_cte_bool .)
    PLUS            reduce using rule 117 (varcte -> ctebool exp_cte_bool .)
    MINUS           reduce using rule 117 (varcte -> ctebool exp_cte_bool .)
    SEMICOLON       reduce using rule 117 (varcte -> ctebool exp_cte_bool .)
    GREATERTHAN     reduce using rule 117 (varcte -> ctebool exp_cte_bool .)
    LESSTHAN        reduce using rule 117 (varcte -> ctebool exp_cte_bool .)
    NOTEQUAL        reduce using rule 117 (varcte -> ctebool exp_cte_bool .)
    LESSEQUAL       reduce using rule 117 (varcte -> ctebool exp_cte_bool .)
    GREATEREQUAL    reduce using rule 117 (varcte -> ctebool exp_cte_bool .)
    EQUALEQUAL      reduce using rule 117 (varcte -> ctebool exp_cte_bool .)
    AND             reduce using rule 117 (varcte -> ctebool exp_cte_bool .)
    OR              reduce using rule 117 (varcte -> ctebool exp_cte_bool .)
    LPARENTHESIS    reduce using rule 117 (varcte -> ctebool exp_cte_bool .)
    CALL            reduce using rule 117 (varcte -> ctebool exp_cte_bool .)
    RANDOM          reduce using rule 117 (varcte -> ctebool exp_cte_bool .)
    CTEINT          reduce using rule 117 (varcte -> ctebool exp_cte_bool .)
    CTEFLOAT        reduce using rule 117 (varcte -> ctebool exp_cte_bool .)
    CTESTRING       reduce using rule 117 (varcte -> ctebool exp_cte_bool .)
    ID              reduce using rule 117 (varcte -> ctebool exp_cte_bool .)
    TRUE            reduce using rule 117 (varcte -> ctebool exp_cte_bool .)
    FALSE           reduce using rule 117 (varcte -> ctebool exp_cte_bool .)
    COMMA           reduce using rule 117 (varcte -> ctebool exp_cte_bool .)
    RPARENTHESIS    reduce using rule 117 (varcte -> ctebool exp_cte_bool .)
    RSQUAREBRACKET  reduce using rule 117 (varcte -> ctebool exp_cte_bool .)


state 174

    (115) varcte -> CTEINT exp_cte_int .

    PRODUCT         reduce using rule 115 (varcte -> CTEINT exp_cte_int .)
    DIVISION        reduce using rule 115 (varcte -> CTEINT exp_cte_int .)
    PLUS            reduce using rule 115 (varcte -> CTEINT exp_cte_int .)
    MINUS           reduce using rule 115 (varcte -> CTEINT exp_cte_int .)
    SEMICOLON       reduce using rule 115 (varcte -> CTEINT exp_cte_int .)
    GREATERTHAN     reduce using rule 115 (varcte -> CTEINT exp_cte_int .)
    LESSTHAN        reduce using rule 115 (varcte -> CTEINT exp_cte_int .)
    NOTEQUAL        reduce using rule 115 (varcte -> CTEINT exp_cte_int .)
    LESSEQUAL       reduce using rule 115 (varcte -> CTEINT exp_cte_int .)
    GREATEREQUAL    reduce using rule 115 (varcte -> CTEINT exp_cte_int .)
    EQUALEQUAL      reduce using rule 115 (varcte -> CTEINT exp_cte_int .)
    AND             reduce using rule 115 (varcte -> CTEINT exp_cte_int .)
    OR              reduce using rule 115 (varcte -> CTEINT exp_cte_int .)
    LPARENTHESIS    reduce using rule 115 (varcte -> CTEINT exp_cte_int .)
    CALL            reduce using rule 115 (varcte -> CTEINT exp_cte_int .)
    RANDOM          reduce using rule 115 (varcte -> CTEINT exp_cte_int .)
    CTEINT          reduce using rule 115 (varcte -> CTEINT exp_cte_int .)
    CTEFLOAT        reduce using rule 115 (varcte -> CTEINT exp_cte_int .)
    CTESTRING       reduce using rule 115 (varcte -> CTEINT exp_cte_int .)
    ID              reduce using rule 115 (varcte -> CTEINT exp_cte_int .)
    TRUE            reduce using rule 115 (varcte -> CTEINT exp_cte_int .)
    FALSE           reduce using rule 115 (varcte -> CTEINT exp_cte_int .)
    COMMA           reduce using rule 115 (varcte -> CTEINT exp_cte_int .)
    RPARENTHESIS    reduce using rule 115 (varcte -> CTEINT exp_cte_int .)
    RSQUAREBRACKET  reduce using rule 115 (varcte -> CTEINT exp_cte_int .)


state 175

    (116) varcte -> CTEFLOAT exp_cte_float .

    PRODUCT         reduce using rule 116 (varcte -> CTEFLOAT exp_cte_float .)
    DIVISION        reduce using rule 116 (varcte -> CTEFLOAT exp_cte_float .)
    PLUS            reduce using rule 116 (varcte -> CTEFLOAT exp_cte_float .)
    MINUS           reduce using rule 116 (varcte -> CTEFLOAT exp_cte_float .)
    SEMICOLON       reduce using rule 116 (varcte -> CTEFLOAT exp_cte_float .)
    GREATERTHAN     reduce using rule 116 (varcte -> CTEFLOAT exp_cte_float .)
    LESSTHAN        reduce using rule 116 (varcte -> CTEFLOAT exp_cte_float .)
    NOTEQUAL        reduce using rule 116 (varcte -> CTEFLOAT exp_cte_float .)
    LESSEQUAL       reduce using rule 116 (varcte -> CTEFLOAT exp_cte_float .)
    GREATEREQUAL    reduce using rule 116 (varcte -> CTEFLOAT exp_cte_float .)
    EQUALEQUAL      reduce using rule 116 (varcte -> CTEFLOAT exp_cte_float .)
    AND             reduce using rule 116 (varcte -> CTEFLOAT exp_cte_float .)
    OR              reduce using rule 116 (varcte -> CTEFLOAT exp_cte_float .)
    LPARENTHESIS    reduce using rule 116 (varcte -> CTEFLOAT exp_cte_float .)
    CALL            reduce using rule 116 (varcte -> CTEFLOAT exp_cte_float .)
    RANDOM          reduce using rule 116 (varcte -> CTEFLOAT exp_cte_float .)
    CTEINT          reduce using rule 116 (varcte -> CTEFLOAT exp_cte_float .)
    CTEFLOAT        reduce using rule 116 (varcte -> CTEFLOAT exp_cte_float .)
    CTESTRING       reduce using rule 116 (varcte -> CTEFLOAT exp_cte_float .)
    ID              reduce using rule 116 (varcte -> CTEFLOAT exp_cte_float .)
    TRUE            reduce using rule 116 (varcte -> CTEFLOAT exp_cte_float .)
    FALSE           reduce using rule 116 (varcte -> CTEFLOAT exp_cte_float .)
    COMMA           reduce using rule 116 (varcte -> CTEFLOAT exp_cte_float .)
    RPARENTHESIS    reduce using rule 116 (varcte -> CTEFLOAT exp_cte_float .)
    RSQUAREBRACKET  reduce using rule 116 (varcte -> CTEFLOAT exp_cte_float .)


state 176

    (119) varcte -> ID exp_1 . r
    (126) r -> . LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET
    (127) r -> .

    LSQUAREBRACKET  shift and go to state 225
    PRODUCT         reduce using rule 127 (r -> .)
    DIVISION        reduce using rule 127 (r -> .)
    PLUS            reduce using rule 127 (r -> .)
    MINUS           reduce using rule 127 (r -> .)
    SEMICOLON       reduce using rule 127 (r -> .)
    GREATERTHAN     reduce using rule 127 (r -> .)
    LESSTHAN        reduce using rule 127 (r -> .)
    NOTEQUAL        reduce using rule 127 (r -> .)
    LESSEQUAL       reduce using rule 127 (r -> .)
    GREATEREQUAL    reduce using rule 127 (r -> .)
    EQUALEQUAL      reduce using rule 127 (r -> .)
    AND             reduce using rule 127 (r -> .)
    OR              reduce using rule 127 (r -> .)
    LPARENTHESIS    reduce using rule 127 (r -> .)
    CALL            reduce using rule 127 (r -> .)
    RANDOM          reduce using rule 127 (r -> .)
    CTEINT          reduce using rule 127 (r -> .)
    CTEFLOAT        reduce using rule 127 (r -> .)
    CTESTRING       reduce using rule 127 (r -> .)
    ID              reduce using rule 127 (r -> .)
    TRUE            reduce using rule 127 (r -> .)
    FALSE           reduce using rule 127 (r -> .)
    COMMA           reduce using rule 127 (r -> .)
    RPARENTHESIS    reduce using rule 127 (r -> .)
    RSQUAREBRACKET  reduce using rule 127 (r -> .)

    r                              shift and go to state 226

state 177

    (89) exp -> termino exp_5 ab .

    COMMA           reduce using rule 89 (exp -> termino exp_5 ab .)
    RPARENTHESIS    reduce using rule 89 (exp -> termino exp_5 ab .)
    GREATERTHAN     reduce using rule 89 (exp -> termino exp_5 ab .)
    LESSTHAN        reduce using rule 89 (exp -> termino exp_5 ab .)
    NOTEQUAL        reduce using rule 89 (exp -> termino exp_5 ab .)
    LESSEQUAL       reduce using rule 89 (exp -> termino exp_5 ab .)
    GREATEREQUAL    reduce using rule 89 (exp -> termino exp_5 ab .)
    EQUALEQUAL      reduce using rule 89 (exp -> termino exp_5 ab .)
    AND             reduce using rule 89 (exp -> termino exp_5 ab .)
    OR              reduce using rule 89 (exp -> termino exp_5 ab .)
    LPARENTHESIS    reduce using rule 89 (exp -> termino exp_5 ab .)
    PLUS            reduce using rule 89 (exp -> termino exp_5 ab .)
    MINUS           reduce using rule 89 (exp -> termino exp_5 ab .)
    CALL            reduce using rule 89 (exp -> termino exp_5 ab .)
    RANDOM          reduce using rule 89 (exp -> termino exp_5 ab .)
    CTEINT          reduce using rule 89 (exp -> termino exp_5 ab .)
    CTEFLOAT        reduce using rule 89 (exp -> termino exp_5 ab .)
    CTESTRING       reduce using rule 89 (exp -> termino exp_5 ab .)
    ID              reduce using rule 89 (exp -> termino exp_5 ab .)
    TRUE            reduce using rule 89 (exp -> termino exp_5 ab .)
    FALSE           reduce using rule 89 (exp -> termino exp_5 ab .)
    SEMICOLON       reduce using rule 89 (exp -> termino exp_5 ab .)
    RSQUAREBRACKET  reduce using rule 89 (exp -> termino exp_5 ab .)


state 178

    (91) ab -> ab2 . exp_3 exp
    (95) exp_3 -> .

    LPARENTHESIS    reduce using rule 95 (exp_3 -> .)
    PLUS            reduce using rule 95 (exp_3 -> .)
    MINUS           reduce using rule 95 (exp_3 -> .)
    CALL            reduce using rule 95 (exp_3 -> .)
    RANDOM          reduce using rule 95 (exp_3 -> .)
    CTEINT          reduce using rule 95 (exp_3 -> .)
    CTEFLOAT        reduce using rule 95 (exp_3 -> .)
    CTESTRING       reduce using rule 95 (exp_3 -> .)
    ID              reduce using rule 95 (exp_3 -> .)
    TRUE            reduce using rule 95 (exp_3 -> .)
    FALSE           reduce using rule 95 (exp_3 -> .)

    exp_3                          shift and go to state 227

state 179

    (93) ab2 -> PLUS .

    LPARENTHESIS    reduce using rule 93 (ab2 -> PLUS .)
    PLUS            reduce using rule 93 (ab2 -> PLUS .)
    MINUS           reduce using rule 93 (ab2 -> PLUS .)
    CALL            reduce using rule 93 (ab2 -> PLUS .)
    RANDOM          reduce using rule 93 (ab2 -> PLUS .)
    CTEINT          reduce using rule 93 (ab2 -> PLUS .)
    CTEFLOAT        reduce using rule 93 (ab2 -> PLUS .)
    CTESTRING       reduce using rule 93 (ab2 -> PLUS .)
    ID              reduce using rule 93 (ab2 -> PLUS .)
    TRUE            reduce using rule 93 (ab2 -> PLUS .)
    FALSE           reduce using rule 93 (ab2 -> PLUS .)


state 180

    (94) ab2 -> MINUS .

    LPARENTHESIS    reduce using rule 94 (ab2 -> MINUS .)
    PLUS            reduce using rule 94 (ab2 -> MINUS .)
    MINUS           reduce using rule 94 (ab2 -> MINUS .)
    CALL            reduce using rule 94 (ab2 -> MINUS .)
    RANDOM          reduce using rule 94 (ab2 -> MINUS .)
    CTEINT          reduce using rule 94 (ab2 -> MINUS .)
    CTEFLOAT        reduce using rule 94 (ab2 -> MINUS .)
    CTESTRING       reduce using rule 94 (ab2 -> MINUS .)
    ID              reduce using rule 94 (ab2 -> MINUS .)
    TRUE            reduce using rule 94 (ab2 -> MINUS .)
    FALSE           reduce using rule 94 (ab2 -> MINUS .)


state 181

    (102) ac2 -> DIVISION .

    LPARENTHESIS    reduce using rule 102 (ac2 -> DIVISION .)
    PLUS            reduce using rule 102 (ac2 -> DIVISION .)
    MINUS           reduce using rule 102 (ac2 -> DIVISION .)
    CALL            reduce using rule 102 (ac2 -> DIVISION .)
    RANDOM          reduce using rule 102 (ac2 -> DIVISION .)
    CTEINT          reduce using rule 102 (ac2 -> DIVISION .)
    CTEFLOAT        reduce using rule 102 (ac2 -> DIVISION .)
    CTESTRING       reduce using rule 102 (ac2 -> DIVISION .)
    ID              reduce using rule 102 (ac2 -> DIVISION .)
    TRUE            reduce using rule 102 (ac2 -> DIVISION .)
    FALSE           reduce using rule 102 (ac2 -> DIVISION .)


state 182

    (96) termino -> factor exp_4 ac .

    PLUS            reduce using rule 96 (termino -> factor exp_4 ac .)
    MINUS           reduce using rule 96 (termino -> factor exp_4 ac .)
    COMMA           reduce using rule 96 (termino -> factor exp_4 ac .)
    RPARENTHESIS    reduce using rule 96 (termino -> factor exp_4 ac .)
    SEMICOLON       reduce using rule 96 (termino -> factor exp_4 ac .)
    GREATERTHAN     reduce using rule 96 (termino -> factor exp_4 ac .)
    LESSTHAN        reduce using rule 96 (termino -> factor exp_4 ac .)
    NOTEQUAL        reduce using rule 96 (termino -> factor exp_4 ac .)
    LESSEQUAL       reduce using rule 96 (termino -> factor exp_4 ac .)
    GREATEREQUAL    reduce using rule 96 (termino -> factor exp_4 ac .)
    EQUALEQUAL      reduce using rule 96 (termino -> factor exp_4 ac .)
    AND             reduce using rule 96 (termino -> factor exp_4 ac .)
    OR              reduce using rule 96 (termino -> factor exp_4 ac .)
    LPARENTHESIS    reduce using rule 96 (termino -> factor exp_4 ac .)
    CALL            reduce using rule 96 (termino -> factor exp_4 ac .)
    RANDOM          reduce using rule 96 (termino -> factor exp_4 ac .)
    CTEINT          reduce using rule 96 (termino -> factor exp_4 ac .)
    CTEFLOAT        reduce using rule 96 (termino -> factor exp_4 ac .)
    CTESTRING       reduce using rule 96 (termino -> factor exp_4 ac .)
    ID              reduce using rule 96 (termino -> factor exp_4 ac .)
    TRUE            reduce using rule 96 (termino -> factor exp_4 ac .)
    FALSE           reduce using rule 96 (termino -> factor exp_4 ac .)
    RSQUAREBRACKET  reduce using rule 96 (termino -> factor exp_4 ac .)


state 183

    (98) ac -> ac2 . exp_2 termino
    (100) exp_2 -> .

    LPARENTHESIS    reduce using rule 100 (exp_2 -> .)
    PLUS            reduce using rule 100 (exp_2 -> .)
    MINUS           reduce using rule 100 (exp_2 -> .)
    CALL            reduce using rule 100 (exp_2 -> .)
    RANDOM          reduce using rule 100 (exp_2 -> .)
    CTEINT          reduce using rule 100 (exp_2 -> .)
    CTEFLOAT        reduce using rule 100 (exp_2 -> .)
    CTESTRING       reduce using rule 100 (exp_2 -> .)
    ID              reduce using rule 100 (exp_2 -> .)
    TRUE            reduce using rule 100 (exp_2 -> .)
    FALSE           reduce using rule 100 (exp_2 -> .)

    exp_2                          shift and go to state 228

state 184

    (101) ac2 -> PRODUCT .

    LPARENTHESIS    reduce using rule 101 (ac2 -> PRODUCT .)
    PLUS            reduce using rule 101 (ac2 -> PRODUCT .)
    MINUS           reduce using rule 101 (ac2 -> PRODUCT .)
    CALL            reduce using rule 101 (ac2 -> PRODUCT .)
    RANDOM          reduce using rule 101 (ac2 -> PRODUCT .)
    CTEINT          reduce using rule 101 (ac2 -> PRODUCT .)
    CTEFLOAT        reduce using rule 101 (ac2 -> PRODUCT .)
    CTESTRING       reduce using rule 101 (ac2 -> PRODUCT .)
    ID              reduce using rule 101 (ac2 -> PRODUCT .)
    TRUE            reduce using rule 101 (ac2 -> PRODUCT .)
    FALSE           reduce using rule 101 (ac2 -> PRODUCT .)


state 185

    (107) ad -> LPARENTHESIS exp_6 expresion . RPARENTHESIS exp_7

    RPARENTHESIS    shift and go to state 229


state 186

    (180) starparam -> LPARENTHESIS . exp COMMA exp COMMA exp
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 230

state 187

    (174) v -> STAR starparam .

    RPARENTHESIS    reduce using rule 174 (v -> STAR starparam .)


state 188

    (181) triangleparam -> LPARENTHESIS . exp COMMA exp COMMA exp
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 231

state 189

    (175) v -> TRIANGLE triangleparam .

    RPARENTHESIS    reduce using rule 175 (v -> TRIANGLE triangleparam .)


state 190

    (171) v -> LINE lineparam .

    RPARENTHESIS    reduce using rule 171 (v -> LINE lineparam .)


state 191

    (177) lineparam -> LPARENTHESIS . exp COMMA exp COMMA exp COMMA exp
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 232

state 192

    (183) startfillfunc -> STARTFILL LPARENTHESIS . exp RPARENTHESIS SEMICOLON
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 233

state 193

    (178) squareparam -> LPARENTHESIS . exp COMMA exp COMMA exp
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 234

state 194

    (172) v -> SQUARE squareparam .

    RPARENTHESIS    reduce using rule 172 (v -> SQUARE squareparam .)


state 195

    (167) an -> startfillfunc dibuja . stopfillfunc
    (184) stopfillfunc -> . STOPFILL LPARENTHESIS RPARENTHESIS

    STOPFILL        shift and go to state 236

    stopfillfunc                   shift and go to state 235

state 196

    (182) arcparam -> LPARENTHESIS . exp COMMA exp COMMA exp COMMA exp COMMA exp
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 237

state 197

    (176) v -> ARC arcparam .

    RPARENTHESIS    reduce using rule 176 (v -> ARC arcparam .)


state 198

    (170) dibuja -> v RPARENTHESIS .

    STOPFILL        reduce using rule 170 (dibuja -> v RPARENTHESIS .)
    SEMICOLON       reduce using rule 170 (dibuja -> v RPARENTHESIS .)


state 199

    (179) circleparam -> LPARENTHESIS . exp COMMA exp COMMA exp
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 238

state 200

    (173) v -> CIRCLE circleparam .

    RPARENTHESIS    reduce using rule 173 (v -> CIRCLE circleparam .)


state 201

    (169) linecolorfunc -> LINECOLOR LPARENTHESIS exp . RPARENTHESIS SEMICOLON

    RPARENTHESIS    shift and go to state 239


state 202

    (135) ciclo -> WHILE estatuto_while_1 LPARENTHESIS expresion . RPARENTHESIS estatuto_while_2 bloque estatuto_while_3

    RPARENTHESIS    shift and go to state 240


state 203

    (142) ah -> CTESTRING estatuto_print . ai
    (143) ai -> . COMMA ah
    (144) ai -> .

    COMMA           shift and go to state 242
    RPARENTHESIS    reduce using rule 144 (ai -> .)

    ai                             shift and go to state 241

state 204

    (139) escritura -> PRINT LPARENTHESIS ah RPARENTHESIS .

    SEMICOLON       reduce using rule 139 (escritura -> PRINT LPARENTHESIS ah RPARENTHESIS .)


state 205

    (141) ah -> expresion estatuto_print . ai
    (143) ai -> . COMMA ah
    (144) ai -> .

    COMMA           shift and go to state 242
    RPARENTHESIS    reduce using rule 144 (ai -> .)

    ai                             shift and go to state 243

state 206

    (72) o -> AND .

    LPARENTHESIS    reduce using rule 72 (o -> AND .)
    PLUS            reduce using rule 72 (o -> AND .)
    MINUS           reduce using rule 72 (o -> AND .)
    CALL            reduce using rule 72 (o -> AND .)
    RANDOM          reduce using rule 72 (o -> AND .)
    CTEINT          reduce using rule 72 (o -> AND .)
    CTEFLOAT        reduce using rule 72 (o -> AND .)
    CTESTRING       reduce using rule 72 (o -> AND .)
    ID              reduce using rule 72 (o -> AND .)
    TRUE            reduce using rule 72 (o -> AND .)
    FALSE           reduce using rule 72 (o -> AND .)


state 207

    (69) expresion -> specialexp m . exp_9 n
    (75) exp_9 -> .

    LPARENTHESIS    reduce using rule 75 (exp_9 -> .)
    PLUS            reduce using rule 75 (exp_9 -> .)
    MINUS           reduce using rule 75 (exp_9 -> .)
    CALL            reduce using rule 75 (exp_9 -> .)
    RANDOM          reduce using rule 75 (exp_9 -> .)
    CTEINT          reduce using rule 75 (exp_9 -> .)
    CTEFLOAT        reduce using rule 75 (exp_9 -> .)
    CTESTRING       reduce using rule 75 (exp_9 -> .)
    ID              reduce using rule 75 (exp_9 -> .)
    TRUE            reduce using rule 75 (exp_9 -> .)
    FALSE           reduce using rule 75 (exp_9 -> .)
    COMMA           reduce using rule 75 (exp_9 -> .)
    RPARENTHESIS    reduce using rule 75 (exp_9 -> .)
    SEMICOLON       reduce using rule 75 (exp_9 -> .)

    exp_9                          shift and go to state 244

state 208

    (70) m -> o . exp_8 specialexp
    (74) exp_8 -> .

    LPARENTHESIS    reduce using rule 74 (exp_8 -> .)
    PLUS            reduce using rule 74 (exp_8 -> .)
    MINUS           reduce using rule 74 (exp_8 -> .)
    CALL            reduce using rule 74 (exp_8 -> .)
    RANDOM          reduce using rule 74 (exp_8 -> .)
    CTEINT          reduce using rule 74 (exp_8 -> .)
    CTEFLOAT        reduce using rule 74 (exp_8 -> .)
    CTESTRING       reduce using rule 74 (exp_8 -> .)
    ID              reduce using rule 74 (exp_8 -> .)
    TRUE            reduce using rule 74 (exp_8 -> .)
    FALSE           reduce using rule 74 (exp_8 -> .)

    exp_8                          shift and go to state 245

state 209

    (73) o -> OR .

    LPARENTHESIS    reduce using rule 73 (o -> OR .)
    PLUS            reduce using rule 73 (o -> OR .)
    MINUS           reduce using rule 73 (o -> OR .)
    CALL            reduce using rule 73 (o -> OR .)
    RANDOM          reduce using rule 73 (o -> OR .)
    CTEINT          reduce using rule 73 (o -> OR .)
    CTEFLOAT        reduce using rule 73 (o -> OR .)
    CTESTRING       reduce using rule 73 (o -> OR .)
    ID              reduce using rule 73 (o -> OR .)
    TRUE            reduce using rule 73 (o -> OR .)
    FALSE           reduce using rule 73 (o -> OR .)


state 210

    (83) q -> NOTEQUAL .

    LPARENTHESIS    reduce using rule 83 (q -> NOTEQUAL .)
    PLUS            reduce using rule 83 (q -> NOTEQUAL .)
    MINUS           reduce using rule 83 (q -> NOTEQUAL .)
    CALL            reduce using rule 83 (q -> NOTEQUAL .)
    RANDOM          reduce using rule 83 (q -> NOTEQUAL .)
    CTEINT          reduce using rule 83 (q -> NOTEQUAL .)
    CTEFLOAT        reduce using rule 83 (q -> NOTEQUAL .)
    CTESTRING       reduce using rule 83 (q -> NOTEQUAL .)
    ID              reduce using rule 83 (q -> NOTEQUAL .)
    TRUE            reduce using rule 83 (q -> NOTEQUAL .)
    FALSE           reduce using rule 83 (q -> NOTEQUAL .)


state 211

    (85) q -> GREATEREQUAL .

    LPARENTHESIS    reduce using rule 85 (q -> GREATEREQUAL .)
    PLUS            reduce using rule 85 (q -> GREATEREQUAL .)
    MINUS           reduce using rule 85 (q -> GREATEREQUAL .)
    CALL            reduce using rule 85 (q -> GREATEREQUAL .)
    RANDOM          reduce using rule 85 (q -> GREATEREQUAL .)
    CTEINT          reduce using rule 85 (q -> GREATEREQUAL .)
    CTEFLOAT        reduce using rule 85 (q -> GREATEREQUAL .)
    CTESTRING       reduce using rule 85 (q -> GREATEREQUAL .)
    ID              reduce using rule 85 (q -> GREATEREQUAL .)
    TRUE            reduce using rule 85 (q -> GREATEREQUAL .)
    FALSE           reduce using rule 85 (q -> GREATEREQUAL .)


state 212

    (79) p -> q . exp_10 exp
    (87) exp_10 -> .

    LPARENTHESIS    reduce using rule 87 (exp_10 -> .)
    PLUS            reduce using rule 87 (exp_10 -> .)
    MINUS           reduce using rule 87 (exp_10 -> .)
    CALL            reduce using rule 87 (exp_10 -> .)
    RANDOM          reduce using rule 87 (exp_10 -> .)
    CTEINT          reduce using rule 87 (exp_10 -> .)
    CTEFLOAT        reduce using rule 87 (exp_10 -> .)
    CTESTRING       reduce using rule 87 (exp_10 -> .)
    ID              reduce using rule 87 (exp_10 -> .)
    TRUE            reduce using rule 87 (exp_10 -> .)
    FALSE           reduce using rule 87 (exp_10 -> .)

    exp_10                         shift and go to state 246

state 213

    (78) specialexp -> exp p . exp_11
    (88) exp_11 -> .

    AND             reduce using rule 88 (exp_11 -> .)
    OR              reduce using rule 88 (exp_11 -> .)
    LPARENTHESIS    reduce using rule 88 (exp_11 -> .)
    PLUS            reduce using rule 88 (exp_11 -> .)
    MINUS           reduce using rule 88 (exp_11 -> .)
    CALL            reduce using rule 88 (exp_11 -> .)
    RANDOM          reduce using rule 88 (exp_11 -> .)
    CTEINT          reduce using rule 88 (exp_11 -> .)
    CTEFLOAT        reduce using rule 88 (exp_11 -> .)
    CTESTRING       reduce using rule 88 (exp_11 -> .)
    ID              reduce using rule 88 (exp_11 -> .)
    TRUE            reduce using rule 88 (exp_11 -> .)
    FALSE           reduce using rule 88 (exp_11 -> .)
    COMMA           reduce using rule 88 (exp_11 -> .)
    RPARENTHESIS    reduce using rule 88 (exp_11 -> .)
    SEMICOLON       reduce using rule 88 (exp_11 -> .)

    exp_11                         shift and go to state 247

state 214

    (82) q -> LESSTHAN .

    LPARENTHESIS    reduce using rule 82 (q -> LESSTHAN .)
    PLUS            reduce using rule 82 (q -> LESSTHAN .)
    MINUS           reduce using rule 82 (q -> LESSTHAN .)
    CALL            reduce using rule 82 (q -> LESSTHAN .)
    RANDOM          reduce using rule 82 (q -> LESSTHAN .)
    CTEINT          reduce using rule 82 (q -> LESSTHAN .)
    CTEFLOAT        reduce using rule 82 (q -> LESSTHAN .)
    CTESTRING       reduce using rule 82 (q -> LESSTHAN .)
    ID              reduce using rule 82 (q -> LESSTHAN .)
    TRUE            reduce using rule 82 (q -> LESSTHAN .)
    FALSE           reduce using rule 82 (q -> LESSTHAN .)


state 215

    (81) q -> GREATERTHAN .

    LPARENTHESIS    reduce using rule 81 (q -> GREATERTHAN .)
    PLUS            reduce using rule 81 (q -> GREATERTHAN .)
    MINUS           reduce using rule 81 (q -> GREATERTHAN .)
    CALL            reduce using rule 81 (q -> GREATERTHAN .)
    RANDOM          reduce using rule 81 (q -> GREATERTHAN .)
    CTEINT          reduce using rule 81 (q -> GREATERTHAN .)
    CTEFLOAT        reduce using rule 81 (q -> GREATERTHAN .)
    CTESTRING       reduce using rule 81 (q -> GREATERTHAN .)
    ID              reduce using rule 81 (q -> GREATERTHAN .)
    TRUE            reduce using rule 81 (q -> GREATERTHAN .)
    FALSE           reduce using rule 81 (q -> GREATERTHAN .)


state 216

    (84) q -> LESSEQUAL .

    LPARENTHESIS    reduce using rule 84 (q -> LESSEQUAL .)
    PLUS            reduce using rule 84 (q -> LESSEQUAL .)
    MINUS           reduce using rule 84 (q -> LESSEQUAL .)
    CALL            reduce using rule 84 (q -> LESSEQUAL .)
    RANDOM          reduce using rule 84 (q -> LESSEQUAL .)
    CTEINT          reduce using rule 84 (q -> LESSEQUAL .)
    CTEFLOAT        reduce using rule 84 (q -> LESSEQUAL .)
    CTESTRING       reduce using rule 84 (q -> LESSEQUAL .)
    ID              reduce using rule 84 (q -> LESSEQUAL .)
    TRUE            reduce using rule 84 (q -> LESSEQUAL .)
    FALSE           reduce using rule 84 (q -> LESSEQUAL .)


state 217

    (86) q -> EQUALEQUAL .

    LPARENTHESIS    reduce using rule 86 (q -> EQUALEQUAL .)
    PLUS            reduce using rule 86 (q -> EQUALEQUAL .)
    MINUS           reduce using rule 86 (q -> EQUALEQUAL .)
    CALL            reduce using rule 86 (q -> EQUALEQUAL .)
    RANDOM          reduce using rule 86 (q -> EQUALEQUAL .)
    CTEINT          reduce using rule 86 (q -> EQUALEQUAL .)
    CTEFLOAT        reduce using rule 86 (q -> EQUALEQUAL .)
    CTESTRING       reduce using rule 86 (q -> EQUALEQUAL .)
    ID              reduce using rule 86 (q -> EQUALEQUAL .)
    TRUE            reduce using rule 86 (q -> EQUALEQUAL .)
    FALSE           reduce using rule 86 (q -> EQUALEQUAL .)


state 218

    (160) randomfunc -> RANDOM LPARENTHESIS exp COMMA . exp RPARENTHESIS
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 248

state 219

    (61) asignacion -> ID exp_asign aa EQUAL . exp_12 expresion exp_13
    (63) exp_12 -> .

    LPARENTHESIS    reduce using rule 63 (exp_12 -> .)
    PLUS            reduce using rule 63 (exp_12 -> .)
    MINUS           reduce using rule 63 (exp_12 -> .)
    CALL            reduce using rule 63 (exp_12 -> .)
    RANDOM          reduce using rule 63 (exp_12 -> .)
    CTEINT          reduce using rule 63 (exp_12 -> .)
    CTEFLOAT        reduce using rule 63 (exp_12 -> .)
    CTESTRING       reduce using rule 63 (exp_12 -> .)
    ID              reduce using rule 63 (exp_12 -> .)
    TRUE            reduce using rule 63 (exp_12 -> .)
    FALSE           reduce using rule 63 (exp_12 -> .)

    exp_12                         shift and go to state 249

state 220

    (65) aa -> LSQUAREBRACKET acceso_dimvar_2 . exp acceso_dimvar_3 RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 250

state 221

    (129) condicion -> IF LPARENTHESIS expresion RPARENTHESIS . estatuto_if_1 bloque s estatuto_endif
    (130) estatuto_if_1 -> .

    LBRACKET        reduce using rule 130 (estatuto_if_1 -> .)

    estatuto_if_1                  shift and go to state 251

state 222

    (168) linewidthfunc -> LINEWIDTH LPARENTHESIS exp RPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 252


state 223

    (145) llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS . estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (147) estatuto_llamadafunc_2 -> .

    LPARENTHESIS    reduce using rule 147 (estatuto_llamadafunc_2 -> .)
    PLUS            reduce using rule 147 (estatuto_llamadafunc_2 -> .)
    MINUS           reduce using rule 147 (estatuto_llamadafunc_2 -> .)
    CALL            reduce using rule 147 (estatuto_llamadafunc_2 -> .)
    RANDOM          reduce using rule 147 (estatuto_llamadafunc_2 -> .)
    RPARENTHESIS    reduce using rule 147 (estatuto_llamadafunc_2 -> .)
    CTEINT          reduce using rule 147 (estatuto_llamadafunc_2 -> .)
    CTEFLOAT        reduce using rule 147 (estatuto_llamadafunc_2 -> .)
    CTESTRING       reduce using rule 147 (estatuto_llamadafunc_2 -> .)
    ID              reduce using rule 147 (estatuto_llamadafunc_2 -> .)
    TRUE            reduce using rule 147 (estatuto_llamadafunc_2 -> .)
    FALSE           reduce using rule 147 (estatuto_llamadafunc_2 -> .)

    estatuto_llamadafunc_2         shift and go to state 253

state 224

    (30) funcion -> FUNC g ID altaFuncion LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON ENDFUNC . accionRetorno
    (31) accionRetorno -> .

    FUNC            reduce using rule 31 (accionRetorno -> .)
    MAIN            reduce using rule 31 (accionRetorno -> .)

    accionRetorno                  shift and go to state 254

state 225

    (126) r -> LSQUAREBRACKET . exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 255

state 226

    (119) varcte -> ID exp_1 r .

    PRODUCT         reduce using rule 119 (varcte -> ID exp_1 r .)
    DIVISION        reduce using rule 119 (varcte -> ID exp_1 r .)
    PLUS            reduce using rule 119 (varcte -> ID exp_1 r .)
    MINUS           reduce using rule 119 (varcte -> ID exp_1 r .)
    SEMICOLON       reduce using rule 119 (varcte -> ID exp_1 r .)
    GREATERTHAN     reduce using rule 119 (varcte -> ID exp_1 r .)
    LESSTHAN        reduce using rule 119 (varcte -> ID exp_1 r .)
    NOTEQUAL        reduce using rule 119 (varcte -> ID exp_1 r .)
    LESSEQUAL       reduce using rule 119 (varcte -> ID exp_1 r .)
    GREATEREQUAL    reduce using rule 119 (varcte -> ID exp_1 r .)
    EQUALEQUAL      reduce using rule 119 (varcte -> ID exp_1 r .)
    AND             reduce using rule 119 (varcte -> ID exp_1 r .)
    OR              reduce using rule 119 (varcte -> ID exp_1 r .)
    LPARENTHESIS    reduce using rule 119 (varcte -> ID exp_1 r .)
    CALL            reduce using rule 119 (varcte -> ID exp_1 r .)
    RANDOM          reduce using rule 119 (varcte -> ID exp_1 r .)
    CTEINT          reduce using rule 119 (varcte -> ID exp_1 r .)
    CTEFLOAT        reduce using rule 119 (varcte -> ID exp_1 r .)
    CTESTRING       reduce using rule 119 (varcte -> ID exp_1 r .)
    ID              reduce using rule 119 (varcte -> ID exp_1 r .)
    TRUE            reduce using rule 119 (varcte -> ID exp_1 r .)
    FALSE           reduce using rule 119 (varcte -> ID exp_1 r .)
    COMMA           reduce using rule 119 (varcte -> ID exp_1 r .)
    RPARENTHESIS    reduce using rule 119 (varcte -> ID exp_1 r .)
    RSQUAREBRACKET  reduce using rule 119 (varcte -> ID exp_1 r .)


state 227

    (91) ab -> ab2 exp_3 . exp
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    exp                            shift and go to state 256
    opfunc                         shift and go to state 113

state 228

    (98) ac -> ac2 exp_2 . termino
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 257
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113

state 229

    (107) ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS . exp_7
    (109) exp_7 -> .

    PRODUCT         reduce using rule 109 (exp_7 -> .)
    DIVISION        reduce using rule 109 (exp_7 -> .)
    PLUS            reduce using rule 109 (exp_7 -> .)
    MINUS           reduce using rule 109 (exp_7 -> .)
    SEMICOLON       reduce using rule 109 (exp_7 -> .)
    GREATERTHAN     reduce using rule 109 (exp_7 -> .)
    LESSTHAN        reduce using rule 109 (exp_7 -> .)
    NOTEQUAL        reduce using rule 109 (exp_7 -> .)
    LESSEQUAL       reduce using rule 109 (exp_7 -> .)
    GREATEREQUAL    reduce using rule 109 (exp_7 -> .)
    EQUALEQUAL      reduce using rule 109 (exp_7 -> .)
    AND             reduce using rule 109 (exp_7 -> .)
    OR              reduce using rule 109 (exp_7 -> .)
    LPARENTHESIS    reduce using rule 109 (exp_7 -> .)
    CALL            reduce using rule 109 (exp_7 -> .)
    RANDOM          reduce using rule 109 (exp_7 -> .)
    CTEINT          reduce using rule 109 (exp_7 -> .)
    CTEFLOAT        reduce using rule 109 (exp_7 -> .)
    CTESTRING       reduce using rule 109 (exp_7 -> .)
    ID              reduce using rule 109 (exp_7 -> .)
    TRUE            reduce using rule 109 (exp_7 -> .)
    FALSE           reduce using rule 109 (exp_7 -> .)
    COMMA           reduce using rule 109 (exp_7 -> .)
    RPARENTHESIS    reduce using rule 109 (exp_7 -> .)
    RSQUAREBRACKET  reduce using rule 109 (exp_7 -> .)

    exp_7                          shift and go to state 258

state 230

    (180) starparam -> LPARENTHESIS exp . COMMA exp COMMA exp

    COMMA           shift and go to state 259


state 231

    (181) triangleparam -> LPARENTHESIS exp . COMMA exp COMMA exp

    COMMA           shift and go to state 260


state 232

    (177) lineparam -> LPARENTHESIS exp . COMMA exp COMMA exp COMMA exp

    COMMA           shift and go to state 261


state 233

    (183) startfillfunc -> STARTFILL LPARENTHESIS exp . RPARENTHESIS SEMICOLON

    RPARENTHESIS    shift and go to state 262


state 234

    (178) squareparam -> LPARENTHESIS exp . COMMA exp COMMA exp

    COMMA           shift and go to state 263


state 235

    (167) an -> startfillfunc dibuja stopfillfunc .

    SEMICOLON       reduce using rule 167 (an -> startfillfunc dibuja stopfillfunc .)


state 236

    (184) stopfillfunc -> STOPFILL . LPARENTHESIS RPARENTHESIS

    LPARENTHESIS    shift and go to state 264


state 237

    (182) arcparam -> LPARENTHESIS exp . COMMA exp COMMA exp COMMA exp COMMA exp

    COMMA           shift and go to state 265


state 238

    (179) circleparam -> LPARENTHESIS exp . COMMA exp COMMA exp

    COMMA           shift and go to state 266


state 239

    (169) linecolorfunc -> LINECOLOR LPARENTHESIS exp RPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 267


state 240

    (135) ciclo -> WHILE estatuto_while_1 LPARENTHESIS expresion RPARENTHESIS . estatuto_while_2 bloque estatuto_while_3
    (137) estatuto_while_2 -> .

    LBRACKET        reduce using rule 137 (estatuto_while_2 -> .)

    estatuto_while_2               shift and go to state 268

state 241

    (142) ah -> CTESTRING estatuto_print ai .

    RPARENTHESIS    reduce using rule 142 (ah -> CTESTRING estatuto_print ai .)


state 242

    (143) ai -> COMMA . ah
    (141) ah -> . expresion estatuto_print ai
    (142) ah -> . CTESTRING estatuto_print ai
    (69) expresion -> . specialexp m exp_9 n
    (78) specialexp -> . exp p exp_11
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

  ! shift/reduce conflict for CTESTRING resolved as shift
    CTESTRING       shift and go to state 157
    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

  ! CTESTRING       [ reduce using rule 114 (ag -> .) ]

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    ah                             shift and go to state 269
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    expresion                      shift and go to state 159
    llamadafunc                    shift and go to state 109
    specialexp                     shift and go to state 160
    exp                            shift and go to state 161

state 243

    (141) ah -> expresion estatuto_print ai .

    RPARENTHESIS    reduce using rule 141 (ah -> expresion estatuto_print ai .)


state 244

    (69) expresion -> specialexp m exp_9 . n
    (76) n -> . expresion
    (77) n -> .
    (69) expresion -> . specialexp m exp_9 n
    (78) specialexp -> . exp p exp_11
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    COMMA           reduce using rule 77 (n -> .)
    RPARENTHESIS    reduce using rule 77 (n -> .)
    SEMICOLON       reduce using rule 77 (n -> .)
    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    expresion                      shift and go to state 270
    llamadafunc                    shift and go to state 109
    specialexp                     shift and go to state 160
    n                              shift and go to state 271
    exp                            shift and go to state 161

state 245

    (70) m -> o exp_8 . specialexp
    (78) specialexp -> . exp p exp_11
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    specialexp                     shift and go to state 272
    exp                            shift and go to state 161

state 246

    (79) p -> q exp_10 . exp
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 273

state 247

    (78) specialexp -> exp p exp_11 .

    AND             reduce using rule 78 (specialexp -> exp p exp_11 .)
    OR              reduce using rule 78 (specialexp -> exp p exp_11 .)
    LPARENTHESIS    reduce using rule 78 (specialexp -> exp p exp_11 .)
    PLUS            reduce using rule 78 (specialexp -> exp p exp_11 .)
    MINUS           reduce using rule 78 (specialexp -> exp p exp_11 .)
    CALL            reduce using rule 78 (specialexp -> exp p exp_11 .)
    RANDOM          reduce using rule 78 (specialexp -> exp p exp_11 .)
    CTEINT          reduce using rule 78 (specialexp -> exp p exp_11 .)
    CTEFLOAT        reduce using rule 78 (specialexp -> exp p exp_11 .)
    CTESTRING       reduce using rule 78 (specialexp -> exp p exp_11 .)
    ID              reduce using rule 78 (specialexp -> exp p exp_11 .)
    TRUE            reduce using rule 78 (specialexp -> exp p exp_11 .)
    FALSE           reduce using rule 78 (specialexp -> exp p exp_11 .)
    SEMICOLON       reduce using rule 78 (specialexp -> exp p exp_11 .)
    COMMA           reduce using rule 78 (specialexp -> exp p exp_11 .)
    RPARENTHESIS    reduce using rule 78 (specialexp -> exp p exp_11 .)


state 248

    (160) randomfunc -> RANDOM LPARENTHESIS exp COMMA exp . RPARENTHESIS

    RPARENTHESIS    shift and go to state 274


state 249

    (61) asignacion -> ID exp_asign aa EQUAL exp_12 . expresion exp_13
    (69) expresion -> . specialexp m exp_9 n
    (78) specialexp -> . exp p exp_11
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    specialexp                     shift and go to state 160
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    expresion                      shift and go to state 275
    llamadafunc                    shift and go to state 109
    exp                            shift and go to state 161

state 250

    (65) aa -> LSQUAREBRACKET acceso_dimvar_2 exp . acceso_dimvar_3 RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET
    (68) acceso_dimvar_3 -> .

    RSQUAREBRACKET  reduce using rule 68 (acceso_dimvar_3 -> .)

    acceso_dimvar_3                shift and go to state 276

state 251

    (129) condicion -> IF LPARENTHESIS expresion RPARENTHESIS estatuto_if_1 . bloque s estatuto_endif
    (50) bloque -> . LBRACKET l RBRACKET

    LBRACKET        shift and go to state 70

    bloque                         shift and go to state 277

state 252

    (168) linewidthfunc -> LINEWIDTH LPARENTHESIS exp RPARENTHESIS SEMICOLON .

    LINECOLOR       reduce using rule 168 (linewidthfunc -> LINEWIDTH LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    STARTFILL       reduce using rule 168 (linewidthfunc -> LINEWIDTH LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    LINE            reduce using rule 168 (linewidthfunc -> LINEWIDTH LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    SQUARE          reduce using rule 168 (linewidthfunc -> LINEWIDTH LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    CIRCLE          reduce using rule 168 (linewidthfunc -> LINEWIDTH LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    STAR            reduce using rule 168 (linewidthfunc -> LINEWIDTH LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    TRIANGLE        reduce using rule 168 (linewidthfunc -> LINEWIDTH LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    ARC             reduce using rule 168 (linewidthfunc -> LINEWIDTH LPARENTHESIS exp RPARENTHESIS SEMICOLON .)


state 253

    (145) llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 . t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (148) t -> . u
    (149) t -> .
    (150) u -> . exp estatuto_llamadafunc_3
    (151) u -> . exp estatuto_llamadafunc_3 COMMA estatuto_llamadafunc_4 u
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    RPARENTHESIS    reduce using rule 149 (t -> .)
    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    u                              shift and go to state 278
    t                              shift and go to state 279
    exp                            shift and go to state 280

state 254

    (30) funcion -> FUNC g ID altaFuncion LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno .

    FUNC            reduce using rule 30 (funcion -> FUNC g ID altaFuncion LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno .)
    MAIN            reduce using rule 30 (funcion -> FUNC g ID altaFuncion LPARENTHESIS h RPARENTHESIS funcvars altaInicioFunc bloque SEMICOLON ENDFUNC accionRetorno .)


state 255

    (126) r -> LSQUAREBRACKET exp . RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET

    RSQUAREBRACKET  shift and go to state 281


state 256

    (91) ab -> ab2 exp_3 exp .

    SEMICOLON       reduce using rule 91 (ab -> ab2 exp_3 exp .)
    GREATERTHAN     reduce using rule 91 (ab -> ab2 exp_3 exp .)
    LESSTHAN        reduce using rule 91 (ab -> ab2 exp_3 exp .)
    NOTEQUAL        reduce using rule 91 (ab -> ab2 exp_3 exp .)
    LESSEQUAL       reduce using rule 91 (ab -> ab2 exp_3 exp .)
    GREATEREQUAL    reduce using rule 91 (ab -> ab2 exp_3 exp .)
    EQUALEQUAL      reduce using rule 91 (ab -> ab2 exp_3 exp .)
    AND             reduce using rule 91 (ab -> ab2 exp_3 exp .)
    OR              reduce using rule 91 (ab -> ab2 exp_3 exp .)
    LPARENTHESIS    reduce using rule 91 (ab -> ab2 exp_3 exp .)
    PLUS            reduce using rule 91 (ab -> ab2 exp_3 exp .)
    MINUS           reduce using rule 91 (ab -> ab2 exp_3 exp .)
    CALL            reduce using rule 91 (ab -> ab2 exp_3 exp .)
    RANDOM          reduce using rule 91 (ab -> ab2 exp_3 exp .)
    CTEINT          reduce using rule 91 (ab -> ab2 exp_3 exp .)
    CTEFLOAT        reduce using rule 91 (ab -> ab2 exp_3 exp .)
    CTESTRING       reduce using rule 91 (ab -> ab2 exp_3 exp .)
    ID              reduce using rule 91 (ab -> ab2 exp_3 exp .)
    TRUE            reduce using rule 91 (ab -> ab2 exp_3 exp .)
    FALSE           reduce using rule 91 (ab -> ab2 exp_3 exp .)
    COMMA           reduce using rule 91 (ab -> ab2 exp_3 exp .)
    RPARENTHESIS    reduce using rule 91 (ab -> ab2 exp_3 exp .)
    RSQUAREBRACKET  reduce using rule 91 (ab -> ab2 exp_3 exp .)


state 257

    (98) ac -> ac2 exp_2 termino .

    PLUS            reduce using rule 98 (ac -> ac2 exp_2 termino .)
    MINUS           reduce using rule 98 (ac -> ac2 exp_2 termino .)
    SEMICOLON       reduce using rule 98 (ac -> ac2 exp_2 termino .)
    GREATERTHAN     reduce using rule 98 (ac -> ac2 exp_2 termino .)
    LESSTHAN        reduce using rule 98 (ac -> ac2 exp_2 termino .)
    NOTEQUAL        reduce using rule 98 (ac -> ac2 exp_2 termino .)
    LESSEQUAL       reduce using rule 98 (ac -> ac2 exp_2 termino .)
    GREATEREQUAL    reduce using rule 98 (ac -> ac2 exp_2 termino .)
    EQUALEQUAL      reduce using rule 98 (ac -> ac2 exp_2 termino .)
    AND             reduce using rule 98 (ac -> ac2 exp_2 termino .)
    OR              reduce using rule 98 (ac -> ac2 exp_2 termino .)
    LPARENTHESIS    reduce using rule 98 (ac -> ac2 exp_2 termino .)
    CALL            reduce using rule 98 (ac -> ac2 exp_2 termino .)
    RANDOM          reduce using rule 98 (ac -> ac2 exp_2 termino .)
    CTEINT          reduce using rule 98 (ac -> ac2 exp_2 termino .)
    CTEFLOAT        reduce using rule 98 (ac -> ac2 exp_2 termino .)
    CTESTRING       reduce using rule 98 (ac -> ac2 exp_2 termino .)
    ID              reduce using rule 98 (ac -> ac2 exp_2 termino .)
    TRUE            reduce using rule 98 (ac -> ac2 exp_2 termino .)
    FALSE           reduce using rule 98 (ac -> ac2 exp_2 termino .)
    COMMA           reduce using rule 98 (ac -> ac2 exp_2 termino .)
    RPARENTHESIS    reduce using rule 98 (ac -> ac2 exp_2 termino .)
    RSQUAREBRACKET  reduce using rule 98 (ac -> ac2 exp_2 termino .)


state 258

    (107) ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .

    PRODUCT         reduce using rule 107 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    DIVISION        reduce using rule 107 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    PLUS            reduce using rule 107 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    MINUS           reduce using rule 107 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    AND             reduce using rule 107 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    OR              reduce using rule 107 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    LPARENTHESIS    reduce using rule 107 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    CALL            reduce using rule 107 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    RANDOM          reduce using rule 107 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    CTEINT          reduce using rule 107 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    CTEFLOAT        reduce using rule 107 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    CTESTRING       reduce using rule 107 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    ID              reduce using rule 107 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    TRUE            reduce using rule 107 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    FALSE           reduce using rule 107 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    COMMA           reduce using rule 107 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    RPARENTHESIS    reduce using rule 107 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    SEMICOLON       reduce using rule 107 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    RSQUAREBRACKET  reduce using rule 107 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    GREATERTHAN     reduce using rule 107 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    LESSTHAN        reduce using rule 107 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    NOTEQUAL        reduce using rule 107 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    LESSEQUAL       reduce using rule 107 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    GREATEREQUAL    reduce using rule 107 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)
    EQUALEQUAL      reduce using rule 107 (ad -> LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7 .)


state 259

    (180) starparam -> LPARENTHESIS exp COMMA . exp COMMA exp
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 282

state 260

    (181) triangleparam -> LPARENTHESIS exp COMMA . exp COMMA exp
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 283

state 261

    (177) lineparam -> LPARENTHESIS exp COMMA . exp COMMA exp COMMA exp
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 284

state 262

    (183) startfillfunc -> STARTFILL LPARENTHESIS exp RPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 285


state 263

    (178) squareparam -> LPARENTHESIS exp COMMA . exp COMMA exp
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 286

state 264

    (184) stopfillfunc -> STOPFILL LPARENTHESIS . RPARENTHESIS

    RPARENTHESIS    shift and go to state 287


state 265

    (182) arcparam -> LPARENTHESIS exp COMMA . exp COMMA exp COMMA exp COMMA exp
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 288

state 266

    (179) circleparam -> LPARENTHESIS exp COMMA . exp COMMA exp
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 289

state 267

    (169) linecolorfunc -> LINECOLOR LPARENTHESIS exp RPARENTHESIS SEMICOLON .

    STARTFILL       reduce using rule 169 (linecolorfunc -> LINECOLOR LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    LINE            reduce using rule 169 (linecolorfunc -> LINECOLOR LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    SQUARE          reduce using rule 169 (linecolorfunc -> LINECOLOR LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    CIRCLE          reduce using rule 169 (linecolorfunc -> LINECOLOR LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    STAR            reduce using rule 169 (linecolorfunc -> LINECOLOR LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    TRIANGLE        reduce using rule 169 (linecolorfunc -> LINECOLOR LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    ARC             reduce using rule 169 (linecolorfunc -> LINECOLOR LPARENTHESIS exp RPARENTHESIS SEMICOLON .)


state 268

    (135) ciclo -> WHILE estatuto_while_1 LPARENTHESIS expresion RPARENTHESIS estatuto_while_2 . bloque estatuto_while_3
    (50) bloque -> . LBRACKET l RBRACKET

    LBRACKET        shift and go to state 70

    bloque                         shift and go to state 290

state 269

    (143) ai -> COMMA ah .

    RPARENTHESIS    reduce using rule 143 (ai -> COMMA ah .)


state 270

    (76) n -> expresion .

    COMMA           reduce using rule 76 (n -> expresion .)
    RPARENTHESIS    reduce using rule 76 (n -> expresion .)
    SEMICOLON       reduce using rule 76 (n -> expresion .)


state 271

    (69) expresion -> specialexp m exp_9 n .

    COMMA           reduce using rule 69 (expresion -> specialexp m exp_9 n .)
    RPARENTHESIS    reduce using rule 69 (expresion -> specialexp m exp_9 n .)
    SEMICOLON       reduce using rule 69 (expresion -> specialexp m exp_9 n .)


state 272

    (70) m -> o exp_8 specialexp .

    LPARENTHESIS    reduce using rule 70 (m -> o exp_8 specialexp .)
    PLUS            reduce using rule 70 (m -> o exp_8 specialexp .)
    MINUS           reduce using rule 70 (m -> o exp_8 specialexp .)
    CALL            reduce using rule 70 (m -> o exp_8 specialexp .)
    RANDOM          reduce using rule 70 (m -> o exp_8 specialexp .)
    CTEINT          reduce using rule 70 (m -> o exp_8 specialexp .)
    CTEFLOAT        reduce using rule 70 (m -> o exp_8 specialexp .)
    CTESTRING       reduce using rule 70 (m -> o exp_8 specialexp .)
    ID              reduce using rule 70 (m -> o exp_8 specialexp .)
    TRUE            reduce using rule 70 (m -> o exp_8 specialexp .)
    FALSE           reduce using rule 70 (m -> o exp_8 specialexp .)
    COMMA           reduce using rule 70 (m -> o exp_8 specialexp .)
    RPARENTHESIS    reduce using rule 70 (m -> o exp_8 specialexp .)
    SEMICOLON       reduce using rule 70 (m -> o exp_8 specialexp .)


state 273

    (79) p -> q exp_10 exp .

    AND             reduce using rule 79 (p -> q exp_10 exp .)
    OR              reduce using rule 79 (p -> q exp_10 exp .)
    LPARENTHESIS    reduce using rule 79 (p -> q exp_10 exp .)
    PLUS            reduce using rule 79 (p -> q exp_10 exp .)
    MINUS           reduce using rule 79 (p -> q exp_10 exp .)
    CALL            reduce using rule 79 (p -> q exp_10 exp .)
    RANDOM          reduce using rule 79 (p -> q exp_10 exp .)
    CTEINT          reduce using rule 79 (p -> q exp_10 exp .)
    CTEFLOAT        reduce using rule 79 (p -> q exp_10 exp .)
    CTESTRING       reduce using rule 79 (p -> q exp_10 exp .)
    ID              reduce using rule 79 (p -> q exp_10 exp .)
    TRUE            reduce using rule 79 (p -> q exp_10 exp .)
    FALSE           reduce using rule 79 (p -> q exp_10 exp .)
    COMMA           reduce using rule 79 (p -> q exp_10 exp .)
    RPARENTHESIS    reduce using rule 79 (p -> q exp_10 exp .)
    SEMICOLON       reduce using rule 79 (p -> q exp_10 exp .)


state 274

    (160) randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .

    PRODUCT         reduce using rule 160 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    DIVISION        reduce using rule 160 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    PLUS            reduce using rule 160 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    MINUS           reduce using rule 160 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    AND             reduce using rule 160 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    OR              reduce using rule 160 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    LPARENTHESIS    reduce using rule 160 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    CALL            reduce using rule 160 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    RANDOM          reduce using rule 160 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    CTEINT          reduce using rule 160 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    CTEFLOAT        reduce using rule 160 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    CTESTRING       reduce using rule 160 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    ID              reduce using rule 160 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    TRUE            reduce using rule 160 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    FALSE           reduce using rule 160 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    COMMA           reduce using rule 160 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 160 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    SEMICOLON       reduce using rule 160 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    GREATERTHAN     reduce using rule 160 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    LESSTHAN        reduce using rule 160 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    NOTEQUAL        reduce using rule 160 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    LESSEQUAL       reduce using rule 160 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    GREATEREQUAL    reduce using rule 160 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    EQUALEQUAL      reduce using rule 160 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)
    RSQUAREBRACKET  reduce using rule 160 (randomfunc -> RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS .)


state 275

    (61) asignacion -> ID exp_asign aa EQUAL exp_12 expresion . exp_13
    (64) exp_13 -> .

    SEMICOLON       reduce using rule 64 (exp_13 -> .)

    exp_13                         shift and go to state 291

state 276

    (65) aa -> LSQUAREBRACKET acceso_dimvar_2 exp acceso_dimvar_3 . RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET

    RSQUAREBRACKET  shift and go to state 292


state 277

    (129) condicion -> IF LPARENTHESIS expresion RPARENTHESIS estatuto_if_1 bloque . s estatuto_endif
    (131) s -> . ELSE estatuto_else bloque
    (132) s -> .

    ELSE            shift and go to state 293
    SEMICOLON       reduce using rule 132 (s -> .)

    s                              shift and go to state 294

state 278

    (148) t -> u .

    RPARENTHESIS    reduce using rule 148 (t -> u .)


state 279

    (145) llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t . estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (154) estatuto_llamadafunc_5 -> .

    RPARENTHESIS    reduce using rule 154 (estatuto_llamadafunc_5 -> .)

    estatuto_llamadafunc_5         shift and go to state 295

state 280

    (150) u -> exp . estatuto_llamadafunc_3
    (151) u -> exp . estatuto_llamadafunc_3 COMMA estatuto_llamadafunc_4 u
    (152) estatuto_llamadafunc_3 -> .

    COMMA           reduce using rule 152 (estatuto_llamadafunc_3 -> .)
    RPARENTHESIS    reduce using rule 152 (estatuto_llamadafunc_3 -> .)

    estatuto_llamadafunc_3         shift and go to state 296

state 281

    (126) r -> LSQUAREBRACKET exp RSQUAREBRACKET . LSQUAREBRACKET exp RSQUAREBRACKET

    LSQUAREBRACKET  shift and go to state 297


state 282

    (180) starparam -> LPARENTHESIS exp COMMA exp . COMMA exp

    COMMA           shift and go to state 298


state 283

    (181) triangleparam -> LPARENTHESIS exp COMMA exp . COMMA exp

    COMMA           shift and go to state 299


state 284

    (177) lineparam -> LPARENTHESIS exp COMMA exp . COMMA exp COMMA exp

    COMMA           shift and go to state 300


state 285

    (183) startfillfunc -> STARTFILL LPARENTHESIS exp RPARENTHESIS SEMICOLON .

    LINE            reduce using rule 183 (startfillfunc -> STARTFILL LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    SQUARE          reduce using rule 183 (startfillfunc -> STARTFILL LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    CIRCLE          reduce using rule 183 (startfillfunc -> STARTFILL LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    STAR            reduce using rule 183 (startfillfunc -> STARTFILL LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    TRIANGLE        reduce using rule 183 (startfillfunc -> STARTFILL LPARENTHESIS exp RPARENTHESIS SEMICOLON .)
    ARC             reduce using rule 183 (startfillfunc -> STARTFILL LPARENTHESIS exp RPARENTHESIS SEMICOLON .)


state 286

    (178) squareparam -> LPARENTHESIS exp COMMA exp . COMMA exp

    COMMA           shift and go to state 301


state 287

    (184) stopfillfunc -> STOPFILL LPARENTHESIS RPARENTHESIS .

    SEMICOLON       reduce using rule 184 (stopfillfunc -> STOPFILL LPARENTHESIS RPARENTHESIS .)


state 288

    (182) arcparam -> LPARENTHESIS exp COMMA exp . COMMA exp COMMA exp COMMA exp

    COMMA           shift and go to state 302


state 289

    (179) circleparam -> LPARENTHESIS exp COMMA exp . COMMA exp

    COMMA           shift and go to state 303


state 290

    (135) ciclo -> WHILE estatuto_while_1 LPARENTHESIS expresion RPARENTHESIS estatuto_while_2 bloque . estatuto_while_3
    (138) estatuto_while_3 -> .

    SEMICOLON       reduce using rule 138 (estatuto_while_3 -> .)

    estatuto_while_3               shift and go to state 304

state 291

    (61) asignacion -> ID exp_asign aa EQUAL exp_12 expresion exp_13 .

    SEMICOLON       reduce using rule 61 (asignacion -> ID exp_asign aa EQUAL exp_12 expresion exp_13 .)


state 292

    (65) aa -> LSQUAREBRACKET acceso_dimvar_2 exp acceso_dimvar_3 RSQUAREBRACKET . LSQUAREBRACKET exp RSQUAREBRACKET

    LSQUAREBRACKET  shift and go to state 305


state 293

    (131) s -> ELSE . estatuto_else bloque
    (133) estatuto_else -> .

    LBRACKET        reduce using rule 133 (estatuto_else -> .)

    estatuto_else                  shift and go to state 306

state 294

    (129) condicion -> IF LPARENTHESIS expresion RPARENTHESIS estatuto_if_1 bloque s . estatuto_endif
    (134) estatuto_endif -> .

    SEMICOLON       reduce using rule 134 (estatuto_endif -> .)

    estatuto_endif                 shift and go to state 307

state 295

    (145) llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 . RPARENTHESIS estatuto_llamadafunc_6

    RPARENTHESIS    shift and go to state 308


state 296

    (150) u -> exp estatuto_llamadafunc_3 .
    (151) u -> exp estatuto_llamadafunc_3 . COMMA estatuto_llamadafunc_4 u

    RPARENTHESIS    reduce using rule 150 (u -> exp estatuto_llamadafunc_3 .)
    COMMA           shift and go to state 309


state 297

    (126) r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET . exp RSQUAREBRACKET
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 310

state 298

    (180) starparam -> LPARENTHESIS exp COMMA exp COMMA . exp
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 311

state 299

    (181) triangleparam -> LPARENTHESIS exp COMMA exp COMMA . exp
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 312

state 300

    (177) lineparam -> LPARENTHESIS exp COMMA exp COMMA . exp COMMA exp
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 313

state 301

    (178) squareparam -> LPARENTHESIS exp COMMA exp COMMA . exp
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 314

state 302

    (182) arcparam -> LPARENTHESIS exp COMMA exp COMMA . exp COMMA exp COMMA exp
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 315

state 303

    (179) circleparam -> LPARENTHESIS exp COMMA exp COMMA . exp
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 316

state 304

    (135) ciclo -> WHILE estatuto_while_1 LPARENTHESIS expresion RPARENTHESIS estatuto_while_2 bloque estatuto_while_3 .

    SEMICOLON       reduce using rule 135 (ciclo -> WHILE estatuto_while_1 LPARENTHESIS expresion RPARENTHESIS estatuto_while_2 bloque estatuto_while_3 .)


state 305

    (65) aa -> LSQUAREBRACKET acceso_dimvar_2 exp acceso_dimvar_3 RSQUAREBRACKET LSQUAREBRACKET . exp RSQUAREBRACKET
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 317

state 306

    (131) s -> ELSE estatuto_else . bloque
    (50) bloque -> . LBRACKET l RBRACKET

    LBRACKET        shift and go to state 70

    bloque                         shift and go to state 318

state 307

    (129) condicion -> IF LPARENTHESIS expresion RPARENTHESIS estatuto_if_1 bloque s estatuto_endif .

    SEMICOLON       reduce using rule 129 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS estatuto_if_1 bloque s estatuto_endif .)


state 308

    (145) llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS . estatuto_llamadafunc_6
    (155) estatuto_llamadafunc_6 -> .

    SEMICOLON       reduce using rule 155 (estatuto_llamadafunc_6 -> .)
    PRODUCT         reduce using rule 155 (estatuto_llamadafunc_6 -> .)
    DIVISION        reduce using rule 155 (estatuto_llamadafunc_6 -> .)
    PLUS            reduce using rule 155 (estatuto_llamadafunc_6 -> .)
    MINUS           reduce using rule 155 (estatuto_llamadafunc_6 -> .)
    GREATERTHAN     reduce using rule 155 (estatuto_llamadafunc_6 -> .)
    LESSTHAN        reduce using rule 155 (estatuto_llamadafunc_6 -> .)
    NOTEQUAL        reduce using rule 155 (estatuto_llamadafunc_6 -> .)
    LESSEQUAL       reduce using rule 155 (estatuto_llamadafunc_6 -> .)
    GREATEREQUAL    reduce using rule 155 (estatuto_llamadafunc_6 -> .)
    EQUALEQUAL      reduce using rule 155 (estatuto_llamadafunc_6 -> .)
    AND             reduce using rule 155 (estatuto_llamadafunc_6 -> .)
    OR              reduce using rule 155 (estatuto_llamadafunc_6 -> .)
    LPARENTHESIS    reduce using rule 155 (estatuto_llamadafunc_6 -> .)
    CALL            reduce using rule 155 (estatuto_llamadafunc_6 -> .)
    RANDOM          reduce using rule 155 (estatuto_llamadafunc_6 -> .)
    CTEINT          reduce using rule 155 (estatuto_llamadafunc_6 -> .)
    CTEFLOAT        reduce using rule 155 (estatuto_llamadafunc_6 -> .)
    CTESTRING       reduce using rule 155 (estatuto_llamadafunc_6 -> .)
    ID              reduce using rule 155 (estatuto_llamadafunc_6 -> .)
    TRUE            reduce using rule 155 (estatuto_llamadafunc_6 -> .)
    FALSE           reduce using rule 155 (estatuto_llamadafunc_6 -> .)
    COMMA           reduce using rule 155 (estatuto_llamadafunc_6 -> .)
    RPARENTHESIS    reduce using rule 155 (estatuto_llamadafunc_6 -> .)
    RSQUAREBRACKET  reduce using rule 155 (estatuto_llamadafunc_6 -> .)

    estatuto_llamadafunc_6         shift and go to state 319

state 309

    (151) u -> exp estatuto_llamadafunc_3 COMMA . estatuto_llamadafunc_4 u
    (153) estatuto_llamadafunc_4 -> .

    LPARENTHESIS    reduce using rule 153 (estatuto_llamadafunc_4 -> .)
    PLUS            reduce using rule 153 (estatuto_llamadafunc_4 -> .)
    MINUS           reduce using rule 153 (estatuto_llamadafunc_4 -> .)
    CALL            reduce using rule 153 (estatuto_llamadafunc_4 -> .)
    RANDOM          reduce using rule 153 (estatuto_llamadafunc_4 -> .)
    CTEINT          reduce using rule 153 (estatuto_llamadafunc_4 -> .)
    CTEFLOAT        reduce using rule 153 (estatuto_llamadafunc_4 -> .)
    CTESTRING       reduce using rule 153 (estatuto_llamadafunc_4 -> .)
    ID              reduce using rule 153 (estatuto_llamadafunc_4 -> .)
    TRUE            reduce using rule 153 (estatuto_llamadafunc_4 -> .)
    FALSE           reduce using rule 153 (estatuto_llamadafunc_4 -> .)

    estatuto_llamadafunc_4         shift and go to state 320

state 310

    (126) r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp . RSQUAREBRACKET

    RSQUAREBRACKET  shift and go to state 321


state 311

    (180) starparam -> LPARENTHESIS exp COMMA exp COMMA exp .

    RPARENTHESIS    reduce using rule 180 (starparam -> LPARENTHESIS exp COMMA exp COMMA exp .)


state 312

    (181) triangleparam -> LPARENTHESIS exp COMMA exp COMMA exp .

    RPARENTHESIS    reduce using rule 181 (triangleparam -> LPARENTHESIS exp COMMA exp COMMA exp .)


state 313

    (177) lineparam -> LPARENTHESIS exp COMMA exp COMMA exp . COMMA exp

    COMMA           shift and go to state 322


state 314

    (178) squareparam -> LPARENTHESIS exp COMMA exp COMMA exp .

    RPARENTHESIS    reduce using rule 178 (squareparam -> LPARENTHESIS exp COMMA exp COMMA exp .)


state 315

    (182) arcparam -> LPARENTHESIS exp COMMA exp COMMA exp . COMMA exp COMMA exp

    COMMA           shift and go to state 323


state 316

    (179) circleparam -> LPARENTHESIS exp COMMA exp COMMA exp .

    RPARENTHESIS    reduce using rule 179 (circleparam -> LPARENTHESIS exp COMMA exp COMMA exp .)


state 317

    (65) aa -> LSQUAREBRACKET acceso_dimvar_2 exp acceso_dimvar_3 RSQUAREBRACKET LSQUAREBRACKET exp . RSQUAREBRACKET

    RSQUAREBRACKET  shift and go to state 324


state 318

    (131) s -> ELSE estatuto_else bloque .

    SEMICOLON       reduce using rule 131 (s -> ELSE estatuto_else bloque .)


state 319

    (145) llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6 .

    PRODUCT         reduce using rule 145 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6 .)
    DIVISION        reduce using rule 145 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6 .)
    PLUS            reduce using rule 145 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6 .)
    MINUS           reduce using rule 145 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6 .)
    GREATERTHAN     reduce using rule 145 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6 .)
    LESSTHAN        reduce using rule 145 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6 .)
    NOTEQUAL        reduce using rule 145 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6 .)
    LESSEQUAL       reduce using rule 145 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6 .)
    GREATEREQUAL    reduce using rule 145 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6 .)
    EQUALEQUAL      reduce using rule 145 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6 .)
    LPARENTHESIS    reduce using rule 145 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6 .)
    CALL            reduce using rule 145 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6 .)
    RANDOM          reduce using rule 145 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6 .)
    CTEINT          reduce using rule 145 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6 .)
    CTEFLOAT        reduce using rule 145 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6 .)
    CTESTRING       reduce using rule 145 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6 .)
    ID              reduce using rule 145 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6 .)
    TRUE            reduce using rule 145 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6 .)
    FALSE           reduce using rule 145 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6 .)
    COMMA           reduce using rule 145 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6 .)
    RPARENTHESIS    reduce using rule 145 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6 .)
    SEMICOLON       reduce using rule 145 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6 .)
    AND             reduce using rule 145 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6 .)
    OR              reduce using rule 145 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6 .)
    RSQUAREBRACKET  reduce using rule 145 (llamadafunc -> CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6 .)


state 320

    (151) u -> exp estatuto_llamadafunc_3 COMMA estatuto_llamadafunc_4 . u
    (150) u -> . exp estatuto_llamadafunc_3
    (151) u -> . exp estatuto_llamadafunc_3 COMMA estatuto_llamadafunc_4 u
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    u                              shift and go to state 325
    exp                            shift and go to state 280

state 321

    (126) r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .

    PRODUCT         reduce using rule 126 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    DIVISION        reduce using rule 126 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    PLUS            reduce using rule 126 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    MINUS           reduce using rule 126 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    SEMICOLON       reduce using rule 126 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    GREATERTHAN     reduce using rule 126 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    LESSTHAN        reduce using rule 126 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    NOTEQUAL        reduce using rule 126 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    LESSEQUAL       reduce using rule 126 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    GREATEREQUAL    reduce using rule 126 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    EQUALEQUAL      reduce using rule 126 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    AND             reduce using rule 126 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    OR              reduce using rule 126 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    LPARENTHESIS    reduce using rule 126 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    CALL            reduce using rule 126 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    RANDOM          reduce using rule 126 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    CTEINT          reduce using rule 126 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    CTEFLOAT        reduce using rule 126 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    CTESTRING       reduce using rule 126 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    ID              reduce using rule 126 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    TRUE            reduce using rule 126 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    FALSE           reduce using rule 126 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    COMMA           reduce using rule 126 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    RPARENTHESIS    reduce using rule 126 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)
    RSQUAREBRACKET  reduce using rule 126 (r -> LSQUAREBRACKET exp RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)


state 322

    (177) lineparam -> LPARENTHESIS exp COMMA exp COMMA exp COMMA . exp
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 326

state 323

    (182) arcparam -> LPARENTHESIS exp COMMA exp COMMA exp COMMA . exp COMMA exp
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 327

state 324

    (65) aa -> LSQUAREBRACKET acceso_dimvar_2 exp acceso_dimvar_3 RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .

    EQUAL           reduce using rule 65 (aa -> LSQUAREBRACKET acceso_dimvar_2 exp acceso_dimvar_3 RSQUAREBRACKET LSQUAREBRACKET exp RSQUAREBRACKET .)


state 325

    (151) u -> exp estatuto_llamadafunc_3 COMMA estatuto_llamadafunc_4 u .

    RPARENTHESIS    reduce using rule 151 (u -> exp estatuto_llamadafunc_3 COMMA estatuto_llamadafunc_4 u .)


state 326

    (177) lineparam -> LPARENTHESIS exp COMMA exp COMMA exp COMMA exp .

    RPARENTHESIS    reduce using rule 177 (lineparam -> LPARENTHESIS exp COMMA exp COMMA exp COMMA exp .)


state 327

    (182) arcparam -> LPARENTHESIS exp COMMA exp COMMA exp COMMA exp . COMMA exp

    COMMA           shift and go to state 328


state 328

    (182) arcparam -> LPARENTHESIS exp COMMA exp COMMA exp COMMA exp COMMA . exp
    (89) exp -> . termino exp_5 ab
    (96) termino -> . factor exp_4 ac
    (103) factor -> . ad
    (104) factor -> . ae
    (105) factor -> . af
    (106) factor -> . opfunc
    (107) ad -> . LPARENTHESIS exp_6 expresion RPARENTHESIS exp_7
    (110) ae -> . ag varcte
    (111) af -> . llamadafunc
    (159) opfunc -> . randomfunc
    (112) ag -> . PLUS
    (113) ag -> . MINUS
    (114) ag -> .
    (145) llamadafunc -> . CALL ID estatuto_llamadafunc_1 LPARENTHESIS estatuto_llamadafunc_2 t estatuto_llamadafunc_5 RPARENTHESIS estatuto_llamadafunc_6
    (160) randomfunc -> . RANDOM LPARENTHESIS exp COMMA exp RPARENTHESIS

    LPARENTHESIS    shift and go to state 112
    PLUS            shift and go to state 110
    MINUS           shift and go to state 108
    CTEINT          reduce using rule 114 (ag -> .)
    CTEFLOAT        reduce using rule 114 (ag -> .)
    CTESTRING       reduce using rule 114 (ag -> .)
    ID              reduce using rule 114 (ag -> .)
    TRUE            reduce using rule 114 (ag -> .)
    FALSE           reduce using rule 114 (ag -> .)
    CALL            shift and go to state 97
    RANDOM          shift and go to state 88

    ae                             shift and go to state 107
    ad                             shift and go to state 103
    ag                             shift and go to state 104
    af                             shift and go to state 105
    randomfunc                     shift and go to state 90
    termino                        shift and go to state 106
    llamadafunc                    shift and go to state 109
    factor                         shift and go to state 111
    opfunc                         shift and go to state 113
    exp                            shift and go to state 329

state 329

    (182) arcparam -> LPARENTHESIS exp COMMA exp COMMA exp COMMA exp COMMA exp .

    RPARENTHESIS    reduce using rule 182 (arcparam -> LPARENTHESIS exp COMMA exp COMMA exp COMMA exp COMMA exp .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CTESTRING in state 119 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 141 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 141 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 242 resolved as shift
